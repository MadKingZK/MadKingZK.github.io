<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python单链表实现list各种方法以及反转单链表</title>
      <link href="posts/708ccfc52bb2ad07.html"/>
      <url>posts/708ccfc52bb2ad07.html</url>
      
        <content type="html"><![CDATA[<p><strong>python实现了单链表的各种方法，尽量使用了魔法函数实现</strong></p><ul><li>is_empty() 链表是否为空</li><li>len() 链表长度</li><li>for in 遍历迭代器方式，遍历出所有元素</li><li>add(item) 链表头部添加元素</li><li>append(item) 链表尾部添加元素</li><li>insert(pos, item) 指定位置添加元素</li><li>remove(item) 删除节点</li><li>item in 或者 find(item) 查找节点是否存在</li><li>reversed(slink_list) 反转链表，并返回self._head（只是作为一个返回，直接遍历slink_list即可）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;单链表的结点&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, item</span>):</span></span><br><span class="line">        <span class="comment"># item存放数据元素</span></span><br><span class="line">        self.item = item</span><br><span class="line">        <span class="comment"># next是下一个节点的标识</span></span><br><span class="line">        self.<span class="built_in">next</span> = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SingleLinkList</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;单链表&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self._head = <span class="literal">None</span></span><br><span class="line">        self.__cur = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_empty</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;判断是否为空&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self._head <span class="keyword">is</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__len__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;获取长度&quot;&quot;&quot;</span></span><br><span class="line">        length = <span class="number">0</span></span><br><span class="line">        cur = self._head</span><br><span class="line">        <span class="keyword">while</span> cur:</span><br><span class="line">            length += <span class="number">1</span></span><br><span class="line">            cur = cur.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">return</span> length</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;实现可迭代&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        self.__cur = self._head</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__next__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;实现可迭代&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.__cur:</span><br><span class="line">            item = self.__cur.item</span><br><span class="line">            self.__cur = self.__cur.<span class="built_in">next</span></span><br><span class="line">            <span class="keyword">return</span> item</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> StopIteration()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__contains__</span>(<span class="params">self, item</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;实现in方法判断item是否在链表中&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.is_empty():</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cur = self._head</span><br><span class="line">            <span class="keyword">while</span> cur:</span><br><span class="line">                <span class="keyword">if</span> cur.item == item:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    cur = cur.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reversed__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;实现reversed方法，反转链表&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.is_empty():</span><br><span class="line">            <span class="keyword">return</span> self._head</span><br><span class="line">        pre = <span class="literal">None</span></span><br><span class="line">        cur = self._head</span><br><span class="line">        <span class="keyword">while</span> cur:</span><br><span class="line">            _next = cur.<span class="built_in">next</span></span><br><span class="line">            cur.<span class="built_in">next</span> = pre</span><br><span class="line">            pre = cur</span><br><span class="line">            cur = _next</span><br><span class="line">        self._head = pre</span><br><span class="line">        <span class="keyword">return</span> self._head</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span>(<span class="params">self, item</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;链表尾部追加元素&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self._head:</span><br><span class="line">            cur = self._head</span><br><span class="line">            <span class="keyword">while</span> cur.<span class="built_in">next</span>:</span><br><span class="line">                cur = cur.<span class="built_in">next</span></span><br><span class="line">            node = Node(item)</span><br><span class="line">            cur.<span class="built_in">next</span> = node</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self._head = Node(item)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">self, item</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;链表头部添加元素&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        node = Node(item)</span><br><span class="line">        node.<span class="built_in">next</span> = self._head</span><br><span class="line">        self._head = node</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_abs_index</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;获取正向索引&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> index &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(self)-index &lt;= <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">raise</span> IndexError(<span class="string">&#x27;索引越界&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> index</span><br><span class="line">        <span class="keyword">elif</span> index &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(self)+index &lt;=<span class="number">0</span>:</span><br><span class="line">                <span class="keyword">raise</span> IndexError(<span class="string">&#x27;索引越界&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">len</span>(self)+index</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert</span>(<span class="params">self, index, item</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;插入元素&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        index = self.get_abs_index(index)</span><br><span class="line">        node = Node(item)</span><br><span class="line">        cur = self._head</span><br><span class="line">        <span class="keyword">if</span> index == <span class="number">0</span>:</span><br><span class="line">            self.add(item)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(index - <span class="number">1</span>):</span><br><span class="line">                cur = cur.<span class="built_in">next</span></span><br><span class="line">            node.<span class="built_in">next</span> = cur.<span class="built_in">next</span></span><br><span class="line">            cur.<span class="built_in">next</span> = node</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;删除元素&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.is_empty():</span><br><span class="line">            <span class="keyword">raise</span> IndexError(<span class="string">&#x27;空链表，索引越界&#x27;</span>)</span><br><span class="line">        index = self.get_abs_index(index)</span><br><span class="line">        cur = self._head</span><br><span class="line">        pre = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">while</span> index:</span><br><span class="line">            pre = cur</span><br><span class="line">            cur = cur.<span class="built_in">next</span></span><br><span class="line">            index -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> pre:</span><br><span class="line">            pre.<span class="built_in">next</span> = cur.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self._head = cur.<span class="built_in">next</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find</span>(<span class="params">self, item</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;查找元素&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.is_empty():</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cur = self._head</span><br><span class="line">            <span class="keyword">while</span> cur:</span><br><span class="line">                <span class="keyword">if</span> cur.item == item:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    cur = cur.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    slink_list = SingleLinkList()</span><br><span class="line">    <span class="comment"># 尾部追加</span></span><br><span class="line">    slink_list.append(<span class="number">1</span>)</span><br><span class="line">    slink_list.append(<span class="number">2</span>)</span><br><span class="line">    slink_list.append(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 头部追加</span></span><br><span class="line">    slink_list.add(<span class="number">4</span>)</span><br><span class="line">    slink_list.add(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 插入</span></span><br><span class="line">    slink_list.insert(-<span class="number">2</span>, <span class="number">10</span>)</span><br><span class="line">    slink_list.insert(<span class="number">2</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 删除</span></span><br><span class="line">    slink_list.remove(<span class="number">3</span>)</span><br><span class="line">    slink_list.remove(-<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查看长度</span></span><br><span class="line">    print(<span class="built_in">len</span>(slink_list))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> slink_list:</span><br><span class="line">        print(item)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查找</span></span><br><span class="line">    print(slink_list.find(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># in方式查找</span></span><br><span class="line">    print(<span class="number">5</span> <span class="keyword">in</span> slink_list)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 反转</span></span><br><span class="line">    <span class="built_in">reversed</span>(slink_list)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> slink_list:</span><br><span class="line">        print(item)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单链表 </category>
          
          <category> 魔法函数 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python列表扁平化</title>
      <link href="posts/706c2bdd23906681.html"/>
      <url>posts/706c2bdd23906681.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flatten</span>(<span class="params">lst</span>):</span></span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> lst:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(item, <span class="built_in">list</span>):</span><br><span class="line">            res.extend(flatten(item))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res.append(item)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    a = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, [<span class="number">4</span>, <span class="number">5</span>]], <span class="number">6</span>, [<span class="number">7</span>, <span class="number">8</span>], <span class="number">9</span>]</span><br><span class="line">    res = flatten(a)</span><br><span class="line">    print(res)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 扁平化 </category>
          
          <category> 列表 </category>
          
          <category> 数组 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Atlassian全软件+插件破解与部署(confluece、jira、fisheye等)</title>
      <link href="posts/0d0806df1fec8d39.html"/>
      <url>posts/0d0806df1fec8d39.html</url>
      
        <content type="html"><![CDATA[<h2 id="支持的服务列表"><a href="#支持的服务列表" class="headerlink" title="支持的服务列表"></a>支持的服务列表</h2><h4 id="Support-almost-any-version"><a href="#Support-almost-any-version" class="headerlink" title="Support (almost any version):"></a>Support (almost any version):</h4><ul><li>JIRA Software</li><li>JIRA Core</li><li>JIRA Service Desk</li><li>JIRA plugin: Capture</li><li>JIRA plugin: Training</li><li>JIRA plugin: Portfolio</li><li>Confluence</li><li>Confluence plugin: Questions</li><li>Confluence plugin: Team Calendars</li><li>Bamboo</li><li>Bitbucket</li><li>FishEye</li><li>Crowd</li><li>Crucible</li><li>支持Atlassian家几乎所有产品，同时支持插件。</li><li>支持DataCenter模式。</li><li>相比较于传统的crack来说可以很容易的升级你的服务，而不用重新再次破解。</li><li>提供基于java的命令行 keygen，更方便在终端环境使用</li></ul><h2 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h2><h4 id="下面部署都以confluence为例"><a href="#下面部署都以confluence为例" class="headerlink" title="下面部署都以confluence为例"></a>下面部署都以confluence为例</h4><ol><li>下载</li></ol><p>下载jar包：atlassian-agent.jar<br>将jar包放到Atlassian系列服务器上，找个稳定不会轻易清理的目录，例如/root/soft</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@test-xconfluence:~/soft<span class="comment"># readlink -f atlassian-agent.jar</span></span><br><span class="line">/root/soft/atlassian-agent.jar</span><br></pre></td></tr></table></figure><ol start="2"><li>设置环境变量</li></ol><p><strong>设置环境变量CATALINA_OPTS（这其实是Tomcat的环境变量，用来指定其启动java程序时附带的参数），把-javaagent参数附带上。具体可以这么做</strong></p><ul><li>你可以把：export CATALINA_OPTS=”-javaagent:/path/to/atlassian-agent.jar ${CATALINA_OPTS}”这样的命令放到.bashrc或.bash_profile这样的文件内。</li><li>你可以把：export CATALINA_OPTS=”-javaagent:/path/to/atlassian-agent.jar ${CATALINA_OPTS}”这样的命令放到服务安装所在bin目录下的setenv.sh或setenv.bat（供windows使用）中。</li><li>你还可以直接命令行执行：CATALINA_OPTS=”-javaagent:/path/to/atlassian-agent.jar” /path/to/start-confluence.sh来启动你的服务。</li><li>或者你所知的其他修改环境变量的方法，但如果你机器上有无关的Tomcat服务，则不建议修改全局CATALINA_OPTS环境变量。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@test-xconfluence:~<span class="comment"># cat /etc/profile | grep CATALINA_OPTS</span></span><br><span class="line"><span class="built_in">export</span> CATALINA_OPTS=<span class="string">&quot;-javaagent:/root/soft/atlassian-agent.jar <span class="variable">$&#123;CATALINA_OPTS&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">root@test-xconfluence:~<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure><ol start="3"><li>重启confluence</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">root@test-xconfluence:~<span class="comment"># cd /data/server/atlassian/confluence/bin</span></span><br><span class="line">root@test-xconfluence:/data/server/atlassian/confluence/bin<span class="comment"># ls</span></span><br><span class="line">bootstrap.jar                                     setenv.sh</span><br><span class="line">catalina.bat                                      setenv.sh.orig</span><br><span class="line">catalina.sh                                       setjre.bat</span><br><span class="line">catalina-tasks.xml                                setjre.sh</span><br><span class="line">ciphers.bat                                       setup_user.sh</span><br><span class="line">ciphers.sh                                        shutdown.bat</span><br><span class="line">commons-daemon.jar                                shutdown.sh</span><br><span class="line">commons-daemon-native.tar.gz                      start-confluence.bat</span><br><span class="line">configtest.bat                                    start-confluence.sh</span><br><span class="line">configtest.sh                                     startup.bat</span><br><span class="line">confluence-context-path-extractor.jar             startup.sh</span><br><span class="line">daemon.sh                                         stop-confluence.bat</span><br><span class="line">digest.bat                                        stop-confluence.sh</span><br><span class="line">digest.sh                                         synchrony</span><br><span class="line">display-help.bat                                  synchrony-proxy-watchdog.jar</span><br><span class="line">display-help.sh                                   tcnative-1.dll</span><br><span class="line">install_linux_service.sh                          tomcat9.exe</span><br><span class="line">makebase.bat                                      tomcat9w.exe</span><br><span class="line">makebase.sh                                       tomcat-juli.jar</span><br><span class="line">OS X - Run Confluence In Background.command       tomcat-native.tar.gz</span><br><span class="line">OS X - Run Confluence In Terminal Window.command  tool-wrapper.bat</span><br><span class="line">OS X - Stop Confluence.command                    tool-wrapper.sh</span><br><span class="line">service.bat                                       user.sh</span><br><span class="line">setclasspath.bat                                  version.bat</span><br><span class="line">setclasspath.sh                                   version.sh</span><br><span class="line">setenv.bat</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">root@test-xconfluence:/data/server/atlassian/confluence/bin<span class="comment"># ./stop-confluence.sh</span></span><br><span class="line">executing as current user</span><br><span class="line">If you encounter issues starting up Confluence, please see the Installation guide at http://confluence.atlassian.com/display/DOC/Confluence+Installation+Guide</span><br><span class="line"> </span><br><span class="line">Server startup logs are located <span class="keyword">in</span> /data/server/atlassian/confluence/logs/catalina.out</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">Using Java: /data/server/atlassian/confluence/jre//bin/java</span><br><span class="line">2020-04-25 02:18:42,444 INFO [main] [atlassian.confluence.bootstrap.SynchronyProxyWatchdog] A Context element <span class="keyword">for</span> <span class="variable">$&#123;confluence.context.path&#125;</span>/synchrony-proxy is found <span class="keyword">in</span> /data/server/atlassian/confluence/conf/server.xml. No further action is required</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">Using CATALINA_BASE:   /data/server/atlassian/confluence</span><br><span class="line">Using CATALINA_HOME:   /data/server/atlassian/confluence</span><br><span class="line">Using CATALINA_TMPDIR: /data/server/atlassian/confluence/temp</span><br><span class="line">Using JRE_HOME:        /data/server/atlassian/confluence/jre/</span><br><span class="line">Using CLASSPATH:       /data/server/atlassian/confluence/bin/bootstrap.jar:/data/server/atlassian/confluence/bin/tomcat-juli.jar</span><br><span class="line">Using CATALINA_PID:    /data/server/atlassian/confluence/work/catalina.pid</span><br><span class="line">Tomcat did not stop <span class="keyword">in</span> time.</span><br><span class="line">To aid diagnostics a thread dump has been written to standard out.</span><br><span class="line">Killing Tomcat with the PID: 4439</span><br><span class="line">The Tomcat process has been killed.</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">root@test-xconfluence:/data/server/atlassian/confluence/bin<span class="comment"># ./start-confluence.sh</span></span><br><span class="line"> </span><br><span class="line">To run Confluence <span class="keyword">in</span> the foreground, start the server with start-confluence.sh -<span class="built_in">fg</span></span><br><span class="line">executing as current user</span><br><span class="line">If you encounter issues starting up Confluence, please see the Installation guide at http://confluence.atlassian.com/display/DOC/Confluence+Installation+Guide</span><br><span class="line"> </span><br><span class="line">Server startup logs are located <span class="keyword">in</span> /data/server/atlassian/confluence/logs/catalina.out</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">Using Java: /data/server/atlassian/confluence/jre//bin/java</span><br><span class="line">2020-04-25 02:19:09,908 INFO [main] [atlassian.confluence.bootstrap.SynchronyProxyWatchdog] A Context element <span class="keyword">for</span> <span class="variable">$&#123;confluence.context.path&#125;</span>/synchrony-proxy is found <span class="keyword">in</span> /data/server/atlassian/confluence/conf/server.xml. No further action is required</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">Using CATALINA_BASE:   /data/server/atlassian/confluence</span><br><span class="line">Using CATALINA_HOME:   /data/server/atlassian/confluence</span><br><span class="line">Using CATALINA_TMPDIR: /data/server/atlassian/confluence/temp</span><br><span class="line">Using JRE_HOME:        /data/server/atlassian/confluence/jre/</span><br><span class="line">Using CLASSPATH:       /data/server/atlassian/confluence/bin/bootstrap.jar:/data/server/atlassian/confluence/bin/tomcat-juli.jar</span><br><span class="line">Using CATALINA_PID:    /data/server/atlassian/confluence/work/catalina.pid</span><br><span class="line">Tomcat started.</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">root@test-xconfluence:/data/server/atlassian/confluence/bin<span class="comment"># ps axu | grep confluence</span></span><br><span class="line">root      6434  211 36.8 8202144 3009516 pts/3 Sl   02:19   1:24 /data/server/atlassian/confluence/jre//bin/java -Djava.util.logging.config.file=/data/server/atlassian/confluence/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -javaagent:/root/soft/atlassian-agent.jar -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -XX:ReservedCodeCacheSize=512m -XX:+UseCodeCacheFlushing -Dconfluence.context.path= -Datlassian.plugins.startup.options= -Dorg.apache.tomcat.websocket.DEFAULT_BUFFER_SIZE=32768 -Dsynchrony.enable.xhr.fallback=<span class="literal">true</span> -Xms4096m -Xmx4096m -XX:+UseG1GC -Datlassian.plugins.enable.wait=300 -Djava.awt.headless=<span class="literal">true</span> -XX:G1ReservePercent=20 -Xloggc:/data/server/atlassian/confluence/logs/gc-2020-04-25_02-19-09.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=2M -XX:-PrintGCDetails -XX:+PrintGCDateStamps -XX:-PrintTenuringDistribution -javaagent:/root/soft/atlassian-agent.jar -Dignore.endorsed.dirs= -classpath /data/server/atlassian/confluence/bin/bootstrap.jar:/data/server/atlassian/confluence/bin/tomcat-juli.jar -Dcatalina.base=/data/server/atlassian/confluence -Dcatalina.home=/data/server/atlassian/confluence -Djava.io.tmpdir=/data/server/atlassian/confluence/temp org.apache.catalina.startup.Bootstrap start</span><br></pre></td></tr></table></figure><p><strong>启动后用 ps aux | grep confluence 检查，查看启动是否带有参数：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:/root/soft/atlassian-agent.jar</span><br></pre></td></tr></table></figure><p><strong>上面启动后检查，是带有破解插件参数的，然后查看日志，最后成功启动后，会输出一行日志：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">============================== agent working ==============================</span><br></pre></td></tr></table></figure><ol start="4"><li>生成License Key</li></ol><p><strong>执行指令：java -jar atlassian-agent.jar –help 查看帮助</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">root@test-xconfluence:~/soft<span class="comment"># java -jar atlassian-agent.jar --help</span></span><br><span class="line"> </span><br><span class="line">====================================================</span><br><span class="line">=======        Atlassian Crack Agent         =======</span><br><span class="line">=======           https://zhile.io           =======</span><br><span class="line">=======          QQ Group: 30347511          =======</span><br><span class="line">====================================================</span><br><span class="line"> </span><br><span class="line">KeyGen usage: java -jar /root/soft/atlassian-agent.jar [-d] [-h] -m &lt;arg&gt; [-n</span><br><span class="line">       &lt;arg&gt;] -o &lt;arg&gt; -p &lt;arg&gt; -s &lt;arg&gt;</span><br><span class="line"> -d,--datacenter           Data center license[default: <span class="literal">false</span>]        是否是datacenter，即数据中心；数据中心可实现分布式部署</span><br><span class="line"> -h,--<span class="built_in">help</span>                 Print <span class="built_in">help</span> message                         列出帮助信息</span><br><span class="line"> -m,--mail &lt;arg&gt;           License email                              License 邮箱</span><br><span class="line"> -n,--name &lt;arg&gt;           License name[default: &lt;license email&gt;]     License 名称</span><br><span class="line"> -o,--organisation &lt;arg&gt;   License organisation                       License 所属组织名称</span><br><span class="line"> -p,--product &lt;arg&gt;        License product, support:                  指明要申请哪类服务的License，下面都是参数与对应的服务</span><br><span class="line">                           [crowd: Crowd]                            </span><br><span class="line">                           [questions: Questions plugin <span class="keyword">for</span> Confluence]   </span><br><span class="line">                           [crucible: Crucible]</span><br><span class="line">                           [capture: Capture plugin <span class="keyword">for</span> JIRA]</span><br><span class="line">                           [conf: Confluence]</span><br><span class="line">                           [training: Training plugin <span class="keyword">for</span> JIRA]</span><br><span class="line">                           [*: Third party plugin key, looks like:</span><br><span class="line">                           com.foo.bar]</span><br><span class="line">                           [bitbucket: Bitbucket]</span><br><span class="line">                           [tc: Team Calendars plugin <span class="keyword">for</span> Confluence]</span><br><span class="line">                           [bamboo: Bamboo]</span><br><span class="line">                           [fisheye: FishEye]</span><br><span class="line">                           [portfolio: Portfolio plugin <span class="keyword">for</span> JIRA]</span><br><span class="line">                           [jc: JIRA Core]</span><br><span class="line">                           [jsd: JIRA Service Desk]</span><br><span class="line">                           [jira: JIRA Software(common jira)]</span><br><span class="line"> -s,--serverid &lt;arg&gt;       License server ID                         服务器ID，可以在confluence的License详情查看</span><br><span class="line"> </span><br><span class="line">================================================================================</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Crack agent usage: append -javaagent arg to system environment: JAVA_OPTS.</span></span><br><span class="line"><span class="comment"># Example(execute this command or append it to setenv.sh/setenv.bat file):</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">export</span> JAVA_OPTS=<span class="string">&quot;-javaagent:/root/soft/atlassian-agent.jar <span class="variable">$&#123;JAVA_OPTS&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Then start your confluence/jira server.</span></span><br></pre></td></tr></table></figure><ol start="5"><li>生成秘钥<br>以一个主题插件为例</li></ol><ul><li><p>打开插件市场<br><a href="https://imgtu.com/i/6T1jMQ"><img src="https://z3.ax1x.com/2021/03/23/6T1jMQ.png" alt="6T1jMQ.png"></a></p></li><li><p>查找「 Redefine for Confluence 」插件，并点击下载<br><a href="https://imgtu.com/i/6T1Oxg"><img src="https://z3.ax1x.com/2021/03/23/6T1Oxg.png" alt="6T1Oxg.png"></a></p></li><li><p>下载完成后在插件管理中找到该插件，记录下App Key<br><a href="https://imgtu.com/i/6T1vrj"><img src="https://z3.ax1x.com/2021/03/23/6T1vrj.png" alt="6T1vrj.png"></a></p></li></ul><ul><li>点开License Detail，找到「 Server ID 」，记录下来</li><li>执行指令，申请「 Redefine for Confluence  」的 License Key</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@test-xconfluence:~/soft<span class="comment"># java -jar atlassian-agent.jar -d true -m madking@madblog.cn -o madblog -p &#x27;com.refinedwiki.confluence.plugins.theme.original&#x27; -s LMN3-9OIG-EFGH-ABCD</span></span><br><span class="line"> </span><br><span class="line">====================================================</span><br><span class="line">=======        Atlassian Crack Agent         =======</span><br><span class="line">=======           https://zhile.io           =======</span><br><span class="line">=======          QQ Group: 30347511          =======</span><br><span class="line">====================================================</span><br><span class="line"> </span><br><span class="line">Your license code(Don<span class="string">&#x27;t copy this line!!!):</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">AAABBB0ODAoPeJyVUstuwjAQvPsrIvWcEBwiHlKkQhJVVDyqBnpfwgIrHCeyHQp8fU0AtaraA5J98</span></span><br><span class="line"><span class="string">Hh3NDuzTxkYZ1gph4eOzwdBd8C5E2cLh/vcZ7FCMFTKBAxGF8T1Oy4P2YRylBoXpwpnUGAUz6fT9</span></span><br><span class="line"><span class="string">D0eDycsPYCom6ZoA0IjS1DniqoGWUpBBRlcO+LK4KxOzs6YSg9arfOOBHpUsrnagiR9JTkSlJJAb</span></span><br><span class="line"><span class="string">qFkcSkN5CadAonobLF9XT7/KPDysmD2UxqUIHNMjxWp0018r+/6XXuYLfIUbkji+pP2ZJvkRtRo6</span></span><br><span class="line"><span class="string">71K1FuS2jM7LNArFdkXCA8toaoUaYyMqpFlqA6oxkk0elsGbn+evbov7VnmDkdxwmZ1sUI13yw1K</span></span><br><span class="line"><span class="string">h257btZf4t5q1W+A42/HX5cpGWAuFF6Ffk4g7WWDrcRb/l82BkuKXCW1avvHK8upLPIXnfSDnvdb</span></span><br><span class="line"><span class="string">PPPPPPPPPPPPPPPPPPPPPPD6jJas1NfCXr0CTAsAhQ+cxgwwT1HUN6c/mtZm5w9LB/ePgIUQrPse</span></span><br><span class="line"><span class="string">PPPPPPPPPPPPPPPPPPPPPP=X02ht</span></span><br></pre></td></tr></table></figure><ul><li>拷贝生成的key，填入到「 Redefine for Confluence 」插件管理界面中的License Key填入项，点击更新即可<br><a href="https://imgtu.com/i/6T1xqs"><img src="https://z3.ax1x.com/2021/03/23/6T1xqs.png" alt="6T1xqs.png"></a></li></ul><p><strong>其他Atlassian服务也是同样的注册方式，已在6.15.10成功测试，在最新的7.x版本应该也是可以使用的。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Atlassian </category>
          
          <category> confluence </category>
          
          <category> jira </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atlassian </tag>
            
            <tag> confluence </tag>
            
            <tag> jira </tag>
            
            <tag> crack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kong入门笔记</title>
      <link href="posts/e52afa13e0c050b7.html"/>
      <url>posts/e52afa13e0c050b7.html</url>
      
        <content type="html"><![CDATA[<h2 id="kong部署"><a href="#kong部署" class="headerlink" title="kong部署"></a>kong部署</h2><h4 id="APT资料库"><a href="#APT资料库" class="headerlink" title="APT资料库"></a>APT资料库</h4><p><strong>您也可以通过APT安装Kong；请按照以下页面上的“设置我的方法”部分中的说明进行操作，将分发设置 为适当的值（lsb_release -sc）（例如precise），并将组件设置为main。</strong></p><ul><li><a href="https://bintray.com/kong/kong-deb">Deb资料库</a></li></ul><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ol><li>安装kong</li></ol><p><strong>如果要下载软件包，请执行：</strong></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install openssl libpcre3 procps perl</span><br><span class="line">$ sudo dpkg -i kong-2.1.2.*.deb</span><br></pre></td></tr></table></figure><p><strong>如果您使用apt repository，请执行：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install -y apt-transport-https curl lsb-core</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;deb https://kong.bintray.com/kong-deb <span class="subst">$(lsb_release -sc)</span> main&quot;</span> | sudo tee -a /etc/apt/sources.list</span><br><span class="line">$ curl -o bintray.key https://bintray.com/user/downloadSubjectPublicKey?username=bintray</span><br><span class="line">$ sudo apt-key add bintray.key</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install -y kong</span><br></pre></td></tr></table></figure><ol start="2"><li>准备数据库或声明性配置文件</li></ol><p>Kong可以在有或没有数据库的情况下运行。</p><p>使用数据库时，将使用kong.conf配置文件在启动时设置Kong的配置属性，并将数据库用作所有已配置实体（例如Kong代理的路由和服务）的存储。</p><p>不使用数据库时，将使用kong.conf其配置属性和一个kong.yml 文件将实体指定为声明性配置。</p><ul><li>使用数据库</li></ul><p><a href="https://docs.konghq.com/2.1.x/configuration#database">配置</a> Kong，以便它可以连接到您的数据库。Kong支持<a href="http://www.postgresql.org/">PostgreSQL 9.5+</a>和<a href="http://cassandra.apache.org/">Cassandra 3.xx</a>作为其数据存储。</p><p>如果您使用的是Postgres，请在启动Kong之前配置数据库和用户，即：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER kong; CREATE DATABASE kong OWNER kong;</span><br></pre></td></tr></table></figure><p>现在，运行Kong迁移：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> $ kong migrations bootstrap [-c /path/to/kong.conf]</span><br><span class="line">Kong &lt;0.15的注意事项：Kong版本低于0.15（最高0.14）时，请使用up子命令代替bootstrap。还要注意，Kong &lt;0.15时，永远不能同时运行迁移。一次只能有一个Kong节点执行迁移。对于0.15、1.0及更高版本，此限制被取消。</span><br></pre></td></tr></table></figure><ul><li>没有数据库</li></ul><p>如果要在<a href="https://docs.konghq.com/2.1.x/db-less-and-declarative-config/">无数据库模式</a>下运行Kong ，则应首先生成声明性配置文件。以下命令将kong.yml 在您当前的文件夹中生成一个文件。它包含有关如何填写的说明。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kong config init</span><br></pre></td></tr></table></figure><p>填满kong.yml文件后，编辑kong.conf文件。将database选项设置为off，并将declarative_config选项设置为kong.yml文件的路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">database = off</span><br><span class="line">declarative_config = /path/to/kong.yml</span><br></pre></td></tr></table></figure><p> 3. 启动Kong</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kong start [-c /path/to/kong.conf]</span><br></pre></td></tr></table></figure><p> 4. 使用Kong</p><p>Kong正在运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -i http://localhost:8001/</span><br></pre></td></tr></table></figure><p><a href="https://docs.konghq.com/latest/getting-started/quickstart">5分钟的快速入门</a>快速学习如何使用Kong 。</p><h2 id="kong管理API"><a href="#kong管理API" class="headerlink" title="kong管理API"></a>kong管理API</h2><ol><li>查看kong状态</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># curl -X GET http://192.168.11.14:8001 2&gt;/dev/null | jq &#x27;.&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;plugins&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;enabled_in_cluster&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;hmac-auth&quot;</span>,</span><br><span class="line">      <span class="string">&quot;basic-auth&quot;</span>,</span><br><span class="line">      <span class="string">&quot;oauth2&quot;</span>,</span><br><span class="line">      <span class="string">&quot;cors&quot;</span>,</span><br><span class="line">      <span class="string">&quot;jwt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;prometheus&quot;</span>,</span><br><span class="line">      <span class="string">&quot;key-auth&quot;</span>,</span><br><span class="line">      <span class="string">&quot;kong-path-whitelist&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;available_on_server&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;correlation-id&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;pre-function&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;cors&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;ldap-auth&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;loggly&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;hmac-auth&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;zipkin&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;request-size-limiting&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;azure-functions&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;request-transformer&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;oauth2&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;response-transformer&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;ip-restriction&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;statsd&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;jwt&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;proxy-cache&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;basic-auth&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;key-auth&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;http-log&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;datadog&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;tcp-log&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;kong-path-whitelist&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;post-function&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;prometheus&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;acl&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;kubernetes-sidecar-injector&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;syslog&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;file-log&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;udp-log&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;response-ratelimiting&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;aws-lambda&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;bot-detection&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;rate-limiting&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;request-termination&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;tagline&quot;</span>: <span class="string">&quot;Welcome to kong&quot;</span>,</span><br><span class="line">  <span class="string">&quot;configuration&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;error_default_type&quot;</span>: <span class="string">&quot;text/plain&quot;</span>,</span><br><span class="line">    <span class="string">&quot;admin_ssl_enabled&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;proxy_access_log&quot;</span>: <span class="string">&quot;/data/logs/kong/access.log&quot;</span>,</span><br><span class="line">    <span class="string">&quot;trusted_ips&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;0.0.0.0/0&quot;</span>,</span><br><span class="line">      <span class="string">&quot;::/0&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;prefix&quot;</span>: <span class="string">&quot;/usr/local/kong&quot;</span>,</span><br><span class="line">    <span class="string">&quot;loaded_plugins&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;correlation-id&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;pre-function&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;cors&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;ldap-auth&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;loggly&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;hmac-auth&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;zipkin&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;request-size-limiting&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;azure-functions&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;request-transformer&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;oauth2&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;response-transformer&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;ip-restriction&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;statsd&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;jwt&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;proxy-cache&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;basic-auth&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;key-auth&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;http-log&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;datadog&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;tcp-log&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;syslog&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;post-function&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;rate-limiting&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;acl&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;kubernetes-sidecar-injector&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;bot-detection&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;file-log&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;udp-log&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;response-ratelimiting&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;aws-lambda&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;prometheus&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;kong-path-whitelist&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;request-termination&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;cassandra_username&quot;</span>: <span class="string">&quot;kong&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dns_resolver&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;127.0.0.1:8600&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;pg_user&quot;</span>: <span class="string">&quot;kong&quot;</span>,</span><br><span class="line">    <span class="string">&quot;mem_cache_size&quot;</span>: <span class="string">&quot;512m&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ssl_ciphers&quot;</span>: <span class="string">&quot;ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-AAAA1305:ECDHE-RSA-CHACHA20-AAAA1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-AAA-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256&quot;</span>,</span><br><span class="line">    <span class="string">&quot;nginx_admin_directives&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">&quot;nginx_http_directives&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;value&quot;</span>: <span class="string">&quot;prometheus_metrics 5m&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;lua_shared_dict&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;pg_host&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;nginx_acc_logs&quot;</span>: <span class="string">&quot;/usr/local/kong/logs/access.log&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pg_semaphore_timeout&quot;</span>: 60000,</span><br><span class="line">    <span class="string">&quot;proxy_listen&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;0.0.0.0:8000&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;client_ssl_cert_default&quot;</span>: <span class="string">&quot;/usr/local/kong/ssl/kong-default.crt&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cassandra_ssl&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;db_update_frequency&quot;</span>: 5,</span><br><span class="line">    <span class="string">&quot;db_update_propagation&quot;</span>: 3,</span><br><span class="line">    <span class="string">&quot;stream_listen&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;off&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;nginx_err_logs&quot;</span>: <span class="string">&quot;/usr/local/kong/logs/error.log&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cassandra_port&quot;</span>: 9042,</span><br><span class="line">    <span class="string">&quot;dns_order&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;LAST&quot;</span>,</span><br><span class="line">      <span class="string">&quot;SRV&quot;</span>,</span><br><span class="line">      <span class="string">&quot;A&quot;</span>,</span><br><span class="line">      <span class="string">&quot;CNAME&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;dns_error_ttl&quot;</span>: 1,</span><br><span class="line">    <span class="string">&quot;headers&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;server_tokens&quot;</span>,</span><br><span class="line">      <span class="string">&quot;latency_tokens&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;cassandra_lb_policy&quot;</span>: <span class="string">&quot;RequestRoundRobin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;nginx_sproxy_directives&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">&quot;origins&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">&quot;database&quot;</span>: <span class="string">&quot;cassandra&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pg_database&quot;</span>: <span class="string">&quot;kong&quot;</span>,</span><br><span class="line">    <span class="string">&quot;nginx_worker_processes&quot;</span>: <span class="string">&quot;auto&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lua_package_cpath&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;admin_acc_logs&quot;</span>: <span class="string">&quot;/usr/local/kong/logs/admin_access.log&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lua_package_path&quot;</span>: <span class="string">&quot;/data/server/?.lua;;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;nginx_pid&quot;</span>: <span class="string">&quot;/usr/local/kong/pids/nginx.pid&quot;</span>,</span><br><span class="line">    <span class="string">&quot;upstream_keepalive&quot;</span>: 60,</span><br><span class="line">    <span class="string">&quot;admin_access_log&quot;</span>: <span class="string">&quot;/data/logs/kong/admin_access.log&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cassandra_data_centers&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;dc1:2&quot;</span>,</span><br><span class="line">      <span class="string">&quot;dc2:3&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;ssl_cert_key_default&quot;</span>: <span class="string">&quot;/usr/local/kong/ssl/kong-default.key&quot;</span>,</span><br><span class="line">    <span class="string">&quot;nginx_conf&quot;</span>: <span class="string">&quot;/usr/local/kong/nginx.conf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pg_max_concurrent_queries&quot;</span>: 0,</span><br><span class="line">    <span class="string">&quot;cassandra_repl_factor&quot;</span>: 2,</span><br><span class="line">    <span class="string">&quot;dns_stale_ttl&quot;</span>: 4,</span><br><span class="line">    <span class="string">&quot;proxy_listeners&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;transparent&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;ssl&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;ip&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;proxy_protocol&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;port&quot;</span>: 8000,</span><br><span class="line">        <span class="string">&quot;http2&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;listener&quot;</span>: <span class="string">&quot;0.0.0.0:8000&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;proxy_ssl_enabled&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;ssl_cert_csr_default&quot;</span>: <span class="string">&quot;/usr/local/kong/ssl/kong-default.csr&quot;</span>,</span><br><span class="line">    <span class="string">&quot;db_cache_warmup_entities&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;services&quot;</span>,</span><br><span class="line">      <span class="string">&quot;plugins&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;enabled_headers&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;latency_tokens&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;X-Kong-Proxy-Latency&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;Via&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;server_tokens&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;Server&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;X-Kong-Upstream-Latency&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;X-Kong-Upstream-Status&quot;</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;admin_ssl_cert_default&quot;</span>: <span class="string">&quot;/usr/local/kong/ssl/admin-kong-default.crt&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dns_no_sync&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;db_resurrect_ttl&quot;</span>: 3600,</span><br><span class="line">    <span class="string">&quot;stream_listeners&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">&quot;cassandra_consistency&quot;</span>: <span class="string">&quot;ONE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;client_max_body_size&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;admin_error_log&quot;</span>: <span class="string">&quot;/data/logs/kong/admin_error.log&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pg_ssl_verify&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;dns_not_found_ttl&quot;</span>: 30,</span><br><span class="line">    <span class="string">&quot;pg_ssl&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;pg_timeout&quot;</span>: 5000,</span><br><span class="line">    <span class="string">&quot;client_ssl&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;cassandra_repl_strategy&quot;</span>: <span class="string">&quot;SimpleStrategy&quot;</span>,</span><br><span class="line">    <span class="string">&quot;anonymous_reports&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;log_level&quot;</span>: <span class="string">&quot;notice&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ssl_cipher_suite&quot;</span>: <span class="string">&quot;modern&quot;</span>,</span><br><span class="line">    <span class="string">&quot;nginx_proxy_directives&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">&quot;nginx_kong_conf&quot;</span>: <span class="string">&quot;/usr/local/kong/nginx-kong.conf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cassandra_schema_consensus_timeout&quot;</span>: 10000,</span><br><span class="line">    <span class="string">&quot;dns_hostsfile&quot;</span>: <span class="string">&quot;/etc/hosts&quot;</span>,</span><br><span class="line">    <span class="string">&quot;admin_listeners&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;transparent&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;ssl&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;ip&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;proxy_protocol&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;port&quot;</span>: 8001,</span><br><span class="line">        <span class="string">&quot;http2&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;listener&quot;</span>: <span class="string">&quot;0.0.0.0:8001&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;lua_ssl_verify_depth&quot;</span>: 1,</span><br><span class="line">    <span class="string">&quot;plugins&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;bundled&quot;</span>,</span><br><span class="line">      <span class="string">&quot;kong-path-whitelist&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;real_ip_header&quot;</span>: <span class="string">&quot;X-Real-IP&quot;</span>,</span><br><span class="line">    <span class="string">&quot;admin_ssl_cert_key_default&quot;</span>: <span class="string">&quot;/usr/local/kong/ssl/admin-kong-default.key&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cassandra_ssl_verify&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;cassandra_timeout&quot;</span>: 5000,</span><br><span class="line">    <span class="string">&quot;cassandra_contact_points&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;192.168.11.14&quot;</span>,</span><br><span class="line">      <span class="string">&quot;192.168.11.15&quot;</span>,</span><br><span class="line">      <span class="string">&quot;192.168.11.16&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;real_ip_recursive&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">    <span class="string">&quot;proxy_error_log&quot;</span>: <span class="string">&quot;/data/logs/kong/error.log&quot;</span>,</span><br><span class="line">    <span class="string">&quot;client_ssl_cert_key_default&quot;</span>: <span class="string">&quot;/usr/local/kong/ssl/kong-default.key&quot;</span>,</span><br><span class="line">    <span class="string">&quot;nginx_daemon&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">    <span class="string">&quot;router_consistency&quot;</span>: <span class="string">&quot;strict&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kong_env&quot;</span>: <span class="string">&quot;/usr/local/kong/.kong_env&quot;</span>,</span><br><span class="line">    <span class="string">&quot;nginx_stream_directives&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">&quot;pg_port&quot;</span>: 5432,</span><br><span class="line">    <span class="string">&quot;nginx_kong_stream_conf&quot;</span>: <span class="string">&quot;/usr/local/kong/nginx-kong-stream.conf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;client_body_buffer_size&quot;</span>: <span class="string">&quot;8k&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ssl_preread_enabled&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;nginx_optimizations&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;lua_socket_pool_size&quot;</span>: 30,</span><br><span class="line">    <span class="string">&quot;cassandra_keyspace&quot;</span>: <span class="string">&quot;kong&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ssl_cert_default&quot;</span>: <span class="string">&quot;/usr/local/kong/ssl/kong-default.crt&quot;</span>,</span><br><span class="line">    <span class="string">&quot;db_cache_ttl&quot;</span>: 30,</span><br><span class="line">    <span class="string">&quot;admin_listen&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;0.0.0.0:8001&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.2.1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;node_id&quot;</span>: <span class="string">&quot;115987c1-7ad5-454a-a472-4129445812fc&quot;</span>,</span><br><span class="line">  <span class="string">&quot;lua_version&quot;</span>: <span class="string">&quot;LuaJIT 2.1.0-beta3&quot;</span>,</span><br><span class="line">  <span class="string">&quot;prng_seeds&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;pid: 17466&quot;</span>: 335121721917,</span><br><span class="line">    <span class="string">&quot;pid: 12395&quot;</span>: 282226810415,</span><br><span class="line">    <span class="string">&quot;pid: 12397&quot;</span>: 169518222912,</span><br><span class="line">    <span class="string">&quot;pid: 12394&quot;</span>: 251912312341,</span><br><span class="line">    <span class="string">&quot;pid: 12396&quot;</span>: 220116882062</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;timers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;pending&quot;</span>: 4,</span><br><span class="line">    <span class="string">&quot;running&quot;</span>: 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;kong&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>添加服务</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># curl -X POST http://192.168.11.14:8001/services --data name=madkingtest_service --data url=&#x27;http://madkingtest.madblog.cn&#x27;</span></span><br><span class="line"> </span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>:<span class="string">&quot;madkingtest.madblog.cn&quot;</span>,<span class="string">&quot;created_at&quot;</span>:1597739445,<span class="string">&quot;connect_timeout&quot;</span>:60000,<span class="string">&quot;id&quot;</span>:<span class="string">&quot;6e11c1e6-470c-439b-b246-a3be070b120f&quot;</span>,<span class="string">&quot;protocol&quot;</span>:<span class="string">&quot;http&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;madkingtest_service&quot;</span>,<span class="string">&quot;read_timeout&quot;</span>:60000,<span class="string">&quot;port&quot;</span>:80,<span class="string">&quot;path&quot;</span>:null,<span class="string">&quot;updated_at&quot;</span>:1597739445,<span class="string">&quot;retries&quot;</span>:5,<span class="string">&quot;write_timeout&quot;</span>:60000,<span class="string">&quot;tags&quot;</span>:null&#125;ro</span><br></pre></td></tr></table></figure><ol start="3"><li>查询已添加的服务</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># curl http://192.168.11.14:8001/services/madkingtest_service 2&gt;/dev/null | jq .</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;host&quot;</span>: <span class="string">&quot;madkingtest.madblog.cn&quot;</span>,</span><br><span class="line">  <span class="string">&quot;created_at&quot;</span>: 1597739445,</span><br><span class="line">  <span class="string">&quot;connect_timeout&quot;</span>: 60000,</span><br><span class="line">  <span class="string">&quot;id&quot;</span>: <span class="string">&quot;6e11c1e6-470c-439b-b246-a3be070b120f&quot;</span>,</span><br><span class="line">  <span class="string">&quot;protocol&quot;</span>: <span class="string">&quot;http&quot;</span>,</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;madkingtest_service&quot;</span>,</span><br><span class="line">  <span class="string">&quot;read_timeout&quot;</span>: 60000,</span><br><span class="line">  <span class="string">&quot;port&quot;</span>: 80,</span><br><span class="line">  <span class="string">&quot;path&quot;</span>: null,</span><br><span class="line">  <span class="string">&quot;updated_at&quot;</span>: 1597739445,</span><br><span class="line">  <span class="string">&quot;retries&quot;</span>: 5,</span><br><span class="line">  <span class="string">&quot;write_timeout&quot;</span>: 60000,</span><br><span class="line">  <span class="string">&quot;tags&quot;</span>: null</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>添加路由</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST http://192.168.11.14:8001/services/madkingtest_service/routes --data <span class="string">&#x27;paths[]=/mock&#x27;</span> --data <span class="string">&#x27;name=mocking&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;60cc71c8-4203-41d0-b0bb-126e6aceaff0&quot;</span>,<span class="string">&quot;tags&quot;</span>:null,<span class="string">&quot;paths&quot;</span>:[<span class="string">&quot;\/mock&quot;</span>],<span class="string">&quot;destinations&quot;</span>:null,<span class="string">&quot;protocols&quot;</span>:[<span class="string">&quot;http&quot;</span>,<span class="string">&quot;https&quot;</span>],<span class="string">&quot;created_at&quot;</span>:1597739873,<span class="string">&quot;snis&quot;</span>:null,<span class="string">&quot;hosts&quot;</span>:null,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;mocking&quot;</span>,<span class="string">&quot;preserve_host&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;regex_priority&quot;</span>:0,<span class="string">&quot;strip_path&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;sources&quot;</span>:null,<span class="string">&quot;updated_at&quot;</span>:1597739873,<span class="string">&quot;https_redirect_status_code&quot;</span>:426,<span class="string">&quot;service&quot;</span>:&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;6e11c1e6-470c-439b-b246-a3be070b120f&quot;</span>&#125;,<span class="string">&quot;methods&quot;</span>:null&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>限制速率 (启用”速率限制“插件，将速率限制设置为每分钟5次)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X POST http://&lt;admin-hostname&gt;:8001/plugins \</span><br><span class="line">--data <span class="string">&quot;name=rate-limiting&quot;</span> \</span><br><span class="line">--data <span class="string">&quot;config.minute=5&quot;</span> \</span><br><span class="line">--data <span class="string">&quot;config.policy=local&quot;</span></span><br></pre></td></tr></table></figure><h2 id="kong配置"><a href="#kong配置" class="headerlink" title="kong配置"></a>kong配置</h2><ol><li>kong.conf</li></ol><ul><li>kong安装完后，附带有一个默认配置文件，/etc/kong/kong.conf.default</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/kong/kong.conf.default /etc/kong/kong.conf</span><br></pre></td></tr></table></figure><ul><li>如果注释掉了配置中的所有值，则Kong将使用默认设置运行。开始时，Kong查找可能包含配置文件的几个默认位置:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/kong/kong.conf</span><br><span class="line">/etc/kong.conf</span><br></pre></td></tr></table></figure><ul><li>可以使用以下check命令来验证设置的完整性</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@kong:~<span class="comment"># kong check /etc/kong/kong.conf</span></span><br><span class="line">configuration at /etc/kong/kong.conf is valid</span><br></pre></td></tr></table></figure><ul><li>从配置文件中加载属性时，Kong还将寻找同名的环境变量。这使您可以通过环境变量完全配置Kong，例如，这对于基于容器的基础结构非常方便。<br>要使用环境变量覆盖设置，请声明一个环境变量，其名称为该设置的名称，并带有前缀KONG_和大写字母。<br>例如：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log_level = debug <span class="comment"># in kong.conf</span></span><br></pre></td></tr></table></figure><p>可以用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> KONG_LOG_LEVEL=error</span><br></pre></td></tr></table></figure><ol start="2"><li>kong.conf 注入nginx指令</li></ol><ul><li>注入单个nginx指令：添加到kong.conf文件中的任何前缀为的条目nginx_http_， nginx_proxy_或者nginx_admin_通过删除前缀将其转换为等效的Nginx指令，并将其添加到Nginx配置的相应部分<ul><li>前缀为的条目nginx_http_将注入到整体http 块指令中</li><li>前缀为的条目nginx_proxy_将被注入到server处理Kong代理端口的block指令中</li><li>前缀为的条目nginx_admin_将注入到server处理Kong的Admin API端口的block指令中</li></ul></li><li>在kong.conf 中加入配置：<ul><li>nginx_proxy_large_client_header_buffers=16 128k</li></ul></li><li>在kong的nginx.conf中可以看到<ul><li>large_client_header_buffers 16 128k;</li></ul></li></ul><ol start="3"><li>通过注入的nginx指令包含文件</li></ol><p>nginx的配置，如果想增加整个server块，可以使用nginx_http_include向nginx中注入指令，指向包含其他Nginx设置的文件。</p><p>例如有配置文件my-server.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># custom server</span></span><br><span class="line">server &#123;</span><br><span class="line">  listen 2112;</span><br><span class="line">  location / &#123;</span><br><span class="line">    <span class="comment"># ...more settings...</span></span><br><span class="line">    <span class="built_in">return</span> 200;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在kong.conf文件中添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx_http_include = /path/to/your/my-server.kong.conf</span><br></pre></td></tr></table></figure><p>也可以通过环境变量进行配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> KONG_NGINX_HTTP_INCLUDE=<span class="string">&quot;/path/to/your/my-server.kong.conf&quot;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>相关配置举例：</li></ol><ul><li>配置代理服务端口proxy_listen = 0.0.0.0:443 ssl</li><li>打开http2连接</li><li>proxy_listen = 0.0.0.0:443 http2 ssl</li><li>配置管理服务端口，打开http2admin_listen = 127.0.0.1:8444 http2 ssl</li><li>状态查询端口</li></ul>]]></content>
      
      
      <categories>
          
          <category> kong </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kong </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka权威指南笔记（二）</title>
      <link href="posts/eb5475e4070bf46d.html"/>
      <url>posts/eb5475e4070bf46d.html</url>
      
        <content type="html"><![CDATA[<h4 id="一、生产者"><a href="#一、生产者" class="headerlink" title="一、生产者"></a>一、生产者</h4><ol><li><p><strong>生产者三个必选属性</strong></p><ul><li><p>bootstrap.servers</p><ul><li>指定broker的地址清单，地址格式为host:port</li><li>不需要所有broker的地址，生产者会从给定的broker里查找到其他所有broker信息</li><li>至少提供两个broker地址给生产者，保证可用性</li></ul></li><li><p>key.serializer</p><ul><li>由Kafka提供的序列化器<ul><li>ByteArraySerializer</li><li>StringSerializer</li><li>InterSerializer</li></ul></li><li>其他由生产者自定义的序列化器<ul><li>必须被设置为一个实现了org.apache.kafka.common.serialization.Serializer接口的类</li><li>生产者使用这个类，把键对象序列化为字节数组</li></ul></li></ul></li><li><p>value.serializer</p><ul><li>生产者使用这个类，把值对象序列化为字节数组</li></ul></li></ul></li><li><p><strong>发送消息的三种方式</strong> </p><ul><li>发送并忘记<ul><li>把消息发送给服务器，但并不关心他是否到达</li></ul></li><li>同步发送<ul><li>使用send()方法发送消息，它会返回一个Future对象，调用get()方法进行等待，就可以知道消息是否发送成功</li></ul></li><li>异步发送<ul><li>调用send()方法，并指定一个回调函数，服务器在返回响应时，调用该函数</li></ul></li></ul></li><li><p><strong>生产者配置</strong></p><ul><li>acks<ul><li>指定必须要有多少个分区副本收到消息，生产者才会认为消息写入是成功的，此参数对消息丢失有重要影响</li><li>acks=0，生产者在写入消息后，不会等待任何来自服务器的响应，缺点是可能会丢消息，优点是可以达到很高的吞吐量</li><li>acks=1，只要集群的首领节点收到消息，消费者就会收到一个来自服务器的成功响应</li><li>acks=all，只有当所有参与复制的节点全部都收到消息，生产者才会收到一个来自服务器的响应</li></ul></li><li>buffer.memory<ul><li>设置生产者内存缓冲区的大小，生产者用它来缓冲要发送到服务器的消息，如果缓冲满了，send()方法可能被阻塞，也可能抛出异常，该行为取决于如何设置max.block.ms</li></ul></li><li>retries<ul><li>规定生产者收到服务器端返回错误后，重试的次数</li></ul></li><li>retry.backoff.ms<ul><li>每次失败重试等待的时间，默认是100ms</li><li>重试时间 * 重试次数 需要大于kafka集群从崩溃恢复的时间</li></ul></li><li>batch.size<ul><li>当有多少个消息要发送到同一个分区时，消费者会在同一批次发送</li><li>该参数指定了一个批次的内存大小，按字节计算，不是按消息个数</li></ul></li><li>linger.ms<ul><li>生产者在发送批次之前等待更多消息加入批次的时间</li></ul></li><li>client.id<ul><li>可以是任意的字符串，服务器用它来识别消息的来源，也可以用在日志和配额指标里</li></ul></li><li>request.timeout.ms<ul><li>生产者在发送数据等待服务器返回响应的时间</li></ul></li><li>metadata.fetch.timeout.ms<ul><li>生产者在获取元数据时，等待服务器返回响应的时间</li></ul></li><li>timeout.ms<ul><li>broker在等待副本返回确认响应的时间，如果超时，则返回给生产者异常</li></ul></li><li>max.block.ms<ul><li>指定生产者的缓冲区满，或没有可用的元数据时，send()方法阻塞的时间。</li><li>阻塞时间超过max.block.ms后，生产者抛出异常</li></ul></li></ul></li></ol><h4 id="二、消费者"><a href="#二、消费者" class="headerlink" title="二、消费者"></a>二、消费者</h4><ol><li><p><strong>消费者、消费者组、分区</strong></p><ul><li>消费者从属于消费者组，一个组群里的消费者订阅同一个主题，每个消费者接受主题一部分的分区</li><li>分区与消费者是多对一的关系，既每个消费者可以同时消费多个分区，但每个分区只能被一个消费者消费</li><li>如果消费者数量大于分区数量，则会产生空闲的消费者</li><li>不同消费者组可以去同一个topic上读取数据，互不影响</li></ul></li><li><p><strong>消费者组和分区再平衡</strong></p><ul><li>当一个消费者组新增一个消费者，他会接管一部分原先有其他消费者负责的分区进行读取</li><li>当一个消费者关闭或崩溃，他就会离开群组，原本由该消费者读取的分区，将由群组里的其他消费着来消费</li><li>在topic发生变化时，比如topic新增了分区，就会发生分区重分配</li><li>再均衡：分区所有权从一个消费者转移到另一个消费者</li><li>再均衡使得消费者有了高可用和可伸缩特性</li><li>再均衡期间，消费者无法读取消息，造成整个群组短暂不可用</li><li>消费者通过向被指派的broker发送心跳来维持他们和群组的从属关系，以及他们对分区的所有权关系</li><li>消费者会在轮询消息或者发送偏移量时发送心跳</li><li>如果消费者发送心跳超时，会话就会过期，群组就会认为该消费者已死亡，就会触发一次再均衡</li></ul></li><li><p><strong>消费者四个重要属性</strong></p><ul><li>bootstrap.servers<ul><li>指定了kafka集群的连接字符串</li></ul></li><li>key.deserializer<ul><li>序列化器，生产者使用这个类，把字节数组序列化为键对象</li></ul></li><li>value.deserializer<ul><li>序列化器，生产者使用这个类，把字节数组序列化为值对象</li></ul></li><li>group.id<ul><li>指定了KafkaConsumer属于哪一个消费者组</li></ul></li></ul></li><li><p><strong>订阅主题</strong></p><ul><li>subscribe()方法接受一个主题列表作为参数</li><li>可以调用subscribe()方法时传入一个正则表达式，匹配多个主题，如果有人新创建了主题，切主题与正则表达式匹配，就会触发一次再均衡，消费者就可以读取新添加的主题</li></ul></li><li><p><strong>消费者配置</strong></p><ul><li>fetch.min.bytes<ul><li>指定了消费者从服务器获取记录的最小字节数</li><li>如果可用的数据量小于fetch.min.bytes，那么它会等到有足够的可用数据时才把消息返回给消费者</li><li>如果没有很多可用消息，但是消费者的CPU使用率很高，可以尝试调大该值</li><li>如果消费者比较多，调大该值可以降低broker的负载</li></ul></li><li>fetch.max.wait.ms<ul><li>服务端等待足够数据流入kafka的时间</li><li>如果数据量大于fetch.min.bytes就会立即发送数据</li><li>如果等待时间超过fetch.max.wait.ms就会立即发送数据</li><li>fetch.min.bytes和fetch.max.wait.ms看那个指标先达到</li></ul></li><li>max.patition.fetch.bytes<ul><li>指定服务器从每个分区返回给消费者的最大字节数</li></ul></li><li>session.timeout.ms<ul><li>消费者在认定为死亡之前可以与服务器断开连接的时间</li><li>该值改小可以更快的检测和恢复崩溃节点，但是可能会导致非预期的再均衡</li><li>该值改大可以减少意外的再均衡，但是检测出节点崩溃需要更长的时间</li></ul></li><li>auto.offset.reset<ul><li>指定了消费者在读取一个没有偏移量或者偏移量无效情况下，该如何处理</li><li>latest，默认值，在偏移量无效时，在最新消息处开始读取</li><li>earlist，在偏移量无效时，在起始位置读取分区记录</li></ul></li><li>enable.auto.commit<ul><li>消费者是否自动提交偏移量</li></ul></li><li>patition.assignment.strategy<ul><li>PatitionAssignor根据给定的消费者和主题，决定哪些分区应该被分配给哪个消费者</li><li>Range 默认策略，把主题的若干连续分区分配给消费者</li><li>RangeRobin 把主题所有分区逐个分配给消费者</li></ul></li><li>client.id<ul><li>标识从客户端发来的消息，可以是任意字符</li></ul></li></ul></li><li><p><strong>提交和偏移量</strong></p><ul><li>更新分区当前位置的操作叫做<strong>提交</strong></li><li>所有分区的便宜量被提交到_consumer_offset的主题中</li><li>如果有发生再均衡，每个消费者可能分到新的分区，就需要去读取该分区最后一次提交的偏移量，然后从偏移量指定的地方继续工作</li><li>如果提交的偏移量小于客户端处理的最后一个消息的偏移量，则两个偏移量之间的消息就会被重复处理</li><li>如果提交的偏移量大于客户端处理的最后一个消息的偏移量，则两个偏移量之间的消息就会被丢失</li><li>提交方式<ul><li>自动提交<ul><li>enable.auto.commit被设为true，每过5秒，客户端就会把最大偏移量提交上去</li><li>提交时间间隔由auto.commit.interval.ms控制</li></ul></li><li>手动提交<ul><li>程序决定何时提交偏移量</li><li>enable.auto.commit被设置为false</li><li>broker对提交请求作出回应之前，会一直阻塞</li></ul></li><li>异步提交<ul><li>异步提交偏移量，不等待返回响应</li></ul></li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka权威指南笔记（一）</title>
      <link href="posts/3a249be0be50662b.html"/>
      <url>posts/3a249be0be50662b.html</url>
      
        <content type="html"><![CDATA[<h4 id="一、各组件概念"><a href="#一、各组件概念" class="headerlink" title="一、各组件概念"></a>一、各组件概念</h4><ol><li><p><strong>producer</strong><br>允许一个应用程序发布一串流式的数据到一个或者多个Kafka topic</p></li><li><p><strong>consumer</strong><br>允许一个应用程序订阅一个或多个topic，并且对发布给他们的流式数据进行处理</p></li><li><p><strong>streams</strong><br>允许一个应用程序作为一个流处理器，消费一个或者多个topic产生的输入流，然后生产一个输出流到一个或多个topic中去，再输入输出流中进行有效的转换</p></li><li><p><strong>connector</strong><br>允许构建并运行可重用的生产者或者消费者，将Kafka topics链接到已存在的应用程序或者数据系统</p></li><li><p><strong>topic</strong><br>topic就是数据主题，是数据记录发布的地方，可以用来区分业务系统。Kafka中的Topics总是多订阅者模式，一个topic可以拥有一个或者多个消费者来订阅它的数据</p></li><li><p><strong>patition</strong><br>patition是分区日志，topic是由一个或多个patition组成的。每个分区都是有序且顺序不可变的记录集，并且不断追加到结构化的commit.log文件中。<br>分区中的每一个记录都会分配一个id号来表示顺序，我们称之为offset，offset用来唯一的标识分区中每一条记录。</p></li></ol><h4 id="二、策略规划"><a href="#二、策略规划" class="headerlink" title="二、策略规划"></a>二、策略规划</h4><ol start="7"><li><p><strong>保留策略</strong><br>Kafka 集群保留所有发布的记录—无论他们是否已被消费—并通过一个可配置的参数——保留期限来控制<br>如果保留策略设置为2天，一条记录发布后两天内，可以随时被消费，两天过后这条记录会被抛弃并释放磁盘空间</p></li><li><p><strong>topic、topic分片、消费者组、消费者实例关系</strong><br>消费者组是一个逻辑个体，消费topic<br>topic分片会分配到各个消费者实例上，每个分片会被唯一的一个消费者所消费<br>topic分片应该大于等于消费者实例，也就是说：消费者组中的消费者实例个数不能超过分区的数量</p></li><li><p><strong>创建topic</strong><br>bin/kafka-topics.sh –create –zookeeper localhost:2181 –replication-factor 3 –partitions 1 –topic my-replicated-topic</p></li><li><p><strong>kafka容量规划</strong><br>按一条消息1KB，每天N条，保存两份，保存两周<br>N * 1KB * 2 / 1000 / 1000 * 110% * 14 * 0.75<br>每天 1 亿条 1KB 大小的消息，保存两份且留存两周的时间，那么总的空间大小就等于 1 亿 * 1KB * 2 / 1000 / 1000 = 200GB。一般情况下 Kafka 集群除了消息数据还有其他类型的数据，比如索引数据等，故我们再为这些数据预留出 10% 的磁盘空间，因此总的存储容量就是 220GB。既然要保存两周，那么整体容量即为 220GB * 14，大约 3TB 左右。Kafka 支持数据的压缩，假设压缩比是 0.75，那么最后你需要规划的存储空间就是 0.75 * 3 = 2.25TB</p></li><li><p><strong>kafka分区规划</strong><br>分区数 = 生产者生产消息速率 / 消费者消费消息速率<br>例如所有生产者每秒生产1GB消息，一个消费者每秒处理50KB消息，那么最少需要20个分区才能满足<br>但是单个broker不能分区太多，分区越多占用内存就越多，完成首领选举需要的时间也越长</p></li></ol><h4 id="三、关键配置与优化"><a href="#三、关键配置与优化" class="headerlink" title="三、关键配置与优化"></a>三、关键配置与优化</h4><ol start="12"><li><p><strong>num.partitions</strong><br>默认topic的分区数</p></li><li><p><strong>log.retention.ms，log.retention.hours，log.retention.minutes</strong><br>消息多久以后被删除<br>推荐使用log.retetion.ms，如果设置了不止一个，以值最小的为准</p></li><li><p>log.retention.beytes<br>每个分区最大可保存日志的字节数，如果超过则删除</p></li><li><p>如果同时指定了log.retention.ms和log.retention.bytes，则会同时起作用</p></li><li><p><strong>message.max.bytes</strong><br>限制单个消息的大小，此大小指的是消息压缩后的大小，如果单个消息压缩后超过该值，kafka会返回错误给生产者</p></li><li><p><strong>系统参数调优</strong><br>vm.swapiness   设置为1，因为0意味着任何情况都不使用内存交换，1则是尽量不使用<br>vm.dirty_background_ratio  建议设置为5，是内存可以填充脏数据的百分比。这些脏数据稍后会写入磁盘<br>vm.dirty_ratio   被内核进程刷新到磁盘之前的脏页数量，建议设置为20</p></li><li><p><strong>磁盘调优</strong><br>推荐使用XFS，无需过多调优，比EXT4好用<br>挂载使用参数noatime、nodiratime，提高性能<br>mount -o noatime -o nodiratime -o remount</p></li><li><p><strong>网络调优</strong><br>net.core.rmem_default 和 net.core.wmem_default ：socket读写缓存区大小  合理值：131072  既128KB<br>net.core.rmem_max 和 net.core.wmem_max ：socket读写缓存区最大值  合理值：2097152  既2MB<br>net.ipv4.tcp_rmem 和 net.ipv4.tcp_wmem ：TCP socket的读写缓冲区  合理值：4096 65536 204800  （最小值，默认值，最大值）<br>最大值不能大于net.core.rmem_max和net.core.wmem_max指定的大小<br>net.ipv4.tcp_window_scaling  设置为1，启用TCP时间窗扩展，传输的数据可以在服务器端进行缓冲，提升客户端传输数据的效率<br>net.ipv4.tcp_max_syn_backlog  设置比默认值（1024）更大的值，可以接受更多的并发连接<br>net.core.netdev_max_backlog  设置比默认值（1000）更大的值，允许更多的数据包排队等待内核处理，有助于应对网络流量爆发</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongoconnector + ES：实现mongodb数据全量+增量同步到ES</title>
      <link href="posts/18a3dcfe8a5ec672.html"/>
      <url>posts/18a3dcfe8a5ec672.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、mongodb-ES的原因与方案"><a href="#一、mongodb-ES的原因与方案" class="headerlink" title="一、mongodb+ES的原因与方案"></a>一、mongodb+ES的原因与方案</h3><p><strong>Mongodb是一个基于分布式文件存储的数据库，公司业务的主力数据库；Elasticsearch是一个基于Lucene的搜索服务器，它提供了一个分布式多用户能力的，基于倒排索引的快速全文搜索引擎；将Mongodb全量 + 增量的方式持续导入到ES中，可以实现对业务数据的全文检索。</strong></p><p>目前有两种方案支持mongodb导入到ES：</p><ol><li>mongodb + mongoshake + kafka + ES<br>此方案在搜索中台已实实现</li></ol><ul><li><strong>优点：</strong><ul><li>mongoshake分Collector和Receivers两个子服务，Collector和Receivers之间可以加入SDK、Kafka、MetaQ等方式灵活对接以适应不同场景(如日志订阅、数据中心同步、Cache异步淘汰、KAFKA做数据缓冲削峰填谷等）</li><li>支持Direct（直接写入目的MongoDB）、RPC、TCP、File、Kafka、Mock等多种写入方式</li><li>支持并行复制、HA方案等高级功能</li></ul></li><li><strong>缺点：</strong><ul><li>接收kafka数据的Receivers需要二次开发</li><li>除了Direct模式（直接写入Mongodb）支持全量+增量，其他写入方式只支持增量同步，需要自行开发脚本或找其他导入到ES的工具（还需要关心oplog的cursor问题以便全量同步后打开mongoshake的增量同步）</li><li>不支持直接导入到ES，小量且增长缓慢的数据（例如运维平台），没必要先写入到kafka</li><li>因为写入ES不支持全量，所以数据出问题重新同步，需要比较复杂的操作</li></ul></li></ul><ol start="2"><li>mongodb + mongoconnector + ES</li></ol><ul><li><strong>优点：</strong><ul><li>支持直接导入到ES或Solr，支持DB级别、Collection级别、字段级别的过滤，支持对Collection重命名</li><li>导入到ES支持全量+增量，重新导入只需要删除oplog.timestamp文件，重启服务</li><li>配置简单，容易上手，适合小量且增长缓慢的数据同步到ES</li></ul></li><li><strong>缺点：</strong><ul><li>不支持写入到kafka，无法做到数据缓冲，削峰填谷</li><li>社区不活跃，最近更新在18年9月</li><li>官方文档中只有写明对elasticsearch2.x和elasticsearch5.x的支持，如果是7.x的ES，可能有未知的坑</li></ul></li></ul><h3 id="二、mongoconnector安装与部署"><a href="#二、mongoconnector安装与部署" class="headerlink" title="二、mongoconnector安装与部署"></a>二、mongoconnector安装与部署</h3><ol><li><p>安装python环境<br>在申请机器时选择「python3.7基线」，或在资源管理 → ECS管理 → 选择项目 → 基线管理 中选择安装「python3.7基线」</p></li><li><p>安装mongoconnector与elastic2-doc-manager</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@madking:~# pip install mongo-connector</span><br><span class="line">root@madking:~# pip install &#x27;mongo-connector[elastic5]&#x27;</span><br></pre></td></tr></table></figure></li><li><p>创建项目目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@madking:~# mkdir -p /opt/mongo-connector/logs</span><br></pre></td></tr></table></figure></li><li><p>配置connector</p></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;__comment__&quot;</span>: <span class="string">&quot;Configuration options starting with &#x27;__&#x27; are disabled&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;__comment__&quot;</span>: <span class="string">&quot;To enable them, remove the preceding &#x27;__&#x27;&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;mainAddress&quot;</span>: <span class="string">&quot;192.168.1.2:27017&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;oplogFile&quot;</span>: <span class="string">&quot;/opt/mongo-connector/logs/oplog.timestamp&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;noDump&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;batchSize&quot;</span>: <span class="number">-1</span>,</span><br><span class="line">    <span class="attr">&quot;verbosity&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;continueOnError&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;logging&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;file&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;/opt/mongo-connector/logs/mongo-connector.log&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;__format&quot;</span>: <span class="string">&quot;%(asctime)s [%(levelname)s] %(name)s:%(lineno)d - %(message)s&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;__rotationWhen&quot;</span>: <span class="string">&quot;D&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;__rotationInterval&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;__rotationBackups&quot;</span>: <span class="number">10</span>,</span><br><span class="line"></span><br><span class="line">        <span class="attr">&quot;__type&quot;</span>: <span class="string">&quot;syslog&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;__host&quot;</span>: <span class="string">&quot;localhost:514&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;__authentication&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;adminUsername&quot;</span>: <span class="string">&quot;readonly&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;password&quot;</span>: <span class="string">&quot;readonly&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;__passwordFile&quot;</span>: <span class="string">&quot;mongo-connector.pwd&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;__comment__&quot;</span>: <span class="string">&quot;For more information about SSL with MongoDB, please see http://docs.mongodb.org/manual/tutorial/configure-ssl-clients/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;__ssl&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;__sslCertfile&quot;</span>: <span class="string">&quot;Path to certificate to identify the local connection against MongoDB&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;__sslKeyfile&quot;</span>: <span class="string">&quot;Path to the private key for sslCertfile. Not necessary if already included in sslCertfile.&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;__sslCACerts&quot;</span>: <span class="string">&quot;Path to concatenated set of certificate authority certificates to validate the other side of the connection&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;__sslCertificatePolicy&quot;</span>: <span class="string">&quot;Policy for validating SSL certificates provided from the other end of the connection. Possible values are &#x27;required&#x27; (require and validate certificates), &#x27;optional&#x27; (validate but don&#x27;t require a certificate), and &#x27;ignored&#x27; (ignore certificates).&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;__fields&quot;</span>: [<span class="string">&quot;field1&quot;</span>, <span class="string">&quot;field2&quot;</span>, <span class="string">&quot;field3&quot;</span>],</span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;namespaces&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;excluded.collection&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;excluded_wildcard.*&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;*.exclude_collection_from_every_database&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;ops_center.resource_work _order&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;excludeFields&quot;</span>: [<span class="string">&quot;password&quot;</span>, <span class="string">&quot;secret&quot;</span>, <span class="string">&quot;cluster.password&quot;</span>, <span class="string">&quot;cluster.secret&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;__included.collection2&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;__included.collection4&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;includeFields&quot;</span>: [<span class="string">&quot;included_field&quot;</span>, <span class="string">&quot;included.nested.field&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;__included.collection5&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;rename&quot;</span>: <span class="string">&quot;included.new_collection5_name&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;includeFields&quot;</span>: [<span class="string">&quot;included_field&quot;</span>, <span class="string">&quot;included.nested.field&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;__included.collection6&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;excludeFields&quot;</span>: [<span class="string">&quot;excluded_field&quot;</span>, <span class="string">&quot;excluded.nested.field&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;__included.collection7&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;rename&quot;</span>: <span class="string">&quot;included.new_collection7_name&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;excludeFields&quot;</span>: [<span class="string">&quot;excluded_field&quot;</span>, <span class="string">&quot;excluded.nested.field&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;__included_wildcard1.*&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;__included_wildcard2.*&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;__renamed.collection1&quot;</span>: <span class="string">&quot;something.else1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;__renamed.collection2&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;rename&quot;</span>: <span class="string">&quot;something.else2&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;__renamed_wildcard.*&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;rename&quot;</span>: <span class="string">&quot;new_name.*&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;__gridfs.collection&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;gridfs&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;__gridfs_wildcard.*&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;gridfs&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;docManagers&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;docManager&quot;</span>: <span class="string">&quot;elastic2_doc_manager&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;targetURL&quot;</span>: <span class="string">&quot;elastic:wVvoUR4L8dWluebcSUOv@192.168.1.3:9200&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;__bulkSize&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="attr">&quot;__uniqueKey&quot;</span>: <span class="string">&quot;_id&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;__autoCommitInterval&quot;</span>: <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>“<strong>comment</strong>“</strong>: 配置注释；mongoconnector的配置文件是json格式的，支持注释配置，在配置项开头加上两个下划线__，即注释了该项配置；打开注释只需要删除前面的两个下划线</p></li><li><p>**”mainAddress”**：mongodb的主机+端口配置，副本集或分片群集的地址，这可以是任何MongoDB连接字符串</p></li><li><p>**”oplogFile”**：oplog进度文件路径</p></li><li><p>**”noDump”**：不进行全量同步，从oplog最早的一条记录开始进行增量同步</p></li><li><p>**”batchSize”**：批量处理多少条oplog，记录一次oplogFile文件，oplogFile：oplog.timestamp，默认是-1，即实时记录</p></li><li><p>**”verbosity”**：日志级别：</p></li></ul><table><thead><tr><th>Verbosity</th><th>Log Level</th></tr></thead><tbody><tr><td>0</td><td>ERROR</td></tr><tr><td>1</td><td>WARNING</td></tr><tr><td>2</td><td>INFO</td></tr><tr><td>3</td><td>DEBUG</td></tr></tbody></table><ul><li><p><strong>“continueOnError”</strong>: 在全量同步数据时，发生错误是否终止操作；这个配置不会影响增量同步</p></li><li><p>**”logging”**：</p><ul><li>logging.type：日志类型，支持：file、syslog、stream</li><li>logging.filename：日志文件名称</li><li>logging.rotationWhen：日志转储配置</li><li>Default: midnight<blockquote><p>The type of period defining when Mongo Connector should rotate its log file. This must be one of:<br>S (second)<br>M (minute)<br>H (hour)<br>D (day)<br>W0 - W6 (days of the week, numbered 0 - 6)<br>midnight</p></blockquote></li></ul></li><li><p>logging.rotationInterval：日志文件轮换的频率</p></li><li><p>logging.rotationBackups：保存日志个数</p></li><li><p>logging.facility：syslog配置</p></li><li><p>authentication：mongodb的用户名与密码配置</p></li><li><p>namespaces：复制的命名空间配置，即db.collection，默认包括除系统空间和GridFS外的所有命名空间</p><ul><li><p>命名空间过滤包括两种方式：include和excluded，二者不可同时使用，使用included就会只同步列出的命名空间；使用excluded就会只同步除列出的命名空间外的其他命名空间</p></li><li><p>配置included模式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;namespaces&quot;: &#123;</span><br><span class="line">    &quot;ops_center.workorder&quot;: true,</span><br><span class="line">    &quot;ops_center.resource&quot;: true,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置excluded模式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;namespaces&quot;: &#123;</span><br><span class="line">    &quot;ops_center.workorder&quot;: false,</span><br><span class="line">    &quot;ops_center.resource&quot;: false,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>rename：重命名命名空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;namespaces&quot;: &#123;</span><br><span class="line">    &quot;ops_center_test.workorder&quot;: </span><br><span class="line">             &quot; rename&quot;: &quot;ops_center.workorder&quot;</span><br><span class="line">         &quot;ops_center.resource&quot;: false,</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>includeFields：列出需要同步的文档的字段，其他未列出的不同步</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;namespace&quot;: &#123;</span><br><span class="line">        &quot;ops_center.resource_work_order&quot;: &#123;</span><br><span class="line">        &quot;includeFields&quot;: [&quot;password&quot;, &quot;secret&quot;, &quot;cluster.password&quot;, &quot;cluster.secret&quot;]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>excludeFields：列出不需要同步的文档的字段，其他未列出的同步</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;namespace&quot;: &#123;</span><br><span class="line">        &quot;ops_center.resource_work_order&quot;: &#123;</span><br><span class="line">        &quot;excludeFields&quot;: [&quot;password&quot;, &quot;secret&quot;, &quot;cluster.password&quot;, &quot;cluster.secret&quot;]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>docManagers: Mongo Connector一次可以使用多个DocManager，以支持同时复制到多个位置。即使该数组仅包含一个DocManager配置，也应提供一个DocManager数组</p><ul><li>“docManager”：使用的docManager引擎，ES或solr使用不同的引擎，按需搜索安装</li><li>“targetURL”：ES或solr的链接配置，user:pwd@host:port</li><li>“bulkSize”: 批量发送到远程系统的文档数，默认值：1000</li><li>“uniqueKey”：唯一键索引，更新文档时需要，最好设置成_id</li><li>“autoCommitInterval”：DocManager强制刷新更改的时间间隔（以秒为单位），默认不强制提交刷新</li></ul></li></ul><ol start="5"><li>配置supervisor<br>安装配置好supervisor本身的配置，然后配置conf.d中的项目配置</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@madking:~# cat /etc/supervisor/conf.d/mongoconnector.conf</span><br><span class="line">[program:mongo-connector]</span><br><span class="line">user = root</span><br><span class="line">command=/usr/local/python3.7/bin/mongo-connector -c /opt/mongo-connector/conf.json</span><br><span class="line">stderr_logfile = /var/log/supervisor/mongo-connector_err.log</span><br><span class="line">stdout_logfile = /var/log/supervisor/mongo-connector_stdout.log</span><br><span class="line">directory = /opt/mongo-connector</span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line">startsecs=3</span><br><span class="line"></span><br><span class="line">root@madking:~# supervisorctl update</span><br><span class="line"></span><br><span class="line">root@madking:~# supervisorctl</span><br><span class="line">elastic                          RUNNING   pid 22711, uptime 17 days, 9:59:38</span><br><span class="line">kibana                           RUNNING   pid 8894, uptime 21 days, 23:53:01</span><br><span class="line">mongo-connector                  RUNNING   pid 7459, uptime 4:03:37</span><br></pre></td></tr></table></figure><ol start="6"><li>查看日志和kibana，创建模式空间和索引模板</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@madking:~# tail -f /opt/mongo-connector/logs/mongo-connector.log</span><br><span class="line">2020-04-22 16:10:42,926 [ALWAYS] mongo_connector.connector:50 - pymongo version: 3.10.1</span><br><span class="line">2020-04-22 16:10:42,939 [ALWAYS] mongo_connector.connector:50 - Source MongoDB version: 3.4.20</span><br><span class="line">2020-04-22 16:10:42,939 [ALWAYS] mongo_connector.connector:50 - Target DocManager: mongo_connector.doc_managers.elastic2_doc_manager version: 1.0.0</span><br><span class="line">2020-04-22 16:34:05,108 [ALWAYS] mongo_connector.connector:50 - Starting mongo-connector version: 3.1.1</span><br><span class="line">2020-04-22 16:34:05,108 [ALWAYS] mongo_connector.connector:50 - Python version: 3.7.2 (default, Apr 20 2020, 15:18:13)</span><br><span class="line">[GCC 5.4.0 20160609]</span><br><span class="line">2020-04-22 16:34:05,109 [ALWAYS] mongo_connector.connector:50 - Platform: Linux-4.4.0-131-generic-x86_64-with-debian-stretch-sid</span><br><span class="line">2020-04-22 16:34:05,110 [ALWAYS] mongo_connector.connector:50 - pymongo version: 3.10.1</span><br><span class="line">2020-04-22 16:34:05,119 [ALWAYS] mongo_connector.connector:50 - Source MongoDB version: 3.4.20</span><br><span class="line">2020-04-22 16:34:05,120 [ALWAYS] mongo_connector.connector:50 - Target DocManager: mongo_connector.doc_managers.elastic2_doc_manager version: 1.0.0</span><br></pre></td></tr></table></figure><p><strong>创建模式空间和索引模板略，请查看日志中心使用手册</strong></p><h3 id="三、数据查询"><a href="#三、数据查询" class="headerlink" title="三、数据查询"></a>三、数据查询</h3><p><a href="https://imgtu.com/i/gpFhcQ"><img src="https://z3.ax1x.com/2021/04/26/gpFhcQ.png" alt="gpFhcQ.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> mongoconnector </category>
          
          <category> ES </category>
          
          <category> mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongoconnector </tag>
            
            <tag> ES </tag>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件描述符与限制</title>
      <link href="posts/953af7450dea2051.html"/>
      <url>posts/953af7450dea2051.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux文件描述符与限制"><a href="#Linux文件描述符与限制" class="headerlink" title="Linux文件描述符与限制"></a>Linux文件描述符与限制</h1><h3 id="文件描述符是什么？和文件句柄有啥区别？"><a href="#文件描述符是什么？和文件句柄有啥区别？" class="headerlink" title="文件描述符是什么？和文件句柄有啥区别？"></a>文件描述符是什么？和文件句柄有啥区别？</h3><p>文件描述符是linux/unix操作系统中特有的概念。相当于windows系统中的文件句柄。一个意思不同叫法。</p><p>Linux系统中， 每当进程打开一个文件时，系统就为其分配一个唯一的整型文件描述符，用来标识这个文件。标准C中每个进程默认打开的有三个文件，标准输入，标准输出，标准错误，分别用一个FILE结构的指针来表示，即stdin，stout，sterr，这三个结构分别对应着三个文件描述符0,1,2。</p><p>文件描述符是一个简单的整数，用以标明每一个被进程所打开的文件和socket。第一个打开的文件是0，第二个是1，依此类推。linux 操作系统通常对每个进程l能打开的文件数量有一个限制。</p><h3 id="linux系统对文件描述符的限制"><a href="#linux系统对文件描述符的限制" class="headerlink" title="linux系统对文件描述符的限制"></a>linux系统对文件描述符的限制</h3><h5 id="linux系统对文件描述符的限制有两个级别"><a href="#linux系统对文件描述符的限制有两个级别" class="headerlink" title="linux系统对文件描述符的限制有两个级别"></a>linux系统对文件描述符的限制有两个级别</h5><ul><li>系统级别<br>使用cat /proc/sys/fs/file-max查看，默认值是根据内存大小，系统自动设置的，一般为内存大小（KB）的10%，shell下可以这样计算grep -r MemTotal /proc/meminfo | awk ‘{printf(“%d”,$2/10)}’（可能有各种其他原因导致file-max没有设置为内存的10%）<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat /proc/sys/fs/file-max</span><br><span class="line">188273</span><br><span class="line"></span><br><span class="line">root@ubuntu:~# grep -r MemTotal /proc/meminfo | awk &#x27;&#123;printf(&quot;%d&quot;,$2/10)&#125;&#x27;</span><br><span class="line">183976</span><br></pre></td></tr></table></figure>用户级别：默认是1024，使用ulimit -n查看<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# ulimit -n</span><br><span class="line">1024</span><br></pre></td></tr></table></figure><h5 id="为什么要限制打开的文件描述符"><a href="#为什么要限制打开的文件描述符" class="headerlink" title="为什么要限制打开的文件描述符"></a>为什么要限制打开的文件描述符</h5></li><li>资源问题：每个打开的文件都需要消耗内存来管理，而内存是有限的。</li><li>安全问题：如果不限制的话，有不怀好心的人启动一个进程来无限的创建和打开新的文件，会让服务器崩溃。</li></ul><p>所以限制文件描述符的数量对于linux系统的稳定性是非常重要的。</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><h5 id="限制资源使用的配置文件"><a href="#限制资源使用的配置文件" class="headerlink" title="限制资源使用的配置文件"></a>限制资源使用的配置文件</h5><ul><li>/etc/security/limits.conf</li><li>/etc/security/limits.d/目录</li></ul><p><strong>/etc/security/limits.d/里面配置会覆盖/etc/security/limits.conf的配置</strong></p><h5 id="可以限制的资源类型如下"><a href="#可以限制的资源类型如下" class="headerlink" title="可以限制的资源类型如下"></a>可以限制的资源类型如下</h5><ul><li>所创建的内核文件的大小</li><li>进程数据块的大小</li><li>Shell 进程创建文件的大小</li><li>内存锁住的大小</li><li>常驻内存集的大小</li><li>打开文件描述符的数量</li><li>分配堆栈的最大大小</li><li>CPU 时间</li><li>单个用户的最大线程数</li><li>Shell 进程所能使用的最大虚拟内存</li></ul><p><strong>配置同时支持硬资源和软资源的限制</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat /etc/security/limits.conf</span><br><span class="line"><span class="meta">#</span><span class="bash">&lt;domain&gt;      &lt;<span class="built_in">type</span>&gt;  &lt;item&gt;         &lt;value&gt;</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"></span><br><span class="line"><span class="bash"><span class="comment">#*               soft    core            0</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">root            hard    core            100000</span></span><br><span class="line"><span class="meta">#</span><span class="bash">*               hard    rss             10000</span></span><br><span class="line"><span class="meta">#</span><span class="bash">@student        hard    nproc           20</span></span><br><span class="line"><span class="meta">#</span><span class="bash">@faculty        soft    nproc           20</span></span><br><span class="line"><span class="meta">#</span><span class="bash">@faculty        hard    nproc           50</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ftp             hard    nproc           0</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ftp             -       chroot          /ftp</span></span><br><span class="line"><span class="meta">#</span><span class="bash">@student        -       maxlogins       4</span></span><br><span class="line"></span><br><span class="line">*                soft    nofile          51200</span><br><span class="line">*                hard    nofile          51200</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> End of file</span></span><br></pre></td></tr></table></figure><ul><li>第一列表示用户和组（@开头）</li><li>第二列表示软限制还是硬限制</li><li>第三列表示限制的资源类型</li><li>第四列表示限制的最大值</li></ul><p><strong>hard和soft的区别</strong>: soft是一个警告值，而hard则是一个真正意义的阀值，超过就会报错，一般情况下都是设为同一个值。</p><p><strong>core是内核文件，nofile是文件描述符，noproc是进程，一般情况下只限制文件描述符数和进程数就够了</strong></p><h3 id="系统级别"><a href="#系统级别" class="headerlink" title="系统级别"></a>系统级别</h3><ol><li>查看</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat /proc/sys/fs/file-max</span><br><span class="line">183976</span><br></pre></td></tr></table></figure><ol start="2"><li>设置</li></ol><ul><li>临时性</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# echo 1000000 &gt; /proc/sys/fs/file-max</span><br></pre></td></tr></table></figure><ul><li>永久性<br>在/etc/sysctl.conf中设置，应该设什么值是最佳实践？比如8G的内存，设为8192/2 * 256 = 524288<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fs.file-max = 1000000</span><br></pre></td></tr></table></figure><h3 id="用户级别"><a href="#用户级别" class="headerlink" title="用户级别"></a>用户级别</h3></li></ul><ol><li>查看，-n默认查看的是soft limit，这个值是从/etc/security/limits.conf文件的* soft nofile 655350来的</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# ulimit -n</span><br><span class="line">170000</span><br></pre></td></tr></table></figure><p>查看hard limit</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# ulimit -Hn</span><br><span class="line">170000</span><br></pre></td></tr></table></figure><ol start="2"><li>设置</li></ol><ul><li>临时性<br>通过ulimit -Sn设置最soft limit，注意soft limit必须小于hard limit<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ulimit -Sn 160000</span><br></pre></td></tr></table></figure>通过ulimit -Hn设置最Hard limit<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ulimit -Hn 160000</span><br></pre></td></tr></table></figure>同时设置soft limit和hard limit。对于非root用户只能设置比原来小的hard limit<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ulimit -n 180000</span><br></pre></td></tr></table></figure></li><li>永久性<br>root权限下，在/etc/security/limits.conf中添加如下两行，*表示所有用户，重启生效<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* soft nofile 102400</span><br><span class="line">* hard nofile 104800</span><br></pre></td></tr></table></figure><blockquote><p>注意：设置nofile的hard limit还有一点要注意的就是hard limit不能大于/proc/sys/fs/nr_open，假如hard limit大于nr_open，注销后将无法正常登录。</p></blockquote></li></ul><h3 id="当前打开的文件描述符"><a href="#当前打开的文件描述符" class="headerlink" title="当前打开的文件描述符"></a>当前打开的文件描述符</h3><h5 id="查看系统当前打开的文件描述符数量"><a href="#查看系统当前打开的文件描述符数量" class="headerlink" title="查看系统当前打开的文件描述符数量"></a>查看系统当前打开的文件描述符数量</h5><p>其中第一个数表示当前系统分配后已使用的文件描述符数，第二个数表示分配后未使用的（内核2.6版本中这个值总是为0，这并不是一个错误，它意味着已经分配的文件描述符总会被使用），第三个数等于最大值file-max。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat /proc/sys/fs/file-nr </span><br><span class="line">2176    0    2048000</span><br></pre></td></tr></table></figure><h5 id="查看某个进程打开的文件描述符数量"><a href="#查看某个进程打开的文件描述符数量" class="headerlink" title="查看某个进程打开的文件描述符数量"></a>查看某个进程打开的文件描述符数量</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# ls /proc/35961/fd | wc -l</span><br><span class="line">20</span><br></pre></td></tr></table></figure><h5 id="看下哪些进程占用的文件描述符比较多，排下序"><a href="#看下哪些进程占用的文件描述符比较多，排下序" class="headerlink" title="看下哪些进程占用的文件描述符比较多，排下序"></a>看下哪些进程占用的文件描述符比较多，排下序</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# sudo find /proc -print | grep -P &#x27;/proc/\d+/fd/&#x27;| awk -F &#x27;/&#x27; &#x27;&#123;print $3&#125;&#x27; | uniq -c | sort -rn</span><br><span class="line">    Count  PID</span><br><span class="line">    129   1994</span><br><span class="line">    124   1993</span><br><span class="line">    122   1995</span><br><span class="line">    119   1992</span><br><span class="line">    118   23747</span><br><span class="line">     69   5504</span><br></pre></td></tr></table></figure><h3 id="错误的查看方法"><a href="#错误的查看方法" class="headerlink" title="错误的查看方法"></a>错误的查看方法</h3><h5 id="使用lsof查看打开文件数是错误的"><a href="#使用lsof查看打开文件数是错误的" class="headerlink" title="使用lsof查看打开文件数是错误的"></a>使用lsof查看打开文件数是错误的</h5><ul><li><p>sof的结果包含了并非以fd形式打开的文件，比如用mmap方式访问文件（FD一栏显示为mem），实际并不占用fd。<br>其中包括了像.so这样的文件。从结果看.jar文件也是以FD为mem和具体fd编号分别打开了一次。</p></li><li><p>CentOS 7的lsof（我这里lsof -v的版本号是4.87）是按PID/TID/file的组合对应一行，不是一行一个fd。同一个进程如果多个线程访问同一个文件通常只需要打开一次、占用一个fd，但在lsof中就显示多行。<br>如果用lsof -p <pid>，则不按TID显示，结果数少很多。但仍包含了没有使用fd的文件。</p></li></ul><h3 id="正确的查看方法"><a href="#正确的查看方法" class="headerlink" title="正确的查看方法"></a>正确的查看方法</h3><h5 id="查看-proc-中文件"><a href="#查看-proc-中文件" class="headerlink" title="查看/proc/中文件"></a>查看/proc/中文件</h5><ul><li>准确的查看fd使用总数的命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/sys/fs/file-nr</span><br></pre></td></tr></table></figure>或者（结果多的时候运行需要一段时间）<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo find /proc -print | grep -P &#x27;/proc/\d+/fd/&#x27;| wc -l</span><br></pre></td></tr></table></figure></li><li>查看具体一个进程号的fd数量<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /proc/&lt;pid&gt;/fd | wc -l</span><br></pre></td></tr></table></figure></li><li>查看哪个进程使用的fd最多，并排序<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo find /proc -print | grep -P &#x27;/proc/\d+/fd/&#x27;| awk -F &#x27;/&#x27; &#x27;&#123;print $3&#125;&#x27; | uniq -c | sort -rn </span><br></pre></td></tr></table></figure></li></ul><p><strong>但还要注意上面的命令返回的是系统的fd使用情况，而ulimit的配置是针对单用户的，两者是有区别的</strong></p>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ulimit </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES集群部署与配置（破解白金版）</title>
      <link href="posts/4daeb560d10fb7de.html"/>
      <url>posts/4daeb560d10fb7de.html</url>
      
        <content type="html"><![CDATA[<h1 id="ES集群部署与配置"><a href="#ES集群部署与配置" class="headerlink" title="ES集群部署与配置"></a>ES集群部署与配置</h1><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p><strong>本文会带领大家部署一个白金版，三节点Elasticsearch集群；部署的架构是：三个主节点，主节点数据节点共存（既有主节点的资格，又存储数据），节点间通过证书认证互相通信，以及接入ldap实现统一账户登录；此架构只做测试使用，线上一般建议主节点和数据节点分开部署，单独三个主节点来负责集群维护。</strong><br><strong>文中破解只做学习演示使用</strong></p><h4 id="下载相关软件"><a href="#下载相关软件" class="headerlink" title="下载相关软件"></a>下载相关软件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &amp;&amp; mkdir soft </span><br><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.1-linux-x86_64.tar.gz</span><br><span class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-7.6.1-linux-x86_64.tar.gz </span><br></pre></td></tr></table></figure><h4 id="解压软件"><a href="#解压软件" class="headerlink" title="解压软件"></a>解压软件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar xvzf elasticsearch-7.6.1-linux-x86_64.tar.gz</span><br><span class="line">tar xvzf kibana-7.6.1-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure><h4 id="部署服务"><a href="#部署服务" class="headerlink" title="部署服务"></a>部署服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">useradd -m elastic</span><br><span class="line">mv elasticsearch-7.6.1 kibana-7.6.1-linux-x86_64 /opt/</span><br><span class="line"><span class="built_in">cd</span> /opt/</span><br><span class="line">ln -s elasticsearch-7.6.1/ elasticsearch</span><br><span class="line">ln -s kibana-7.6.1-linux-x86_64/ kibana</span><br><span class="line">mkdir /data/elastic /data/logs/elastic</span><br><span class="line"><span class="built_in">cd</span> /opt/</span><br><span class="line">chown -R elastic.elastic elasticsearch elasticsearch-7.6.1/ kibana kibana-7.6.1-linux-x86_64/</span><br><span class="line">chown -R elastic.elastic /data/elastic /data/logs/elastic</span><br></pre></td></tr></table></figure><h4 id="修改系统参数"><a href="#修改系统参数" class="headerlink" title="修改系统参数"></a>修改系统参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ulimit</span> -n 1024000</span><br><span class="line"><span class="built_in">ulimit</span> -u 1024000</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;root soft nofile 1024000</span></span><br><span class="line"><span class="string">root hard nofile 1024000</span></span><br><span class="line"><span class="string">root soft nproc 1024000</span></span><br><span class="line"><span class="string">root hard nproc 1024000</span></span><br><span class="line"><span class="string">* soft nofile 1024000</span></span><br><span class="line"><span class="string">* hard nofile 1024000</span></span><br><span class="line"><span class="string">* soft nproc 1024000</span></span><br><span class="line"><span class="string">* hard nproc 1024000&#x27;</span> &gt;&gt; /etc/security/limits.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> vm.max_map_count=262144 &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h4 id="破解白金版"><a href="#破解白金版" class="headerlink" title="破解白金版"></a>破解白金版</h4><ul><li>白金版支持ldap等第三方认证，集群状态监控等功能，以及最近新出的Workplace Search（自建公司级综合搜索平台，可集成gitlab、wiki、jira等）</li></ul><ul><li><p>目录结构</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">. 7.6.1</span><br><span class="line">├── build</span><br><span class="line">│   └── src</span><br><span class="line">├── install</span><br><span class="line">└── src</span><br></pre></td></tr></table></figure></li><li><p>下载安装包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">cd</span> ~/soft/crack</span><br><span class="line">mkdir install &amp;&amp; <span class="built_in">cd</span> install</span><br><span class="line"><span class="comment"># 将之前下载的elasticsearch软件包拷贝过来</span></span><br><span class="line">cp ~/soft/elasticsearch-7.6.1-linux-x86_64.tar.gz .</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar xvzf elasticsearch-7.6.1-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>下载源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">cd</span> ~/soft/crack</span><br><span class="line">mkdir src &amp;&amp; <span class="built_in">cd</span> src</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget https://github.com/elastic/elasticsearch/archive/v7.6.1.tar.gz -O elasticsearch-v7.6.1.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar zxvf elasticsearch-v7.6.1.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>编译x-pack包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lib module</span></span><br><span class="line">ln -s ../install/elasticsearch-7.6.1/lib .</span><br><span class="line">ln -s ../install/elasticsearch-7.6.1/modules .</span><br><span class="line"></span><br><span class="line"><span class="comment"># License.java</span></span><br><span class="line">find ../src -name <span class="string">&quot;License.java&quot;</span> | xargs -r -I &#123;&#125; cp &#123;&#125; .</span><br><span class="line">sed -i <span class="string">&#x27;s#this.type = type;#this.type = &quot;platinum&quot;;#g&#x27;</span> License.java</span><br><span class="line">sed -i <span class="string">&#x27;s#validate();#// validate();#g&#x27;</span> License.java</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">javac -cp <span class="string">&quot;`ls lib/elasticsearch-7.6.1.jar`:`ls lib/elasticsearch-x-content-7.6.1.jar`:`ls lib/lucene-core-*.jar`:`ls modules/x-pack-core/x-pack-core-7.6.1.jar`&quot;</span> License.java</span><br><span class="line"></span><br><span class="line"><span class="comment"># x-pack-core-7.6.1.jar</span></span><br><span class="line">mkdir src &amp;&amp; <span class="built_in">cd</span> src</span><br><span class="line">find ../../install -name <span class="string">&quot;x-pack-core-7.6.1.jar&quot;</span> | xargs -r -I &#123;&#125; cp &#123;&#125; .</span><br><span class="line">jar xvf x-pack-core-7.6.1.jar</span><br><span class="line">jar xvf x-pack-core-7.6.1.jar</span><br><span class="line">\cp -f ../License*.class org/elasticsearch/license/</span><br><span class="line">jar cvf x-pack-core-7.6.1.jar .</span><br></pre></td></tr></table></figure></li><li><p>覆盖x-pack-core-7.6.1.jar</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp 7.6.1/build/src/x-pack-core-7.6.1.jar /opt/elasticsearch/modules/x-pack-core/</span><br></pre></td></tr></table></figure><h4 id="创建证书"><a href="#创建证书" class="headerlink" title="创建证书"></a>创建证书</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;elasticsearch-certutil ca</span><br><span class="line">bin&#x2F;elasticsearch-certutil cert --ca elastic-stack-ca.p12</span><br><span class="line">mv elastic-stack-ca.p12 elastic-certificates.p12 config&#x2F;</span><br></pre></td></tr></table></figure><h4 id="配置elasticsearch"><a href="#配置elasticsearch" class="headerlink" title="配置elasticsearch"></a>配置elasticsearch</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 集群名称</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">es-zktest</span></span><br><span class="line"><span class="comment"># 节点名称</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">zktest-master-1</span></span><br><span class="line"><span class="comment"># 是否为主节点</span></span><br><span class="line"><span class="attr">node.master:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 是否为数据节点</span></span><br><span class="line"><span class="attr">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 数据文件存放目录</span></span><br><span class="line"><span class="attr">path.data:</span> <span class="string">/data/elastic</span></span><br><span class="line"><span class="comment"># 日志文件存放目录</span></span><br><span class="line"><span class="attr">path.logs:</span> <span class="string">/data/logs/elastic</span></span><br><span class="line"><span class="comment">#thread_pool.write.queue_size: 2000</span></span><br><span class="line"><span class="comment">#thread_pool.write.size: 8</span></span><br><span class="line"><span class="comment"># 绑定ip地址</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">192.168</span><span class="number">.88</span><span class="number">.11</span></span><br><span class="line"><span class="comment"># 绑定端口</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9200</span></span><br><span class="line"><span class="comment"># 自动发现主节点的主机列表，如要列入所有node.master为true的节点</span></span><br><span class="line"><span class="attr">discovery.seed_hosts:</span> [<span class="string">&quot;192.168.88.11&quot;</span>,<span class="string">&quot;192.168.88.12&quot;</span>,<span class="string">&quot;192.168.88.13&quot;</span>]</span><br><span class="line"><span class="comment"># 可以被集群选举成主节点的成员列表</span></span><br><span class="line"><span class="attr">cluster.initial_master_nodes:</span> [<span class="string">&quot;zktest-master-1&quot;</span>,<span class="string">&quot;zktest-master-2&quot;</span>,<span class="string">&quot;zktest-master-3&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启x-pack安全验证</span></span><br><span class="line"><span class="attr">xpack.security.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">xpack.security.audit.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#xpack.license.self_generated.type: basic</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.verification_mode:</span> <span class="string">certificate</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.keystore.path:</span> <span class="string">/opt/elasticsearch/ca/elastic-certificates.p12</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.truststore.path:</span> <span class="string">/opt/elasticsearch/ca/elastic-certificates.p12</span></span><br><span class="line"><span class="comment"># 如果是basic license的话需要加入下面这一行，不然的话restart elasticsearch之后会报错。</span></span><br><span class="line"><span class="attr">xpack.monitoring.collection.enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">xpack.security.authc:</span></span><br><span class="line">  <span class="attr">realms:</span></span><br><span class="line">    <span class="attr">ldap:</span></span><br><span class="line">      <span class="attr">ldap1:</span></span><br><span class="line">        <span class="attr">order:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">&quot;ldap://youldapIP:389&quot;</span></span><br><span class="line">        <span class="attr">bind_dn:</span> <span class="string">&quot;cn=admin,dc=madking,dc=cn&quot;</span></span><br><span class="line">        <span class="attr">bind_password:</span> <span class="string">madking</span></span><br><span class="line">        <span class="attr">user_search:</span></span><br><span class="line">          <span class="attr">base_dn:</span> <span class="string">&quot;ou=users,dc=madking,dc=cn&quot;</span></span><br><span class="line">          <span class="attr">attribute:</span> <span class="string">uid</span></span><br><span class="line">        <span class="attr">group_search:</span></span><br><span class="line">          <span class="attr">base_dn:</span> <span class="string">&quot;dc=madking,dc=cn&quot;</span></span><br><span class="line">          <span class="attr">user_attribute:</span> <span class="string">uid</span></span><br><span class="line">        <span class="attr">files:</span></span><br><span class="line">          <span class="attr">role_mapping:</span> <span class="string">&quot;/opt/elasticsearch/config/role_mapping.yml&quot;</span></span><br><span class="line">        <span class="attr">unmapped_groups_as_roles:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="配置supervisor"><a href="#配置supervisor" class="headerlink" title="配置supervisor"></a>配置supervisor</h4></li><li><p>在/etc/supervisor/supervisord.conf配置文件的[supervisord]下修改配置</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">minfds = 1024000</span><br><span class="line">minprocs = 1024000</span><br></pre></td></tr></table></figure><ul><li>创建/etc/supervisor/conf.d/elastic.conf 配置文件，配置如下<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">program:elastic</span>]</span><br><span class="line"><span class="string">user</span> <span class="string">=</span> <span class="string">elastic</span></span><br><span class="line"><span class="string">command=/opt/elasticsearch/bin/elasticsearch</span></span><br><span class="line"><span class="string">stderr_logfile</span> <span class="string">=</span> <span class="string">/var/log/supervisor/elastic_err.log</span></span><br><span class="line"><span class="string">stdout_logfile</span> <span class="string">=</span> <span class="string">/var/log/supervisor/elastic_stdout.log</span></span><br><span class="line"><span class="string">directory</span> <span class="string">=</span> <span class="string">/opt/elasticsearch</span></span><br><span class="line"><span class="string">autostart=true</span></span><br><span class="line"><span class="string">autorestart=true</span></span><br><span class="line"><span class="string">startsecs=3</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="初始化集群用户密码"><a href="#初始化集群用户密码" class="headerlink" title="初始化集群用户密码"></a>初始化集群用户密码</h4><ul><li>下面指令会生成一组用户名密码对，请全部记录到自己的文件中<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/elasticsearch/bin/elasticsearch-setup-passwords auto</span><br></pre></td></tr></table></figure></li><li>直接用上面生成的elastic（超级管理员）用户登录kibana；</li></ul><h4 id="配置权限映射文件-role-mapping"><a href="#配置权限映射文件-role-mapping" class="headerlink" title="配置权限映射文件 role_mapping"></a>配置权限映射文件 role_mapping</h4><ul><li>role_mapping是权限与用户映射的文件，可以在kibana的角色管理中创建角色，并配置相关权限，然后在role_mapping中绑定用户</li><li>例如下面配置，集群已介入ldap，role_mapping将ldap中zkzk和harvey两个用户映射成了超级管理员权限（superuser）；然后将log-center组所有成员映射成了普通用户（customUser）权限<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">superuser:</span></span><br><span class="line"><span class="string">  - &quot;cn=zkzk,ou=users,dc=madking,dc=cn&quot;</span></span><br><span class="line"><span class="string">  - &quot;cn=harvey,ou=users,dc=madking,dc=cn&quot;</span></span><br><span class="line"><span class="string">customUser:</span></span><br><span class="line"><span class="string">  - &quot;cn=log-center,ou=group,dc=madking,dc=cn&quot;</span></span><br><span class="line"><span class="string">  &#x27;</span> &gt;&gt; /opt/elasticsearch/config/role_mapping.yml</span><br></pre></td></tr></table></figure></li><li>如果接入了ldap，则可以使用ldap的用户登录</li></ul>]]></content>
      
      
      <categories>
          
          <category> ELK </category>
          
      </categories>
      
      
        <tags>
            
            <tag> crack </tag>
            
            <tag> ELK </tag>
            
            <tag> elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google SRE 读书笔记 -- 分布式系统的监控</title>
      <link href="posts/e77168f6653bb6b9.html"/>
      <url>posts/e77168f6653bb6b9.html</url>
      
        <content type="html"><![CDATA[<h5 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h5><ul><li>收集、处理、汇总，并且显示关于某个系统的实时量化数据，例如请求的数量和数据，错误的数量和类型，以及处理用时，应用服务器的存活时间等。</li></ul><h5 id="白盒监控"><a href="#白盒监控" class="headerlink" title="白盒监控"></a>白盒监控</h5><ul><li>依靠系统内部暴露的一些性能指标进行监控。包括日志分析、java虚拟机提供的监控接口，或者一个列出内部统计数据的HTTP接口进行监控。</li></ul><h5 id="黑盒监控"><a href="#黑盒监控" class="headerlink" title="黑盒监控"></a>黑盒监控</h5><ul><li>通过测试某种外部用户课件的系统行为进行监控。</li></ul><h5 id="监控台页面"><a href="#监控台页面" class="headerlink" title="监控台页面"></a>监控台页面</h5><ul><li>提供某个服务核心指标一览服务的应用程序;</li><li>该程序提供：主要是真是指标，也额外包含一些过滤、选择等功能;</li><li>也可以显示相应团队的一些信息：<ul><li>目前工单的数量</li><li>高优先级的Bug列表</li><li>目前的on-call工程师和最近进行的生产发布</li></ul></li></ul><h5 id="警报"><a href="#警报" class="headerlink" title="警报"></a>警报</h5><ul><li>目标对象是某个人发现某个系统地址的一个通知</li><li>通知类型可包括：<ul><li>工单系统</li><li>E-mail地址</li><li>传呼机</li></ul></li><li>警报类型分类：<ul><li>工单</li><li>E-mail警报（warn）</li><li>紧急警报（page）</li></ul></li></ul><h5 id="监控的目的"><a href="#监控的目的" class="headerlink" title="监控的目的"></a>监控的目的</h5><ul><li>分析长期趋势<ul><li>数据库数量</li><li>增长速度</li><li>月活用户增长趋势</li></ul></li><li>跨时间范围比较，或者观察不同组之间的区别</li><li>预测即将发生的问题，发出警告</li><li>报警某项出现了故障，需要有人立即修复</li></ul><h5 id="对监控设置一些合理预期"><a href="#对监控设置一些合理预期" class="headerlink" title="对监控设置一些合理预期"></a>对监控设置一些合理预期</h5><ul><li><strong>简单快速</strong>的监控系统 + <strong>高效</strong>的分析工具；</li><li>监控系统规则<strong>越简单越好</strong>，应该非常<strong>容易理解</strong>；</li><li>监控规则可以检测某个非常简单、具体，但是严重的异常情况；</li><li>减少监控的<strong>复杂依赖关系</strong>：<ul><li>最好多花一些时间监控现象，而不是原因；针对原因，应该只监控那些非常确定的和非常明确的原因；</li></ul></li><li>能解决<strong>长尾问题</strong>；</li><li>度量指标采用<strong>合理的精度</strong>。</li></ul><h5 id="监控控制台四个黄金指标"><a href="#监控控制台四个黄金指标" class="headerlink" title="监控控制台四个黄金指标"></a>监控控制台四个黄金指标</h5><ul><li>延迟<ul><li>处理某个请求所需要的时间</li></ul></li><li>流量<ul><li>使用系统中的某个高层次的指标针对系统负载需求所进行的度量</li></ul></li><li>错误<ul><li>请求失败的速率</li></ul></li><li>饱和度<ul><li>服务器容量有都“满”</li><li>需要有预测报警，例如在几小时之后会填满硬盘</li></ul></li></ul><h5 id="上述理念进行整合"><a href="#上述理念进行整合" class="headerlink" title="上述理念进行整合"></a>上述理念进行整合</h5><ul><li>以上理念整合起来，可能就会比较复杂了，可以通过以下规则进行精简，目的还是要追求满足监控目的情况下的<strong>简单，高效</strong><ul><li>该规则是否能检测到一个目前检测不到的、紧急的、有操作性的，并且即将发生的或已经发生的用户可见故障</li><li>是否可以忽略这条警报？什么情况下可能会导致用户忽略这条警报，如何避免？</li><li>这条警报是否确实显示了用户正在受到影响？是否存在用户没有受到影响也可以触发这条规则的情况？例如测试环境或系统维护状态下发出的警报是否应该被过滤掉？</li><li>收到报警后，是否要进行某个操作？是否要立即执行，还是等到第二天早晨执行？该操作是否可以被安全的自动化？该操作的效果是长期的，还是短期的？</li></ul></li><li>以上这些问题，反映了应对报警的一些层次的理念：<ul><li>每当收到紧急警报试，应该立即需要我进行某种操作。每天只能进入紧急状态几次，太多就会导致“狼来了”的效应；</li><li>每个紧急警报都应该是可以具体操作的；</li><li>每个紧急警报的回复都应该需要某种智力分析过程，如果某个紧急警报只是需要一个固定的机械动作，那么太久不应该成为紧急的警报；</li><li>每个紧急警报都应该是关于某个新问题的，不应该彼此重叠；</li></ul></li></ul><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><ul><li>健康的监控系统应该是非常简单、易于理解的；</li><li>紧急报警应该关注于现象；</li><li>监控的技术栈层面越高，监控现象越容易；</li><li>对于所有报警都通过e-mail等发送，很容易变成噪声。我们应该更倾向于构建一个良好的监控台页面，直接显示所有的非紧急异常情况；</li><li>长远来看，要建立一个成功的on-call轮值体系，以及构建一个稳定的产品需要选择那些正在发生和即将发生的问题来进行报警，设置一个可以实际达到的合理目标，保证监控系统可以支持快速的定位与检测。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Google SRE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google SRE </tag>
            
            <tag> 分布式系统监控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openvpn部署与配置</title>
      <link href="posts/8568f93a02d542c8.html"/>
      <url>posts/8568f93a02d542c8.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>OpenVPN 是一个基于 OpenSSL 库的应用层 VPN 实现。和传统 VPN 相比，它的优点是简单易用。 </li></ul></blockquote><ul><li>OpenVPN允许参与建立VPN的单点使用共享金钥，电子证书，或者用户名/密码来进行身份验证。它大量使用了OpenSSL加密库中的SSLv3/TLSv1 协议函式库。OpenVPN能在Solaris、Linux、OpenBSD、FreeBSD、NetBSD、Mac OS X与Windows 2000/XP/Vista上运行，并包含了许多安全性的功能。它并不是一个基于Web的VPN软件，也不与IPsec及其他VPN软件包兼容。</li></ul><p>1、apt安装openvpn和easy-rsa，easy-rsa是制作证书的工具。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># sudo apt-get update</span></span><br><span class="line">root@ubuntu:~<span class="comment"># sudo apt-get install openvpn easy-rsa</span></span><br></pre></td></tr></table></figure><p>2、创建用来制作和存储用户证书的目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># make-cadir ~/openvpn-ca</span></span><br></pre></td></tr></table></figure><p>3、修改/root/openvpn-ca/vars 配置,找到相应配置项，修改值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> KEY_COUNTRY=<span class="string">&quot;CN&quot;</span></span><br><span class="line"><span class="built_in">export</span> KEY_PROVINCE=<span class="string">&quot;BJ&quot;</span></span><br><span class="line"><span class="built_in">export</span> KEY_CITY=<span class="string">&quot;HD&quot;</span></span><br><span class="line"><span class="built_in">export</span> KEY_ORG=<span class="string">&quot;MADBLOG&quot;</span></span><br><span class="line"><span class="built_in">export</span> KEY_EMAIL=<span class="string">&quot;madking@madblog.cn&quot;</span></span><br><span class="line"><span class="built_in">export</span> KEY_OU=<span class="string">&quot;DevOps&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># X509 Subject Field</span></span><br><span class="line"><span class="built_in">export</span> KEY_NAME=<span class="string">&quot;server&quot;</span></span><br></pre></td></tr></table></figure><p>4、加载vars配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># source vars</span></span><br></pre></td></tr></table></figure><p>5、制作CA证书，一路回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># ./clean-all</span></span><br><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># ./build-ca</span></span><br><span class="line">Generating a 2048 bit RSA private key</span><br><span class="line">...............................+++</span><br><span class="line">.....................................+++</span><br><span class="line">writing new private key to <span class="string">&#x27;ca.key&#x27;</span></span><br><span class="line">-----</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">&#x27;.&#x27;</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [CN]:</span><br><span class="line">State or Province Name (full name) [BJ]:</span><br><span class="line">Locality Name (eg, city) [HD]:</span><br><span class="line">Organization Name (eg, company) [MADBLOG]:</span><br><span class="line">Organizational Unit Name (eg, section) [DevOps]:</span><br><span class="line">Common Name (eg, your name or your server<span class="string">&#x27;s hostname) [MADBLOG CA]:</span></span><br><span class="line"><span class="string">Name [server]:</span></span><br><span class="line"><span class="string">Email Address [madking@madblog.cn]:</span></span><br></pre></td></tr></table></figure><p>6、服务端生成证书和私钥，一路回车，最后两部输入 y 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># ./build-key-server server</span></span><br><span class="line">Generating a 2048 bit RSA private key</span><br><span class="line">...+++</span><br><span class="line">.........................+++</span><br><span class="line">writing new private key to <span class="string">&#x27;server.key&#x27;</span></span><br><span class="line">-----</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">&#x27;.&#x27;</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [CN]:</span><br><span class="line"></span><br><span class="line">State or Province Name (full name) [BJ]:Locality Name (eg, city) [HD]:</span><br><span class="line">Organization Name (eg, company) [MADBLOG]:</span><br><span class="line">Organizational Unit Name (eg, section) [DevOps]:</span><br><span class="line">Common Name (eg, your name or your server<span class="string">&#x27;s hostname) [server]:</span></span><br><span class="line"><span class="string">Name [server]:</span></span><br><span class="line"><span class="string">Email Address [madking@madblog.cn]:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Please enter the following &#x27;</span>extra<span class="string">&#x27; attributes</span></span><br><span class="line"><span class="string">to be sent with your certificate request</span></span><br><span class="line"><span class="string">A challenge password []:</span></span><br><span class="line"><span class="string">An optional company name []:</span></span><br><span class="line"><span class="string">Using configuration from /root/openvpn-ca/openssl-1.0.0.cnf</span></span><br><span class="line"><span class="string">Check that the request matches the signature</span></span><br><span class="line"><span class="string">Signature ok</span></span><br><span class="line"><span class="string">The Subject&#x27;</span>s Distinguished Name is as follows</span><br><span class="line">countryName           :PRINTABLE:<span class="string">&#x27;CN&#x27;</span></span><br><span class="line">stateOrProvinceName   :PRINTABLE:<span class="string">&#x27;BJ&#x27;</span></span><br><span class="line">localityName          :PRINTABLE:<span class="string">&#x27;HD&#x27;</span></span><br><span class="line">organizationName      :PRINTABLE:<span class="string">&#x27;MADBLOG&#x27;</span></span><br><span class="line">organizationalUnitName:PRINTABLE:<span class="string">&#x27;DevOps&#x27;</span></span><br><span class="line">commonName            :PRINTABLE:<span class="string">&#x27;server&#x27;</span></span><br><span class="line">name                  :PRINTABLE:<span class="string">&#x27;server&#x27;</span></span><br><span class="line">emailAddress          :IA5STRING:<span class="string">&#x27;madking@madblog.cn&#x27;</span></span><br><span class="line">Certificate is to be certified until Oct  9 03:47:19 2029 GMT (3650 days)</span><br><span class="line">Sign the certificate? [y/n]:y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1 out of 1 certificate requests certified, commit? [y/n]y</span><br><span class="line">Write out database with 1 new entries</span><br><span class="line">Data Base Updated</span><br></pre></td></tr></table></figure><p>7、生成 Diffie Hellman 参数</p><ul><li>必须为OpenVPN服务端生成 Diffie Hellman 参数。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># ./build-dh</span></span><br><span class="line">Generating DH parameters, 2048 bit long safe prime, generator 2</span><br><span class="line">This is going to take a long time</span><br><span class="line">..................................+.................................................................++*++*</span><br></pre></td></tr></table></figure><p>8、将/root/openvpn-ca/keys软连接到/etc/openvpn/</p><p>9、生成ta.key文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># openvpn --genkey --secret /etc/openvpn/keys/ta.key</span></span><br></pre></td></tr></table></figure><p>10、拷贝配置文件模板，解压后修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz /etc/openvpn/</span></span><br><span class="line"></span><br><span class="line">root@ubuntu:/etc/openvpn<span class="comment"># vim server.conf</span></span><br></pre></td></tr></table></figure><ul><li>修改后内容如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">local</span> 0.0.0.0</span><br><span class="line">port 443</span><br><span class="line">proto tcp</span><br><span class="line">;proto udp</span><br><span class="line">;dev tap</span><br><span class="line">dev tun</span><br><span class="line">;dev-node MyTap</span><br><span class="line">ca /etc/openvpn/keys/ca.crt</span><br><span class="line">cert /etc/openvpn/keys/server.crt</span><br><span class="line">key /etc/openvpn/keys/server.key  <span class="comment"># This file should be kept secret</span></span><br><span class="line">dh /etc/openvpn/keys/dh2048.pem</span><br><span class="line">;topology subnet</span><br><span class="line">server 10.8.0.0 255.255.255.0</span><br><span class="line">ifconfig-pool-persist ipp.txt</span><br><span class="line">;server-bridge 10.8.0.4 255.255.255.0 10.8.0.50 10.8.0.100</span><br><span class="line">;server-bridge</span><br><span class="line">push <span class="string">&quot;route 10.0.0.0 255.0.0.0&quot;</span></span><br><span class="line">;push <span class="string">&quot;route 172.16.0.0 255.240.0.0 vpn_gateway&quot;</span></span><br><span class="line">;push <span class="string">&quot;route 192.168.10.0 255.255.255.0&quot;</span></span><br><span class="line">;push <span class="string">&quot;route 192.168.20.0 255.255.255.0&quot;</span></span><br><span class="line">;client-config-dir ccd</span><br><span class="line">;route 192.168.40.128 255.255.255.248</span><br><span class="line">;client-config-dir ccd</span><br><span class="line">;route 10.9.0.0 255.255.255.252</span><br><span class="line">;route 172.16.0.0 255.240.0.0 10.25.203.247</span><br><span class="line">;learn-address ./script</span><br><span class="line">;push <span class="string">&quot;redirect-gateway def1 bypass-dhcp&quot;</span></span><br><span class="line">;push <span class="string">&quot;dhcp-option DNS 8.8.8.8&quot;</span></span><br><span class="line">;push <span class="string">&quot;dhcp-option DNS 114.114.114.114&quot;</span></span><br><span class="line">;client-to-client</span><br><span class="line">duplicate-cn</span><br><span class="line">keepalive 10 120</span><br><span class="line">tls-auth /etc/openvpn/keys/ta.key 0 <span class="comment"># This file is secret</span></span><br><span class="line">cipher BF-CBC        <span class="comment"># Blowfish (default)</span></span><br><span class="line">;cipher AES-128-CBC   <span class="comment"># AES</span></span><br><span class="line">;cipher DES-EDE3-CBC  <span class="comment"># Triple-DES</span></span><br><span class="line">comp-lzo</span><br><span class="line">;max-clients 100</span><br><span class="line">user nobody</span><br><span class="line">group nogroup</span><br><span class="line">persist-key</span><br><span class="line">persist-tun</span><br><span class="line">status openvpn-status.log</span><br><span class="line"><span class="built_in">log</span>         /var/<span class="built_in">log</span>/openvpn.log</span><br><span class="line">log-append  /var/<span class="built_in">log</span>/openvpn.log</span><br><span class="line">verb 3</span><br><span class="line">;mute 20</span><br></pre></td></tr></table></figure><p>11、开启ip转发功能，编辑/etc/sysctl.conf,修改net.ipv4.ip_forward为1<br>root@ubuntu:/etc/openvpn# vim /etc/sysctl.conf<br>root@ubuntu:/etc/openvpn# sysctl -p<br>net.ipv4.ip_forward = 1</p><p>12、启动openvpn</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># /etc/init.d/openvpn start</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># /usr/sbin/openvpn --daemon ovpn-server --status /run/openvpn/server.status 10 --cd /etc/openvpn --script-security 2 --config /etc/openvpn/server.conf --writepid /run/openvpn/server.pid</span></span><br></pre></td></tr></table></figure><p>13、检查端口是否启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># netstat -ntlp | grep &#x27;0.0.0.0:443&#x27;</span></span><br><span class="line">tcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN      14330/openvpn</span><br></pre></td></tr></table></figure><p>14、给用户申请证书 ./build-key madking</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># cd /root/openvpn-ca/</span></span><br><span class="line"></span><br><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># source vars</span></span><br><span class="line">NOTE: If you run ./clean-all, I will be doing a rm -rf on /root/openvpn-ca/keys</span><br><span class="line"></span><br><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># ./build-key madking</span></span><br><span class="line">Generating a 2048 bit RSA private key</span><br><span class="line">..................................................................+++</span><br><span class="line">.....................+++</span><br><span class="line">writing new private key to <span class="string">&#x27;madking.key&#x27;</span></span><br><span class="line">-----</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">&#x27;.&#x27;</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [CN]:</span><br><span class="line">State or Province Name (full name) [BJ]:</span><br><span class="line">Locality Name (eg, city) [HD]:</span><br><span class="line">Organization Name (eg, company) [MADBLOG]:</span><br><span class="line">Organizational Unit Name (eg, section) [DevOps]:</span><br><span class="line">Common Name (eg, your name or your server<span class="string">&#x27;s hostname) [madking]:</span></span><br><span class="line"><span class="string">Name [server]:</span></span><br><span class="line"><span class="string">Email Address [madking@madblog.cn]:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Please enter the following &#x27;</span>extra<span class="string">&#x27; attributes</span></span><br><span class="line"><span class="string">to be sent with your certificate request</span></span><br><span class="line"><span class="string">A challenge password []:</span></span><br><span class="line"><span class="string">An optional company name []:</span></span><br><span class="line"><span class="string">Using configuration from /root/openvpn-ca/openssl-1.0.0.cnf</span></span><br><span class="line"><span class="string">Check that the request matches the signature</span></span><br><span class="line"><span class="string">Signature ok</span></span><br><span class="line"><span class="string">The Subject&#x27;</span>s Distinguished Name is as follows</span><br><span class="line">countryName           :PRINTABLE:<span class="string">&#x27;CN&#x27;</span></span><br><span class="line">stateOrProvinceName   :PRINTABLE:<span class="string">&#x27;BJ&#x27;</span></span><br><span class="line">localityName          :PRINTABLE:<span class="string">&#x27;HD&#x27;</span></span><br><span class="line">organizationName      :PRINTABLE:<span class="string">&#x27;MADBLOG&#x27;</span></span><br><span class="line">organizationalUnitName:PRINTABLE:<span class="string">&#x27;DevOps&#x27;</span></span><br><span class="line">commonName            :PRINTABLE:<span class="string">&#x27;madking&#x27;</span></span><br><span class="line">name                  :PRINTABLE:<span class="string">&#x27;server&#x27;</span></span><br><span class="line">emailAddress          :IA5STRING:<span class="string">&#x27;madking@madblog.cn&#x27;</span></span><br><span class="line">Certificate is to be certified until Oct  9 04:56:29 2029 GMT (3650 days)</span><br><span class="line">Sign the certificate? [y/n]:y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1 out of 1 certificate requests certified, commit? [y/n]y</span><br><span class="line">Write out database with 1 new entries</span><br><span class="line">Data Base Updated</span><br></pre></td></tr></table></figure><p>15、注销用户的证书 ./revoke-full madking</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># cd /root/openvpn-ca/</span></span><br><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># source vars</span></span><br><span class="line">root@ubuntu:~/openvpn-ca<span class="comment"># ./revoke-full madking</span></span><br><span class="line">Using configuration from /root/openvpn-ca/openssl-1.0.0.cnf</span><br><span class="line">Revoking Certificate 02.</span><br><span class="line">Data Base Updated</span><br><span class="line">Using configuration from /root/openvpn-ca/openssl-1.0.0.cnf</span><br><span class="line">madking.crt: C = CN, ST = BJ, L = HD, O = MADBLOG, OU = DevOps, CN = madking, name = server, emailAddress = madking@madblog.cn</span><br><span class="line">error 23 at 0 depth lookup:certificate revoked</span><br></pre></td></tr></table></figure><ul><li>执行完后就会生成：/etc/openvpn/keys/crl.pem</li><li>改名字crl.pem 为 madking.pem </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># cd /root/openvpn-ca/keys</span></span><br><span class="line">root@ubuntu:~<span class="comment"># mv crl.pem madking.pem</span></span><br></pre></td></tr></table></figure><ul><li>将/root/openvpn-ca/keys/madking.pem 记录到配置文件中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;crl-verify /root/openvpn-ca/keys/madking.pem&#x27;</span> &gt;&gt; /etc/openvpn/server.conf</span><br></pre></td></tr></table></figure><p>16、客户端配置<br>拷贝文件<br>madking.crt<br>ca.crt<br>madking.key<br>ta.key</p><p>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">client</span><br><span class="line">dev tun</span><br><span class="line">proto tcp</span><br><span class="line">remote 192.168.3.179</span><br><span class="line">port 443</span><br><span class="line">persist-key</span><br><span class="line">persist-tun</span><br><span class="line"></span><br><span class="line">ca ./ca.crt</span><br><span class="line">cert ./madking.crt</span><br><span class="line">key ./madking.key</span><br><span class="line">tls-auth ./ta.key 1</span><br><span class="line">comp-lzo yes</span><br><span class="line">verb 3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sed </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mongodb副本集的分库与恢复操作</title>
      <link href="posts/e6d7c5c3586abd73.html"/>
      <url>posts/e6d7c5c3586abd73.html</url>
      
        <content type="html"><![CDATA[<h2 id="Mongodb的维护工作中经常有分库的操作，需要将一个副本集集群拆分为两个，操作步骤一般是先扩展两个副本节点，然后再把这两个几点从旧集群中拆分出去，组成新的集群，然后删减多余的数据。"><a href="#Mongodb的维护工作中经常有分库的操作，需要将一个副本集集群拆分为两个，操作步骤一般是先扩展两个副本节点，然后再把这两个几点从旧集群中拆分出去，组成新的集群，然后删减多余的数据。" class="headerlink" title="Mongodb的维护工作中经常有分库的操作，需要将一个副本集集群拆分为两个，操作步骤一般是先扩展两个副本节点，然后再把这两个几点从旧集群中拆分出去，组成新的集群，然后删减多余的数据。"></a>Mongodb的维护工作中经常有分库的操作，需要将一个副本集集群拆分为两个，操作步骤一般是先扩展两个副本节点，然后再把这两个几点从旧集群中拆分出去，组成新的集群，然后删减多余的数据。</h2><h3 id="拆分为两个集群"><a href="#拆分为两个集群" class="headerlink" title="拆分为两个集群"></a>拆分为两个集群</h3><ul><li><strong>配置文件：</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cat mongod_46000.conf</span></span><br><span class="line">[program:mongod_46000]</span><br><span class="line">command=/usr/bin/mongod --wiredTigerDirectoryForIndexes --dbpath /data/mongodb/test_db_46000/ --port 46000 --maxConns 4000  --quiet --logappend --logpath /data/server/logs_tmp/logs/testdb_46000.log --directoryperdb --auth --nojournal --oplogSize 1000 --replSet db_test_46000 --keyFile=/data/mongodb/test_db_46000.key --setParameter replWriterThreadCount=32</span><br><span class="line">user=root</span><br><span class="line">stderr_logfile = /var/log/supervisor/mongod_46000_err.log</span><br><span class="line">stdout_logfile = /var/log/supervisor/mongod_46000_stdout.log</span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line">startsecs=5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cat mongod_59000.single.conf.bak</span></span><br><span class="line">[program:mongod_59000]</span><br><span class="line">command=/usr/bin/mongod --wiredTigerDirectoryForIndexes --dbpath /data/mongodb/test_new_db_59000/ --port 59000 --maxConns 4000  --quiet --logappend --logpath /data/server/logs_tmp/logs/testdb_59000.log --directoryperdb --nojournal --oplogSize 1000 --setParameter replWriterThreadCount=32</span><br><span class="line">user=root</span><br><span class="line">stderr_logfile = /var/log/supervisor/mongod_59000_err.log</span><br><span class="line">stdout_logfile = /var/log/supervisor/mongod_59000_stdout.log</span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line">startsecs=5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cat mongod_59000.repl.conf.bak</span></span><br><span class="line">[program:mongod_59000]</span><br><span class="line">command=/usr/bin/mongod --wiredTigerDirectoryForIndexes --dbpath /data/mongodb/test_new_db_59000/ --port 59000 --maxConns 4000  --quiet --logappend --logpath /data/server/logs_tmp/logs/testdb_59000.log --directoryperdb --auth --nojournal --oplogSize 1000 --replSet db_new_test_59000 --keyFile=/data/mongodb/test_new_db_59000.key --setParameter replWriterThreadCount=32</span><br><span class="line">user=root</span><br><span class="line">stderr_logfile = /var/log/supervisor/mongod_59000_err.log</span><br><span class="line">stdout_logfile = /var/log/supervisor/mongod_59000_stdout.log</span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line">startsecs=5</span><br></pre></td></tr></table></figure><ul><li><strong>在ansible机器上执行：</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;rs.remove(&quot;db-3.testdb.cn:46000&quot;)&#x27; | mongo mongodb://user:password@192.168.1.3:46000/admin</span><br><span class="line">echo &#x27;rs.remove(&quot;db-4.testdb.cn:46000&quot;)&#x27; | mongo mongodb://user:password@192.168.1.3:46000/admin</span><br></pre></td></tr></table></figure><ul><li><strong>在两台db-new上执行，开广播一起执行：</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/supervisor/conf.d/mongod_46000.conf /etc/supervisor/conf.d/mongod_46000.conf.bak</span><br><span class="line">mv /etc/supervisor/conf.d/mongod_59000.single.conf.bak /etc/supervisor/conf.d/mongod_59000.conf</span><br><span class="line">supervisorctl stop all</span><br></pre></td></tr></table></figure><ul><li><strong>等待都停止完成</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">umount /data/mongodb/test_db_46000</span><br><span class="line">mv /data/mongodb/test_db_46000 /data/mongodb/test_new_db_59000/</span><br><span class="line">mount /dev/vdb1 /data/mongodb/test_new_db_59000/</span><br><span class="line">mv /data/mongodb/test_db_46000.key /data/mongodb/test_new_db_59000.key</span><br><span class="line">supervisorctl update</span><br><span class="line">supervisorctl start all</span><br></pre></td></tr></table></figure><ul><li><strong>等待都启动完成</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 59000</span><br><span class="line">use local</span><br><span class="line">cfg=&#123;</span><br><span class="line">    &quot;_id&quot; : &quot;db_new_test_59000&quot;,</span><br><span class="line">    &quot;version&quot; : 1,</span><br><span class="line">    &quot;protocolVersion&quot; : NumberLong(1),</span><br><span class="line">    &quot;members&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 1,</span><br><span class="line">            &quot;host&quot; : &quot;db-new-0.testdb.cn:59000&quot;,</span><br><span class="line">            &quot;arbiterOnly&quot; : false,</span><br><span class="line">            &quot;buildIndexes&quot; : true,</span><br><span class="line">            &quot;hidden&quot; : false,</span><br><span class="line">            &quot;priority&quot; : 20,</span><br><span class="line">            &quot;tags&quot; : &#123;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;slaveDelay&quot; : NumberLong(0),</span><br><span class="line">            &quot;votes&quot; : 1</span><br><span class="line">        &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_id&quot; : 2,</span><br><span class="line">      &quot;host&quot; : &quot;db-new-1.testdb.cn:59000&quot;,</span><br><span class="line">      &quot;arbiterOnly&quot; : false,</span><br><span class="line">      &quot;buildIndexes&quot; : true,</span><br><span class="line">      &quot;hidden&quot; : false,</span><br><span class="line">      &quot;priority&quot; : 10,</span><br><span class="line">      &quot;tags&quot; : &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;slaveDelay&quot; : NumberLong(0),</span><br><span class="line">      &quot;votes&quot; : 1</span><br><span class="line">    &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">        &quot;chainingAllowed&quot; : true,</span><br><span class="line">        &quot;heartbeatIntervalMillis&quot; : 2000,</span><br><span class="line">        &quot;heartbeatTimeoutSecs&quot; : 10,</span><br><span class="line">        &quot;electionTimeoutMillis&quot; : 10000,</span><br><span class="line">        &quot;getLastErrorModes&quot; : &#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;getLastErrorDefaults&quot; : &#123;</span><br><span class="line">            &quot;w&quot; : 1,</span><br><span class="line">            &quot;wtimeout&quot; : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;replicaSetId&quot; : ObjectId(&quot;5a53790d3c33f4cb9f44ca3c&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">db.system.replset.save(cfg)</span><br><span class="line">db.system.replset.remove(&#123;&quot;_id&quot; : &quot;db_test_46000&quot;&#125;)</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">mv /etc/supervisor/conf.d/mongod_59000.conf /etc/supervisor/conf.d/mongod_59000.single.conf.bak</span><br><span class="line">mv /etc/supervisor/conf.d/mongod_59000.repl.conf.bak /etc/supervisor/conf.d/mongod_59000.conf</span><br><span class="line">supervisorctl update</span><br></pre></td></tr></table></figure><h3 id="恢复到一个集群"><a href="#恢复到一个集群" class="headerlink" title="恢复到一个集群"></a>恢复到一个集群</h3><ul><li><strong>在db-new上执行，修改配置文件，mongodb以单点启动</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/supervisor/conf.d/mongod_59000.conf /etc/supervisor/conf.d/mongod_59000.repl.conf.bak</span><br><span class="line">mv /etc/supervisor/conf.d/mongod_59000.single.conf.bak /etc/supervisor/conf.d/mongod_59000.conf</span><br><span class="line">supervisorctl update</span><br></pre></td></tr></table></figure><ul><li><strong>配置更新后，等待重启完成，执行指令</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 59000</span><br><span class="line">use local</span><br><span class="line">cfg=&#123;</span><br><span class="line">    &quot;_id&quot; : &quot;db_test_46000&quot;,</span><br><span class="line">    &quot;version&quot; : 20,</span><br><span class="line">    &quot;protocolVersion&quot; : NumberLong(1),</span><br><span class="line">    &quot;members&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 1,</span><br><span class="line">            &quot;host&quot; : &quot;db-0.testdb.cn:46000&quot;,</span><br><span class="line">            &quot;arbiterOnly&quot; : false,</span><br><span class="line">            &quot;buildIndexes&quot; : true,</span><br><span class="line">            &quot;hidden&quot; : false,</span><br><span class="line">            &quot;priority&quot; : 20,</span><br><span class="line">            &quot;tags&quot; : &#123;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;slaveDelay&quot; : NumberLong(0),</span><br><span class="line">            &quot;votes&quot; : 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 2,</span><br><span class="line">            &quot;host&quot; : &quot;db-1.testdb.cn:46000&quot;,</span><br><span class="line">            &quot;arbiterOnly&quot; : false,</span><br><span class="line">            &quot;buildIndexes&quot; : true,</span><br><span class="line">            &quot;hidden&quot; : false,</span><br><span class="line">            &quot;priority&quot; : 10,</span><br><span class="line">            &quot;tags&quot; : &#123;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;slaveDelay&quot; : NumberLong(0),</span><br><span class="line">            &quot;votes&quot; : 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 3,</span><br><span class="line">            &quot;host&quot; : &quot;db-h.testdb.cn:46000&quot;,</span><br><span class="line">            &quot;arbiterOnly&quot; : false,</span><br><span class="line">            &quot;buildIndexes&quot; : true,</span><br><span class="line">            &quot;hidden&quot; : true,</span><br><span class="line">            &quot;priority&quot; : 0,</span><br><span class="line">            &quot;tags&quot; : &#123;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;slaveDelay&quot; : NumberLong(43200),</span><br><span class="line">            &quot;votes&quot; : 1</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">        &quot;chainingAllowed&quot; : true,</span><br><span class="line">        &quot;heartbeatIntervalMillis&quot; : 2000,</span><br><span class="line">        &quot;heartbeatTimeoutSecs&quot; : 10,</span><br><span class="line">        &quot;electionTimeoutMillis&quot; : 10000,</span><br><span class="line">        &quot;getLastErrorModes&quot; : &#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;getLastErrorDefaults&quot; : &#123;</span><br><span class="line">            &quot;w&quot; : 1,</span><br><span class="line">            &quot;wtimeout&quot; : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;replicaSetId&quot; : ObjectId(&quot;5a53790d3c33f4cb9f44ca3c&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">db.system.replset.save(cfg)</span><br><span class="line">db.system.replset.remove(&#123;&quot;_id&quot; : &quot;db_new_test_59000&quot;&#125;)</span><br><span class="line">exit</span><br><span class="line">mv /etc/supervisor/conf.d/mongod_59000.conf /etc/supervisor/conf.d/mongod_59000.single.conf.bak</span><br><span class="line">mv /etc/supervisor/conf.d/mongod_46000.conf.bak /etc/supervisor/conf.d/mongod_46000.conf</span><br><span class="line"></span><br><span class="line">supervisorctl stop all</span><br><span class="line"></span><br><span class="line">umount /data/mongodb/test_new_db_59000/</span><br><span class="line">mv /data/mongodb/test_new_db_59000 /data/mongodb/test_db_46000</span><br><span class="line">mount /dev/vdb1 /data/mongodb/test_db_46000</span><br><span class="line">mv /data/mongodb/test_new_db_59000.key /data/mongodb/test_db_46000.key</span><br><span class="line">supervisorctl update</span><br><span class="line">supervisorctl start all</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><ul><li><strong>在ansible机器上执行</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;rs.add(&quot;db-3.testdb.cn:46000&quot;)&#x27; | mongo mongodb://user:password@192.168.1.3:46000/admin</span><br><span class="line">echo &#x27;rs.add(&quot;db-4.testdb.cn:46000&quot;)&#x27; | mongo mongodb://user:password@192.168.1.3:46000/admin</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis 通过rdb文件分析内存</title>
      <link href="posts/ed64ad4a32f60d5f.html"/>
      <url>posts/ed64ad4a32f60d5f.html</url>
      
        <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p><strong>Redis Cluster</strong>偶尔会有node节点内存分配不均，内存使用高的节点比其他节点高出近一倍的内存使用，这中情况一般也伴随着<strong>Max RT</strong>、<strong>Average RT</strong>飙升到十几秒，后端日志中也会有大量的<strong>read/write redis timeout</strong>。</p><p><strong>为了不影响线上</strong>，可以使用<strong>bgsave</strong>生成 dump.rdb 文件，再结合 redis-rdb-tools 和 sqlite 来进行静态分析。该方法简单实用，而且<strong>不会影响线上redis的使用</strong>。</p><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><h4 id="1-安装rdbtools"><a href="#1-安装rdbtools" class="headerlink" title="1. 安装rdbtools"></a>1. 安装rdbtools</h4><ul><li>检查python版本是否为2.7</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> python  -V</span></span><br><span class="line">Python 2.7.12</span><br></pre></td></tr></table></figure><ul><li>更新升级pip</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> pip install --upgrade pip</span></span><br></pre></td></tr></table></figure><ul><li>安装rdbtools</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> pip install rdbtools</span></span><br></pre></td></tr></table></figure><h4 id="2-安装sqlite3"><a href="#2-安装sqlite3" class="headerlink" title="2. 安装sqlite3"></a>2. 安装sqlite3</h4><ul><li>ubuntu</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install sqlite3</span><br></pre></td></tr></table></figure><ul><li><p>centos</p><ul><li><p>下载sqlite源码包,解压，编译安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> wget https://www.sqlite.org/2019/sqlite-autoconf-3280000.tar.gz</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tar xvzf sqlite-autoconf-3280000.tar.gz</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> sqlite-autoconf-3280000</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure></li><li><p>安装sqlite-devel</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install sqlite-devel</span></span><br></pre></td></tr></table></figure></li><li><p>查看sqlite3是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sqlite3 --version</span></span><br><span class="line">3.7.17 2013-05-20 00:56:22 118a3b35693b134d56ebd780123b7fd6f1497668</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> sqlite3</span></span><br><span class="line">SQLite version 3.7.17 2013-05-20 00:56:22</span><br><span class="line">Enter &quot;.help&quot; for instructions</span><br><span class="line">Enter SQL statements terminated with a &quot;;&quot;</span><br><span class="line"><span class="meta">sqlite&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-创建rdb文件"><a href="#3-创建rdb文件" class="headerlink" title="3. 创建rdb文件"></a>3. 创建rdb文件</h4></li></ul></li><li><p>如果redis有打开rdb方式的持久化，可以直接使用该rdb文件，保险起见，也可以先检查下rdb文件更新的日期。</p></li><li><p>如果没有打开rdb持久化，则需要使用指令bgsave，生成一份rdb文件。 </p></li><li><p>bgsave方式创建rdb文件，系统会fork出一个redis进程来处理save数据，fork前和fork过程中都需要关注下cpu和内存资源使用情况。</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> redis-cli -a password -h host -p port</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> bgsave</span></span><br></pre></td></tr></table></figure><h4 id="4-使用redis-rdb-tools生成内存报告"><a href="#4-使用redis-rdb-tools生成内存报告" class="headerlink" title="4. 使用redis-rdb-tools生成内存报告"></a>4. 使用redis-rdb-tools生成内存报告</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> rdb -c memory redis.rdb &gt; memory.csv</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> head memory.csv</span></span><br><span class="line">database,type,key,size_in_bytes,encoding,num_elements,len_largest_element</span><br><span class="line">0,string,&quot;orderAt:377671748&quot;,96,string,8,8</span><br><span class="line">0,string,&quot;orderAt:413052773&quot;,96,string,8,8</span><br><span class="line">0,sortedset,&quot;Artical:Comments:7386&quot;,81740,skiplist,479,41</span><br><span class="line">0,sortedset,&quot;pay:id:18029&quot;,2443,ziplist,84,16</span><br><span class="line">0,string,&quot;orderAt:452389458&quot;,96,string,8,8</span><br></pre></td></tr></table></figure><h4 id="5-导入sqlite3分析内存"><a href="#5-导入sqlite3分析内存" class="headerlink" title="5. 导入sqlite3分析内存"></a>5. 导入sqlite3分析内存</h4><ul><li>csv文件导入到sqlite3</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlite3 memory.db</span><br><span class="line"><span class="meta">sqlite&gt;</span><span class="bash"> create table memory(database int,<span class="built_in">type</span> varchar(128),key varchar(128),size_in_bytes int,encoding varchar(128),num_elements int,len_largest_element varchar(128));</span></span><br><span class="line"><span class="meta">sqlite&gt;</span><span class="bash"> .mode csv memory</span></span><br><span class="line"><span class="meta">sqlite&gt;</span><span class="bash"> .import memory.csv memory</span></span><br></pre></td></tr></table></figure><ul><li>查询key个数</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">sqlite&gt;</span><span class="bash">select count(*) from memory;</span></span><br></pre></td></tr></table></figure><ul><li>查询总的内存占用</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">sqlite&gt;</span><span class="bash">select sum(size_in_bytes) from memory;</span></span><br></pre></td></tr></table></figure><ul><li>查询内存占用最高的10个 key</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">sqlite&gt;</span><span class="bash">select * from memory order by size_in_bytes desc <span class="built_in">limit</span> 10;</span></span><br></pre></td></tr></table></figure><ul><li>查询成员个数1000个以上的 list</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">sqlite&gt;</span><span class="bash">select * from memory <span class="built_in">where</span> <span class="built_in">type</span>=<span class="string">&#x27;list&#x27;</span> and num_elements &gt; 1000 ;</span></span><br></pre></td></tr></table></figure><ul><li>根据key前缀查询key种类个数，排序后取前十个</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">sqlite&gt;</span><span class="bash">select count(*) a, substr(key,0,5) as b from memory group by b order by a desc <span class="built_in">limit</span> 10;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Influxdb 收集 Nginx(Tengine)状态信息并在Grafana上展示（一）Tengine的配置</title>
      <link href="posts/8214efb11e945d28.html"/>
      <url>posts/8214efb11e945d28.html</url>
      
        <content type="html"><![CDATA[<h6 id="Tengine是由淘宝网发起的Web服务器项目。它在Nginx的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。Tengine的性能和稳定性已经在大型的网站如淘宝网，天猫商城等得到了很好的检验。它的最终目标是打造一个高效、稳定、安全、易用的Web平台。"><a href="#Tengine是由淘宝网发起的Web服务器项目。它在Nginx的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。Tengine的性能和稳定性已经在大型的网站如淘宝网，天猫商城等得到了很好的检验。它的最终目标是打造一个高效、稳定、安全、易用的Web平台。" class="headerlink" title="Tengine是由淘宝网发起的Web服务器项目。它在Nginx的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。Tengine的性能和稳定性已经在大型的网站如淘宝网，天猫商城等得到了很好的检验。它的最终目标是打造一个高效、稳定、安全、易用的Web平台。"></a><a href="http://tengine.taobao.org/">Tengine</a>是由淘宝网发起的Web服务器项目。它在Nginx的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。Tengine的性能和稳定性已经在大型的网站如淘宝网，天猫商城等得到了很好的检验。它的最终目标是打造一个高效、稳定、安全、易用的Web平台。</h6><ul><li><h6 id="Tengine的特性"><a href="#Tengine的特性" class="headerlink" title="Tengine的特性"></a>Tengine的特性</h6><ul><li>继承Nginx-1.8.1的所有特性，兼容Nginx的配置；</li><li>动态模块加载（DSO）支持。加入一个模块不再需要重新编译整个Tengine；</li><li>支持HTTP/2协议，HTTP/2模块替代SPDY模块；</li><li>流式上传到HTTP后端服务器或FastCGI服务器，大量减少机器的I/O压力；</li><li>支持异步OpenSSL，可使用硬件如:QAT进行HTTPS的加速与卸载；</li><li>更加强大的负载均衡能力，包括一致性hash模块、会话保持模块，还可以对后端的服务器进行主动健康检查，根据服务器状态自动上线下线，以及动态解析upstream中出现的域名；</li><li>输入过滤器机制支持。通过使用这种机制Web应用防火墙的编写更为方便；</li><li>支持设置proxy、memcached、fastcgi、scgi、uwsgi在后端失败时的重试次数</li><li>动态脚本语言Lua支持。扩展功能非常高效简单；</li><li>支持按指定关键字(域名，url等)收集Tengine运行状态；</li><li>组合多个CSS、JavaScript文件的访问请求变成一个请求；</li><li>自动去除空白字符和注释从而减小页面的体积</li><li>自动根据CPU数目设置进程个数和绑定CPU亲缘性；</li><li>监控系统的负载和资源占用从而对系统进行保护；</li><li>显示对运维人员更友好的出错信息，便于定位出错机器；</li><li>更强大的防攻击（访问速度限制）模块；</li><li>更方便的命令行参数，如列出编译的模块列表、支持的指令等；</li><li>可以根据访问文件类型设置过期时间；</li></ul></li><li><h6 id="更多安装和配置文档请查看-Tengine官方网站"><a href="#更多安装和配置文档请查看-Tengine官方网站" class="headerlink" title="更多安装和配置文档请查看 Tengine官方网站"></a>更多安装和配置文档请查看 <a href="http://tengine.taobao.org/">Tengine官方网站</a></h6></li></ul><h6 id="监控和收集nginx的相应时间、连接数、http状态码等各项指标可以使用ELK分析日志，也可以用req-status模块在nginx上开放一个api接口供其他程序调用收集。"><a href="#监控和收集nginx的相应时间、连接数、http状态码等各项指标可以使用ELK分析日志，也可以用req-status模块在nginx上开放一个api接口供其他程序调用收集。" class="headerlink" title="监控和收集nginx的相应时间、连接数、http状态码等各项指标可以使用ELK分析日志，也可以用req_status模块在nginx上开放一个api接口供其他程序调用收集。"></a>监控和收集nginx的相应时间、连接数、http状态码等各项指标可以使用ELK分析日志，也可以用req_status模块在nginx上开放一个api接口供其他程序调用收集。</h6><ul><li><h6 id="nginx也是可以做到，需要安装第三方模块ngx-req-status，nginx自带的模块只能显示连接数等等信息，我们并不能知道到底有哪些请求、以及各url域名所消耗的带宽是多少。ngx-req-status提供了这些功能"><a href="#nginx也是可以做到，需要安装第三方模块ngx-req-status，nginx自带的模块只能显示连接数等等信息，我们并不能知道到底有哪些请求、以及各url域名所消耗的带宽是多少。ngx-req-status提供了这些功能" class="headerlink" title="nginx也是可以做到，需要安装第三方模块ngx_req_status，nginx自带的模块只能显示连接数等等信息，我们并不能知道到底有哪些请求、以及各url域名所消耗的带宽是多少。ngx_req_status提供了这些功能."></a>nginx也是可以做到，需要安装第三方模块<a href="https://github.com/zls0424/ngx_req_status/archive/master.zip">ngx_req_status</a>，nginx自带的模块只能显示连接数等等信息，我们并不能知道到底有哪些请求、以及各url域名所消耗的带宽是多少。ngx_req_status提供了这些功能.</h6></li><li><p>功能特性</p><ul><li>按域名、uri、ip等统计信息</li><li>统计http状态码</li><li>统计当前带宽、峰值带宽</li><li>统计总请求量</li><li>可定制获取一部分或所有监控结果</li><li>回收过期的监控数据。</li><li>设置输出格式</li><li>跟踪请求，不受内部跳转的影响</li></ul></li><li><h6 id="tengine在编译安装时默认会编译ngx-http-reqstat-module模块，除非通过–without-http-reqstat-module指明不编译此模块，或通过–with-http-reqstat-module-shared编译为so模块。使用so模块加载的话，请确保其顺序在”ngx-http-lua-module”之后。可以借助”nginx-m”来确认。"><a href="#tengine在编译安装时默认会编译ngx-http-reqstat-module模块，除非通过–without-http-reqstat-module指明不编译此模块，或通过–with-http-reqstat-module-shared编译为so模块。使用so模块加载的话，请确保其顺序在”ngx-http-lua-module”之后。可以借助”nginx-m”来确认。" class="headerlink" title="tengine在编译安装时默认会编译ngx_http_reqstat_module模块，除非通过–without-http_reqstat_module指明不编译此模块，或通过–with-http_reqstat_module=shared编译为so模块。使用so模块加载的话，请确保其顺序在”ngx_http_lua_module”之后。可以借助”nginx -m”来确认。"></a>tengine在编译安装时默认会编译ngx_http_reqstat_module模块，除非通过–without-http_reqstat_module指明不编译此模块，或通过–with-http_reqstat_module=shared编译为so模块。使用so模块加载的话，请确保其顺序在”ngx_http_lua_module”之后。可以借助”nginx -m”来确认。</h6></li><li><h6 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">  req_status_zone server &quot;$host,$uri&quot; 20M;</span><br><span class="line">  req_status_zone_add_indicator server $limit;</span><br><span class="line"></span><br><span class="line">  server&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.madblog.cn</span><br><span class="line">    access_log   /var/log/nginx/status.access.log logstash_json buffer=33k flush=5s;</span><br><span class="line">    error_log  /var/log/nginx/status.error.log;</span><br><span class="line"></span><br><span class="line">    set $limit 0;</span><br><span class="line">    if ($arg_limit = &#x27;1&#x27;) &#123; set $limit 1; &#125;</span><br><span class="line"></span><br><span class="line">    location /request_stats &#123;</span><br><span class="line">      req_status_show;</span><br><span class="line">      req_status_show_field conn_total req_total rt ups_rt ups_req http_2xx http_3xx http_4xx http_5xx http_other_status $limit;</span><br><span class="line">    &#125;</span><br><span class="line">    req_status server;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>req_status_zone</strong></p><ul><li>语法：req_status_zone [name] [string] [size]</li><li>位置：http</li><li>创建统计使用的共享内存。zone_name是共享内存的名称，value用于定义key，支持变量。size是共享内存的大小。</li></ul></li><li><p><em>req_status_zone_add_indicator**</em></p><ul><li>语法：req_status_zone_add_indicator zone_name $var1 [$var2 […]]_</li><li>通过变量增加自定义字段，新增加的字段目前会展现在每行的末尾。</li></ul></li><li><p><strong>req_status</strong></p><ul><li>语法：req_status [zone1] [zone2]</li><li>位置：http、server、location</li><li>在该位置启用请求状态。你可以按需求指定多个请求状态区域。</li></ul></li><li><p><strong>req_status_show</strong></p><ul><li>语法：req_status_show on</li><li>位置：location</li><li>在当前位置启用请求状态处理程序。</li></ul></li><li><p><strong>req_status_zone_key_length</strong></p><ul><li>语法：req_status_zone_key_length zone_name length</li><li>位置：location</li><li>定义某个共享内存块中key的最大长度，默认值104。key中超出的部分会被截断。</li></ul></li><li><p><strong>req_status_zone_recycle</strong></p><ul><li>语法：req_status_zone_recycle zone_name times seconds</li><li>位置：定义某个共享内存块过期数据的回收。回收在共享内存耗尽时自动开启。只会回收访问频率低于设置值的监控数据。频率定义为 times / seconds，默认值为10r/min。即：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req_status_zone_recycle demo_zone 10 60;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>每行默认格式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kv,bytes_in,bytes_out,conn_total,req_total,http_2xx,http_3xx,http_4xx,http_5xx,http_other_status,rt,ups_req,ups_rt,ups_tries,http_200,http_206,http_302,http_304,http_403,http_404,http_416,http_499,http_500,http_502,http_503,http_504,http_508,http_other_detail_status,http_ups_4xx,http_ups_5xx</span><br></pre></td></tr></table></figure></li><li><p><strong>各字段解释</strong></p><ul><li>kv 计算得到的req_status_zone指令定义变量的值，最大长度可配置，默认104B，超长的部分截断</li><li>bytes_in 从客户端接收流量总和</li><li>bytes_out 发送到客户端流量总和</li><li>conn_total 处理过的连接总数</li><li>req_total 处理过的总请求数</li><li>http_2xx 2xx请求的总数</li><li>http_3xx 3xx请求的总数</li><li>http_4xx 4xx请求的总数</li><li>http_5xx 5xx请求的总数</li><li>http_other_status 其他请求的总数</li><li>rt rt的总数</li><li>ups_req 需要访问upstream的请求总数</li><li>ups_rt 访问upstream的总rt</li><li>ups_tries upstram总访问次数</li><li>http_200 200请求的总数</li><li>http_206 206请求的总数</li><li>http_302 302请求的总数</li><li>http_304 304请求的总数</li><li>http_403 403请求的总数</li><li>http_404 404请求的总数</li><li>http_416 416请求的总数</li><li>http_499 499请求的总数</li><li>http_500 500请求的总数</li><li>http_502 502请求的总数</li><li>http_503 503请求的总数</li><li>http_504 504请求的总数</li><li>http_508 508请求的总数</li><li>http_other_detail_status 非以上13种status code的请求总数</li><li>http_ups_4xx upstream返回4xx响应的请求总数</li><li>http_ups_5xx upstream返回5xx响应的请求总数</li><li>可以用”req_status_show_field”指令定义输出格式。左侧栏是字段的名字。</li></ul></li><li><p><strong>测试请求指令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v 127.0.0.1/request_stats</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tengine </tag>
            
            <tag> Nginx </tag>
            
            <tag> Influxdb </tag>
            
            <tag> Grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zaibbix Preprocessing 预处理json</title>
      <link href="posts/447db89dfafcd0d8.html"/>
      <url>posts/447db89dfafcd0d8.html</url>
      
        <content type="html"><![CDATA[<h6 id="Zabbix-3-4版本更新了许多新功能，其中一个监控项功能Preprocessing，根据官方说明文档，在监控项收集的数据存储到数据库前，预先对数据进行处理。"><a href="#Zabbix-3-4版本更新了许多新功能，其中一个监控项功能Preprocessing，根据官方说明文档，在监控项收集的数据存储到数据库前，预先对数据进行处理。" class="headerlink" title="Zabbix 3.4版本更新了许多新功能，其中一个监控项功能Preprocessing，根据官方说明文档，在监控项收集的数据存储到数据库前，预先对数据进行处理。"></a>Zabbix 3.4版本更新了许多新功能，其中一个监控项功能Preprocessing，根据官方说明文档，在监控项收集的数据存储到数据库前，预先对数据进行处理。</h6><h6 id="例如我想监控tengine或者hadoop集群的状态，调用接口可以返回json。传统做法是一个监控项item取一个监控key的值，那我有二三十个集群状态项需要监控，每个监控项调用一次返回相同的json，就凭白耗费了很多性能。而自动发现也同样不试用于这类监控的处理，自动发现多用于配置一套规则，自动发现成多组相似类型监控，也不好处理嵌套的json，非json类型的字符串就更不能处理了。Preprocessing功能就很好的解决了这方面的问题。"><a href="#例如我想监控tengine或者hadoop集群的状态，调用接口可以返回json。传统做法是一个监控项item取一个监控key的值，那我有二三十个集群状态项需要监控，每个监控项调用一次返回相同的json，就凭白耗费了很多性能。而自动发现也同样不试用于这类监控的处理，自动发现多用于配置一套规则，自动发现成多组相似类型监控，也不好处理嵌套的json，非json类型的字符串就更不能处理了。Preprocessing功能就很好的解决了这方面的问题。" class="headerlink" title="例如我想监控tengine或者hadoop集群的状态，调用接口可以返回json。传统做法是一个监控项item取一个监控key的值，那我有二三十个集群状态项需要监控，每个监控项调用一次返回相同的json，就凭白耗费了很多性能。而自动发现也同样不试用于这类监控的处理，自动发现多用于配置一套规则，自动发现成多组相似类型监控，也不好处理嵌套的json，非json类型的字符串就更不能处理了。Preprocessing功能就很好的解决了这方面的问题。"></a>例如我想监控tengine或者hadoop集群的状态，调用接口可以返回json。传统做法是一个监控项item取一个监控key的值，那我有二三十个集群状态项需要监控，每个监控项调用一次返回相同的json，就凭白耗费了很多性能。而自动发现也同样不试用于这类监控的处理，自动发现多用于配置一套规则，自动发现成多组相似类型监控，也不好处理嵌套的json，非json类型的字符串就更不能处理了。Preprocessing功能就很好的解决了这方面的问题。</h6><h5 id="Preprocessing功能列表"><a href="#Preprocessing功能列表" class="headerlink" title="Preprocessing功能列表"></a>Preprocessing功能列表</h5><table><thead><tr><th>转换</th><th>描述</th></tr></thead><tbody><tr><td>Custom multiplier</td><td>将值乘以指定的整数或浮点值。使用此选项将以KB，MBps等接收的值转换为B，Bps，否则Zabbix无法正确设置前缀（K，M，G等）。从Zabbix 2.2开始，也支持使用科学符号。 例如。 1e + 70。</td></tr><tr><td>Right trim</td><td>从值的末尾删除指定的字符。</td></tr><tr><td>Left trim</td><td>从值的起始处删除指定的字符。</td></tr><tr><td>Trim</td><td>从值的起始和结尾删除指定的字符。</td></tr><tr><td>Regular expression</td><td>将值与<pattern>正则表达式匹配，并用&lt;output&gt;替换值。 正则表达式支持用\N序列提取最多10个捕获的组。\ 参数: <p>pattern - 正则表达式 <p>output - 输出格式化模板。一个\N（其中N = 1 … 9）转义序列被替换为第N个匹配组。</td></tr><tr><td>Boolean to decimal</td><td>将值从布尔格式转换为十进制。文本表示被转换为0或1.因此，“TRUE”存储为1，“FALSE”存储为0.所有值都以不区分大小写的方式进行匹配。当前被认为的布尔值值如下：<p>TRUE - true, t, yes, y, on, up, running, enabled, available <p>FALSE - false, f, no, n, off, down, unused, disabled, unavailable <p>此外，任何非零数值都被认为是TRUE，0被认为是FALSE。</td></tr><tr><td>Octal to decimal</td><td>将八进制格式的值转换为十进制。</td></tr><tr><td>Hexadecimal to decimal</td><td>将值从十六进制格式转换为十进制。</td></tr><tr><td>Delta</td><td>计算当前值和上一个值之间的差值。评估为value-prev_value，其中 value - current value; prev_value - 以前收到的值每个项目只允许一个delta操作。</td></tr><tr><td>Delta per second</td><td>计算每秒速度的值变化（当前值和上一个值的差值）。<p>计算为（value-prev_value）/（time-prev_time），其中 value - 当前值; prev_value - 当前收到的值; time - 当前时间戳，prev_time - 以前值的时间戳。<p>这个设置是非常有用的，以获得每秒不断增长的速度值。 如果当前值小于上一个值，Zabbix将丢弃该差异（不存储）并等待另一个值。这有助于正常工作，例如，32位SNMP计数器的包装（溢出）。<p>注意: 由于此计算可能产生浮点数，建议将‘Type  of information‘ 设置为 Numeric (float)，即使传入的原始值是整数。  这对于小数部分尤其重要。 如果浮点值很大并且可能超过‘float‘字段长度，在这种情况下，整个值可能会丢失，实际上建议使用Numeric（无符号），因此只会修剪小数部分。<p>每个监控项只允许一个delta操作。</td></tr></tbody></table><h4 id="以json类型处理为例"><a href="#以json类型处理为例" class="headerlink" title="以json类型处理为例"></a>以json类型处理为例</h4><ul><li><p>主监控项通过配置如下，通过监控项调用脚本，得到json。<br><a href="https://imgchr.com/i/kXTMsf"><img src="https://s2.ax1x.com/2019/03/05/kXTMsf.md.jpg" alt="kXTMsf.md.jpg"></a></p></li><li><p>监控项调用的脚本返回的json如下<br><img src="https://s2.ax1x.com/2019/03/05/kXTtWn.jpg" alt="kXTtWn.jpg"></p></li><li><p>配置子监控项如下，主要是类型选择「相关项目」，英文版为「Dependent item」。「主要项/Master item」选择配置好的主监控项。<br><a href="https://imgchr.com/i/kXT4eO"><img src="https://s2.ax1x.com/2019/03/05/kXT4eO.md.jpg" alt="kXT4eO.md.jpg"></a></p></li><li><p>在「进程/Preprocessing」中选择：</p><ul><li>Name: JSON Path</li><li>Parameters: $.yourkey</li><li>yourkey是指主监控项获得的json中对应的key。<br><a href="https://imgchr.com/i/kXTXOf"><img src="https://s2.ax1x.com/2019/03/05/kXTXOf.md.jpg" alt="kXTXOf.md.jpg"></a></li></ul></li><li><p>如此，就可以运行一次脚本，获取一次json，每个key生成对应的监控项了。对应非json类型的字符串，可以配置正则来获取需要的字符串。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
            <tag> Preprocessing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本与编程笔记</title>
      <link href="posts/63396f8432c139a8.html"/>
      <url>posts/63396f8432c139a8.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-expr-命令"><a href="#1-expr-命令" class="headerlink" title="1. expr 命令"></a>1. expr 命令</h3><ul><li><p>expr命令允许在命令行上处理数学表达式</p><ul><li>例如</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@madking:😂 ~ # expr 1 \| 2</span><br><span class="line">1</span><br></pre></td></tr></table></figure></li><li><p>expr 命令操作符记录</p></li></ul><h3 id="2、if-需要注意的"><a href="#2、if-需要注意的" class="headerlink" title="2、if 需要注意的"></a>2、if 需要注意的</h3><ul><li><p>if [ -n “$var1” ];then</p><ul><li>判断var1变量的长度是否为非零，为非零则返回true，为零则返回false</li><li>-n 判断变量是否为空时，变量必须加引号，否则 if就会认为 [ -n ] 是一个字符串，这样 if [ -n ],总会进入判断。、</li></ul></li><li><p>if [ -z “$var1” ];then</p><ul><li>判断var1变量的长度是否为零，为零则返回true，为非零则返回flase</li></ul></li><li><p>if [ ‘aaa’ &gt; ‘bbb’ ];then</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@madking:😂 ~ # if [ &#x27;aaa&#x27; &gt; &#x27;bbb&#x27; ];then</span><br><span class="line"><span class="meta">then&gt;</span><span class="bash"> <span class="built_in">echo</span> yes</span></span><br><span class="line"><span class="meta">then&gt;</span><span class="bash"> <span class="keyword">fi</span></span></span><br><span class="line">yes</span><br><span class="line">root@madking:😂 ~ # ls bbb</span><br><span class="line">bbb</span><br></pre></td></tr></table></figure><ul><li><p>单中括号里的大于小于号，需要进行转义，否则就会当成重定向，if的判断里’aaa’本来比’bbb’小，不会输出yes。但是因为实际是执行了重定向，新生成了bbb文件，执行是成功的，$?=0，所以实际是输出了yes，并且在当前目录生称了bbb文件。</p></li><li><p>双括号 (( ))</p><ul><li>双括号允许在比较过程中使用高级的数学表达式</li><li>var++ val– ++val –val ! ~ ** &lt;&lt; &gt;&gt; &amp; | &amp;&amp; || 等</li></ul></li><li><p>双方括号命令提供了针对字符串比较的高级特性，除了标准字符串比较，还提供了模式匹配。</p></li></ul></li></ul><h3 id="3、脚本变量"><a href="#3、脚本变量" class="headerlink" title="3、脚本变量"></a>3、脚本变量</h3><ul><li><p>脚本获取参数 $1-$9,${10},${11},大于9用大括号</p></li><li><p>$0参数获取shell在命令行启动的脚本名</p></li><li><p>./test.sh 执行则$0为 ./test.sh</p></li><li><p>获取文件名称使用 basename $0</p></li><li><p>$# 参数总个数</p></li><li><p>获取最后一个参数不能用</p></li><li><p>$* 和 $@ 都表示所有命令行参数，但是$* 会将所有参数当成一个单词，而$@会将每个参数当做一个单词，具体表现在for循环时，$*会输出一行整体参数，$@会每行输出一个参数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat test12.sh</span> </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> testing $* and <span class="variable">$@</span></span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash">echoM</span></span><br><span class="line">count=1</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="keyword">for</span> param <span class="keyword">in</span> <span class="string">&quot;$*&quot;</span></span></span><br><span class="line">do</span><br><span class="line">   echo &quot;\$* Parameter #$count = $param&quot;</span><br><span class="line">   count=$[ $count + 1 ]</span><br><span class="line">done</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="built_in">echo</span></span></span><br><span class="line">count=1</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="keyword">for</span> param <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span></span><br><span class="line">do</span><br><span class="line">   echo &quot;\$@ Parameter #$count = $param&quot;</span><br><span class="line">   count=$[ $count + 1 ]</span><br><span class="line">done</span><br><span class="line"><span class="meta">$</span></span><br><span class="line"><span class="bash">$ ./test12.sh rich barbara katie jessica</span></span><br><span class="line"><span class="meta">$</span><span class="bash">* Parameter <span class="comment">#1 = rich barbara katie jessica</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">@ Parameter <span class="comment">#1 = rich</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">@ Parameter <span class="comment">#2 = barbara</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">@ Parameter <span class="comment">#3 = katie</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">@ Parameter <span class="comment">#4 = jessica</span></span></span><br></pre></td></tr></table></figure></li><li><p>重定向</p><ul><li><p>临时重定向，echo ‘this is an error’ &gt;&amp;2</p></li><li><p>永久重定向，exec 2&gt;testerror</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat test10</span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> redirecting all output to a file</span></span><br><span class="line">exec 1&gt;testout</span><br><span class="line">echo &quot;This is a test of redirecting all output&quot;</span><br><span class="line">echo &quot;from a script to another file.&quot;</span><br><span class="line">echo &quot;without having to redirect every individual line&quot;</span><br><span class="line"><span class="meta">$</span><span class="bash"> ./test10</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat testout</span></span><br><span class="line">This is a test of redirecting all output</span><br><span class="line">from a script to another file.</span><br><span class="line">without having to redirect every individual line</span><br><span class="line"><span class="meta">$</span></span><br></pre></td></tr></table></figure></li><li><p>read 读取重定向后的输入，将文件重定向到输入中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat test12</span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> redirecting file input</span></span><br><span class="line">exec 0&lt; testfile</span><br><span class="line">count=1</span><br><span class="line">while read line</span><br><span class="line">do</span><br><span class="line">   echo &quot;Line #$count: $line&quot;</span><br><span class="line">   count=$[ $count + 1 ]</span><br><span class="line">done</span><br><span class="line"><span class="meta">$</span><span class="bash"> ./test12</span></span><br><span class="line">Line #1: This is the first line.</span><br><span class="line">Line #2: This is the second line.</span><br><span class="line">Line #3: This is the third line.</span><br></pre></td></tr></table></figure></li><li><p>文件描述符的试用实例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat test15 9 <span class="comment">#!/bin/bash</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> redirecting input file descriptors</span></span><br><span class="line">exec 6&lt;&amp;0 10 exec 0&lt; testfile</span><br><span class="line">count=1 11 while read line;do</span><br><span class="line">  echo &quot;Line #$count: $line&quot;  </span><br><span class="line">  count=$[ $count + 1 ] 12</span><br><span class="line">done</span><br><span class="line">exec 0&lt;&amp;6</span><br><span class="line">read -p &quot;Are you done now? &quot; answer</span><br><span class="line">case $answer in </span><br><span class="line">  Y|y) echo &quot;Goodbye&quot;;;</span><br><span class="line">  N|n) echo &quot;Sorry, this is the end.&quot;;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><ul><li>该脚本展示了shell的描述符的重定向用例，在将0从屏幕的读取重定向到从文件中读取，读取完成后下文中如果需要再次试用0描述符从屏幕中读取则需要再次重定向回屏幕。脚本中试用了自定义的6描述符来存储0描述符修改前的状态。</li></ul></li><li><p>关闭文件描述符</p><ul><li>exec 3&gt;&amp;-</li><li>要关闭文件描述符，将它重定向到特殊符号&amp;-。</li></ul></li><li><p>列出打开的文件描述符</p><ul><li>lsof命令会列出整个Linux系统打开的所有文件描述符。</li></ul></li></ul></li><li><p>tee命令相当于管道的一个T型接头。它将从STDIN过来的数据同时发往两处。一处是 STDOUT，另一处是tee命令行所指定的文件名。tee默认使用覆盖模式，如果想追加则需要添加参数-a。</p></li></ul><h3 id="4、后台模式运行脚本"><a href="#4、后台模式运行脚本" class="headerlink" title="4、后台模式运行脚本"></a>4、后台模式运行脚本</h3><ul><li>jobs查看分配给shell的作业<ul><li>jobs命令可以查看分配给shell的作业。jobs命令会显示这两个已停止/运行中的作业，以及 它们的作业号和作业中使用的命令。</li><li>要想查看作业的PID，可以在jobs命令中加入-l选项 jobs -l。</li><li>jobs输出中带加号的是默认作业，带减号的会在当前默认作业即带加号的作业完成后成为默认作业。</li></ul></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>-l</td><td>列出进程的PID以及作业号</td></tr><tr><td>-n</td><td>只列出上次shell发出的通知后改变了状态的作业</td></tr><tr><td>-p</td><td>只列出作业的PID</td></tr><tr><td>-r</td><td>只列出运行中的作业</td></tr><tr><td>-s</td><td>只列出已停止的作业</td></tr></tbody></table><ul><li>后台符&amp;运行的脚本会挂在当前的终端会话(类似pts/0)终端联系在一起。如果终端会话退出，那么后台进程也会随之退出。</li><li>nohup命令运行了一个命令来阻断所有发给该进程的SIGHUP信号。这会在退出终端会话时阻止进程退出。<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nohup ./test1.sh &amp;</span></span><br><span class="line">[1] 3856</span><br><span class="line"><span class="meta">$</span><span class="bash"> nohup: ignoring input and appending output to <span class="string">&#x27;nohup.out&#x27;</span></span></span><br></pre></td></tr></table></figure></li><li>nohup 默认会将该进程的STDOUT和STDERR的消息重定向到一个当前目录的nohup.out的文件中。</li><li>nohup 不加后台符&amp;程序并不会挂到后台，而且会阻塞当前会话。</li><li>每个nohup xxxx  &amp; 都是一个后台运行的job，可以用jobs查看，当然也可以用fg + jobid 调到前台。</li><li>将正在运行的进程停止、后台运行、前台运行<ul><li>例如vim a.txt</li><li>ctl + z 将vim停止运行，终端会跳出vim，展示当前会话shell</li><li>bg 会将当前默认任务（job查看带+号的）放到后台运行</li><li>fg 会将当前默认任务放到前台运行</li><li>bg + jobid 将某一个任务放到后台运行</li><li>fg + jobid 将某一个任务放到前台运行</li></ul></li></ul><h3 id="shell-高级编程"><a href="#shell-高级编程" class="headerlink" title="shell 高级编程"></a>shell 高级编程</h3><h3 id="shell脚本风格指南"><a href="#shell脚本风格指南" class="headerlink" title="shell脚本风格指南"></a>shell脚本风格指南</h3><ul><li><p>所有的错误信息都应该被导向STDERR。</p><ul><li>这使得从实际问题中分离出正常状态变得更容易。推荐使用类似如下函数，将错误信息和其他状态信息一起打印出来。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">err() &#123;</span><br><span class="line">  echo &quot;[$(date +&#x27;%Y-%m-%dT%H:%M:%S%z&#x27;)]: $@&quot; &gt;&amp;2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ! do_something; then</span><br><span class="line">  err &quot;Unable to do_something&quot;</span><br><span class="line">  exit &quot;$&#123;E_DID_NOTHING&#125;&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li></ul><h3 id="工作中遇到的"><a href="#工作中遇到的" class="headerlink" title="工作中遇到的"></a>工作中遇到的</h3><ul><li>主机名不能用下划线 </li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB 修改副本集名称</title>
      <link href="posts/d5cc6ffb1555a830.html"/>
      <url>posts/d5cc6ffb1555a830.html</url>
      
        <content type="html"><![CDATA[<h5 id="生产环境中偶尔会有修改现有副本集名称，或初始化副本集时名称写错需要修改为正确的副本集名称。副本集的信息是写在local数据库的system-replset中的，需要将MongoDB以单节点启动并修改local数据库中的副本集相关信息，然后重新启动并reconfig副本集。"><a href="#生产环境中偶尔会有修改现有副本集名称，或初始化副本集时名称写错需要修改为正确的副本集名称。副本集的信息是写在local数据库的system-replset中的，需要将MongoDB以单节点启动并修改local数据库中的副本集相关信息，然后重新启动并reconfig副本集。" class="headerlink" title="生产环境中偶尔会有修改现有副本集名称，或初始化副本集时名称写错需要修改为正确的副本集名称。副本集的信息是写在local数据库的system.replset中的，需要将MongoDB以单节点启动并修改local数据库中的副本集相关信息，然后重新启动并reconfig副本集。"></a>生产环境中偶尔会有修改现有副本集名称，或初始化副本集时名称写错需要修改为正确的副本集名称。副本集的信息是写在local数据库的system.replset中的，需要将MongoDB以单节点启动并修改local数据库中的副本集相关信息，然后重新启动并reconfig副本集。</h5><h5 id="具体步骤如下"><a href="#具体步骤如下" class="headerlink" title="具体步骤如下"></a>具体步骤如下</h5><ol><li><p>停掉当前副本集所有节点</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; supervisorctl</span><br><span class="line">supervisor&gt; stop mongod_27077</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者 </span></span><br><span class="line">&gt; <span class="built_in">kill</span> -15 xxxx (mongodb的pid)</span><br></pre></td></tr></table></figure></li><li><p>以单节点启动当前副本集所有节点</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; /opt/mongodb/bin/mongod --wiredTigerDirectoryForIndexes --dbpath /data/mongodb/ --port 27077 --maxConns 1000  --quiet --logappend --logpath /data/server/logs_tmp/logs/mongo_27077.log --directoryperdb --nojournal --oplogSize 1000</span><br></pre></td></tr></table></figure></li><li><p>在local库中删除副本集相关信息</p><ul><li><p>例如错把集合名称db_test写成db_text</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; use <span class="built_in">local</span></span><br><span class="line">&gt; var doc = db.system.replset.findOne()</span><br><span class="line">&gt; doc._id = <span class="string">&quot;db_test&quot;</span></span><br><span class="line">&gt; db.system.replset.save(doc)</span><br><span class="line">&gt; db.system.replset.remove(&#123;_id:<span class="string">&#x27;db_text&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>重启副本集所有节点，在启动配置中将副本集名称修改为新的副本集名称</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -15 xxxx (MongoDB的pid)</span><br><span class="line"><span class="comment">#如果是supervisor方式启动，需要修改对应的配置文件中的副本集名称</span></span><br><span class="line">&gt; supervisorctl</span><br><span class="line">supervisor&gt; start mongod_27077</span><br></pre></td></tr></table></figure></li><li><p>重新reconfig为新的副本集</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">    &gt; mongo --port 27077</span><br><span class="line">    test01:PRIMARY&gt; conf= &#123; </span><br><span class="line">    <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;test01&quot;</span>, <span class="string">&quot;members&quot;</span>:[         </span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="string">&quot;_id&quot;</span> : 1,</span><br><span class="line">        <span class="string">&quot;host&quot;</span> : <span class="string">&quot;test01:27077&quot;</span>,</span><br><span class="line">        <span class="string">&quot;priority&quot;</span> : 20</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;             </span><br><span class="line">        <span class="string">&quot;_id&quot;</span> : 2,</span><br><span class="line">        <span class="string">&quot;host&quot;</span> : <span class="string">&quot;test02:27078&quot;</span>,</span><br><span class="line">        <span class="string">&quot;arbiterOnly&quot;</span> : <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="string">&quot;_id&quot;</span> : 3,</span><br><span class="line">       <span class="string">&quot;host&quot;</span> : <span class="string">&quot;test03:27079&quot;</span>,</span><br><span class="line">       <span class="string">&quot;arbiterOnly&quot;</span> : <span class="literal">true</span></span><br><span class="line">    &#125;]  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test01:PRIMARY&gt;  rs.reconfig(conf)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
            <tag> replicate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB从2.xx.xx升级到3.xx.xx版本</title>
      <link href="posts/2a3a458f30e97485.html"/>
      <url>posts/2a3a458f30e97485.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、为什么要升级到3-X"><a href="#一、为什么要升级到3-X" class="headerlink" title="一、为什么要升级到3.X"></a>一、为什么要升级到3.X</h3><ul><li><p>MongoDB 2.6只支持一种给予内存映射技术的存于引擎即MMAP，MongoDB 3.0增加了支持压缩和文档级锁的存储引擎WiredTiger</p></li><li><p>WiredTiger存储引擎的优点如下：</p></li></ul><ol><li><p>支持文档级别并发控制，也就是文档级别锁。提升读写性能，并大大提高并发处理能力。</p></li><li><p>磁盘数据压缩，WiredTiger支持对数据文件进行压缩，压缩选项有：不压缩、Snappy压缩和Zlib压缩，默认使用Snappy压缩选项。从实验结果来看，使用默认的Snappy压缩选项，库文件从35G降到了2.4G，数据文件压缩10倍以上。</p></li><li><p>磁盘文件快速回收：旧版本Mongo在数据库级别分配文件，数据库中的所有集合和索引都混合存储在数据库文件中，所以即 使删掉了某个集合或者索引，占用的磁盘空间也很难及时自动回收。WiredTiger在集合和索引级别分配文件，数据库中的所有集合和索引均存储在单独的 文件中，集合或者索引删除后，对应的存储文件随即删除。</p></li></ol><ul><li>因为存储方式不同，低版本的数据库无法直接升级到WiredTiger存储引擎，只能通过导 出导入数据的方式来实现。</li></ul><h3 id="二、升级步骤"><a href="#二、升级步骤" class="headerlink" title="二、升级步骤"></a>二、升级步骤</h3><ol><li><p>下载<a href="https://www.mongodb.com/download-center?jmp=nav#community">MongoDB 3.2.11版本</a>免安装文件。</p><ul><li>如下图中，选择社区版，选择对应的系统版本，然后点击「All Version Binaries」，选择3.2.11版本MongoDB。当然，如果想安装更高的MongoDB版本，理论上此方法也是可行的，只是我升级到的是3.2.11版本。以下以3.2.11版本来讲。<br><img src="https://s1.ax1x.com/2018/09/17/iZQdnH.jpg" alt="下载MongoDB 3.2.11版本"></li></ul></li><li><p>将下载下来的软件包解压，然后拷贝到/opt目录下</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; tar xvzf mongodb-linux-x86_64-ubuntu1404-3.2.11.tgz</span><br><span class="line">&gt; cp mongodb-linux-x86_64-ubuntu1404-3.2.11 /opt/mongodb-3.2.11</span><br></pre></td></tr></table></figure></li><li><p>mongodump 导出旧版MongoDB中数据</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; nohup mongodump -h 127.0.0.1 --port 27077   --oplog -o  /mnt/datatmp/dbbak/  2&gt;&amp;1 &gt; /tmp/dump.log &amp;</span><br></pre></td></tr></table></figure><ul><li>如果是停库导出数据，可以不加–oplog，如果是在下导出的，需要添加–oplog，在导入时指令restore需要加–oplogReplay参数，以保证数据的一致性。</li></ul></li><li><p> 停掉旧版MongoDB，以单节点启动新版MongoDB</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    &gt; <span class="built_in">kill</span> -15 9224 <span class="comment">#9224 为MongoDB的pid，当然如果用了supervisor的话，可以用其他方式来停止。</span></span><br><span class="line">    &gt; /opt/mongodb/bin/mongod --wiredTigerDirectoryForIndexes --dbpath /mnt/datatmp/mongodb --port 27001 --maxConns 3000 --quiet  --logpath /mnt/datatmp/newdb.log --directoryperdb --oplogSize 1000 --fork    ```</span><br><span class="line"></span><br><span class="line">5. 导入数据    到新版MongoDB</span><br><span class="line">    - 进入导出的数据文件中，删除admin库文件，因为3.x之后的MongoDB默认没有admin库，不删除会导致导入时报错。</span><br><span class="line"></span><br><span class="line">    - 如果库文件过多，例如测试环境一个实例跑了二三百个DB，可能在导入时报打开文件数过多的错误，解决方法：一种是将导出文件平均分成n个部分，分布导入，oplog在最后一组中。另一种方法是设置<span class="built_in">ulimit</span> -n 655350,极度的增大当前用户可打开的文件个数。</span><br><span class="line"></span><br><span class="line">    - 为了防止失败后需要删除数据重新导入，可以将导出数据分组然后加入参数<span class="string">&quot;--drop&quot;</span>，在导入当前库时如果已存在当前库则删除该库后再导入。</span><br><span class="line">    </span><br><span class="line">    ```bash</span><br><span class="line">    &gt; nohup /opt/mongodb/bin/mongorestore --host 127.0.0.1 --port  27001 --oplogReplay /mnt/datatmp/newdbbak --drop 2&gt;&amp;1 &gt;/tmp/restore.log &amp;</span><br></pre></td></tr></table></figure></li><li><p>将新版MongoDB初始化为副本集</p><ul><li><p>以副本集方式启动新版MongoDB</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/mongodb/bin/mongod --wiredTigerDirectoryForIndexes --dbpath /data/mongodb/ --port 28077 --maxConns 1000  --quiet --logappend --logpath /data/server/logs_tmp/logs/mongodb_27077.log --directoryperdb --nojournal --oplogSize 1000 --replSet test01</span><br></pre></td></tr></table></figure></li><li><p>以同样方式启动其他节点，可使用物理拷贝主节点文件或初始化集群后MongoDB自动同步数据的方法初始化从节点。</p></li><li><p>初始化副本集</p><pre><code>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">test01:PRIMARY&gt; conf= &#123; </span><br><span class="line">    <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;test01&quot;</span>, <span class="string">&quot;members&quot;</span>:[         </span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="string">&quot;_id&quot;</span> : 1,</span><br><span class="line">        <span class="string">&quot;host&quot;</span> : <span class="string">&quot;test01:27077&quot;</span>,</span><br><span class="line">        <span class="string">&quot;priority&quot;</span> : 20</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;             </span><br><span class="line">        <span class="string">&quot;_id&quot;</span> : 2,</span><br><span class="line">        <span class="string">&quot;host&quot;</span> : <span class="string">&quot;test02:27078&quot;</span>,</span><br><span class="line">        <span class="string">&quot;arbiterOnly&quot;</span> : <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="string">&quot;_id&quot;</span> : 3,</span><br><span class="line">       <span class="string">&quot;host&quot;</span> : <span class="string">&quot;test03:27079&quot;</span>,</span><br><span class="line">       <span class="string">&quot;arbiterOnly&quot;</span> : <span class="literal">true</span></span><br><span class="line">    &#125;]  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test01:PRIMARY&gt;  rs.initiate(conf)</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ol><ul><li>mongodb在2.6版本之后不允许索引大于1M，否则会报错，如果在导入时因索引报错中断导入，</li><li><code>-</code> 有如下两种方法：<ul><li>一是在 mongorestore 中加上 noIndexRestore 不恢复索引，注意此时意味着恢复完成后要手动对每一个数据库的每一个文档重建索引</li><li>一是在 编辑 collection.metadata.json 文件，把与那个索引有关的语句删除掉</li></ul></li><li>在实际操作中并没有遇到上述中断的情况，只是在完成之后登陆MongoDB终端时有警告：</li></ul><pre><code>&gt; WARNING: the collection &#39;testdb.testtb&#39; lacks a unique index on _id. This index is needed for replication to function properly我执行了一次重启警告就消失了，具体原因还需查找文档。</code></pre><h4 id="如此MongoDB·便升级完了，升级之后会发现新版DB数据文件会小了很多很多，原因是-WiredTiger默认使用过了Snappy级别压缩。具体压缩级别可按实际cpu的使用率选择，一般MongoDB对cpu的使用并不是很高，使用Snappy或Zlib压缩，一方面节约了磁盘，另一方面也合理使用了cpu资源。当然导入数据之后检查库文件和表数据也是必须的。"><a href="#如此MongoDB·便升级完了，升级之后会发现新版DB数据文件会小了很多很多，原因是-WiredTiger默认使用过了Snappy级别压缩。具体压缩级别可按实际cpu的使用率选择，一般MongoDB对cpu的使用并不是很高，使用Snappy或Zlib压缩，一方面节约了磁盘，另一方面也合理使用了cpu资源。当然导入数据之后检查库文件和表数据也是必须的。" class="headerlink" title="如此MongoDB·便升级完了，升级之后会发现新版DB数据文件会小了很多很多，原因是 WiredTiger默认使用过了Snappy级别压缩。具体压缩级别可按实际cpu的使用率选择，一般MongoDB对cpu的使用并不是很高，使用Snappy或Zlib压缩，一方面节约了磁盘，另一方面也合理使用了cpu资源。当然导入数据之后检查库文件和表数据也是必须的。"></a>如此MongoDB·便升级完了，升级之后会发现新版DB数据文件会小了很多很多，原因是 WiredTiger默认使用过了Snappy级别压缩。具体压缩级别可按实际cpu的使用率选择，一般MongoDB对cpu的使用并不是很高，使用Snappy或Zlib压缩，一方面节约了磁盘，另一方面也合理使用了cpu资源。当然导入数据之后检查库文件和表数据也是必须的。</h4>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
            <tag> DB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sed常用用法总结</title>
      <link href="posts/ae371d4e5e4ba81c.html"/>
      <url>posts/ae371d4e5e4ba81c.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>a\  在指定行下面插入文本</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;2a\这是追加的内容&#x27;</span> a.txt</span><br></pre></td></tr></table></figure></li><li><p>i\ 在当前行前面插入文本</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;2i\这是追加的内容&#x27;</span> a.txt</span><br></pre></td></tr></table></figure></li><li><p>c\ 把选定的行改为新的文本</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰： sed <span class="string">&#x27;2c\这是追加的内容&#x27;</span> a.txt</span><br></pre></td></tr></table></figure></li><li><p>d 删除选择的行</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰： sed <span class="string">&#x27;2d&#x27;</span> a.txt</span><br></pre></td></tr></table></figure></li><li><p>D 删除莫板块的第一行</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;2D&#x27;</span> a.txt</span><br></pre></td></tr></table></figure></li><li><p>替换指定字符</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰： sed <span class="string">&#x27;s/aa/b/g&#x27;</span> a.txt</span><br></pre></td></tr></table></figure></li><li><p>hold space 与 pattern space</p><ul><li>   g: 将hold space中的内容拷贝到pattern space中，原来pattern space里的内容被覆盖</li><li>   G：将hold space中的内容append到pattern space\n后</li><li>   h: 将pattern space中的内容拷贝到hold space中，原来hold space里的内容被覆盖</li><li>   H: 将pattern space中的内容append到hold space\n后</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;1!G;h;$!d&#x27;</span> file</span><br></pre></td></tr></table></figure><p> <img src="https://s1.ax1x.com/2018/09/10/iiTq9x.png" alt="avatar"></p></li><li><p>删除空白行：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;/^$/d&#x27;</span> file</span><br></pre></td></tr></table></figure></li><li><p>任意定界符</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;s:test:TEXT:g&#x27;</span></span><br><span class="line">    sed <span class="string">&#x27;s|test|TEXT|g&#x27;</span></span><br><span class="line">    sed <span class="string">&#x27;sa\aa&#x27;</span><span class="variable">$a</span><span class="string">&#x27;ag&#x27;</span> a.txt</span><br></pre></td></tr></table></figure></li><li><p>删除文件的第2行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;2d&#x27;</span> file</span><br></pre></td></tr></table></figure></li><li><p>删除文件的第2行到末尾所有行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;2,$d&#x27;</span> file</span><br></pre></td></tr></table></figure></li><li><p>删除文件最后一行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;$d&#x27;</span> file</span><br></pre></td></tr></table></figure></li><li><p>删除文件中所有开头是test的行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;/^test/&#x27;</span>d file</span><br></pre></td></tr></table></figure></li><li><p>已匹配字符串标记&amp;</p><ul><li>正则表达式 \w+ 匹配每一个单词，使用 [&amp;] 替换它，&amp; 对应于之前所匹配到的单词：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：<span class="built_in">echo</span> this is a <span class="built_in">test</span> line | sed <span class="string">&#x27;s/\w\+/[&amp;]/g&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>所有以192.168.0.1开头的行都会被替换成它自已加localhost：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;s/^192.168.0.1/&amp;localhost/&#x27;</span> file</span><br><span class="line">    192.168.0.1localhost</span><br></pre></td></tr></table></figure></li><li><p>子串匹配标记</p><ul><li>匹配给定样式的其中一部分：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">🌰：<span class="built_in">echo</span> this is digit 7 <span class="keyword">in</span> a number | sed <span class="string">&#x27;s/digit \([0-9]\)/\1/&#x27;</span></span><br><span class="line">    this is 7 <span class="keyword">in</span> a number</span><br></pre></td></tr></table></figure><ul><li>命令中 digit 7，被替换成了 7。样式匹配到的子串是 7，(..) 用于匹配子串，对于匹配到的第一个子串就标记为 \1，依此类推匹配到的第二个结果就是 \2，例如：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">🌰：<span class="built_in">echo</span> aaa BBB | sed <span class="string">&#x27;s/\([a-z]\+\) \([A-Z]\+\)/\2 \1/&#x27;</span></span><br><span class="line">    BBB aaa</span><br></pre></td></tr></table></figure><ul><li>love被标记为1，所有loveable会被替换成lovers，并打印出来：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed -n <span class="string">&#x27;s/\(love\)able/\1rs/p&#x27;</span> file</span><br></pre></td></tr></table></figure></li><li><p>组合多个表达式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;表达式&#x27;</span> | sed <span class="string">&#x27;表达式&#x27;</span></span><br><span class="line">    等价于：</span><br><span class="line">    sed <span class="string">&#x27;表达式; 表达式&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>引用</p><ul><li>sed表达式可以使用单引号来引用，但是如果表达式内部包含变量字符串，就需要使用双引号。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">🌰：<span class="built_in">test</span>=hello</span><br><span class="line">    <span class="built_in">echo</span> hello WORLD | sed <span class="string">&quot;s/<span class="variable">$test</span>/HELLO&quot;</span></span><br><span class="line">    HELLO WORLD</span><br></pre></td></tr></table></figure></li><li><p>选定行的范围：,（逗号）</p><ul><li>所有在模板test和check所确定的范围内的行都被打印：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed -n <span class="string">&#x27;/test/,/check/p&#x27;</span> file</span><br></pre></td></tr></table></figure><ul><li>打印从第5行开始到第一个包含以test开始的行之间的所有行：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed -n <span class="string">&#x27;5,/^test/p&#x27;</span> file</span><br></pre></td></tr></table></figure><ul><li>对于模板test和west之间的行，每行的末尾用字符串aaa bbb替换：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;/test/,/west/s/$/aaa bbb/&#x27;</span> file</span><br></pre></td></tr></table></figure></li><li><p>多点编辑：e命令</p><ul><li>-e选项允许在同一行里执行多条命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed -e <span class="string">&#x27;1,5d&#x27;</span> -e <span class="string">&#x27;s/test/check/&#x27;</span> file</span><br></pre></td></tr></table></figure><ul><li>上面sed表达式的第一条命令删除1至5行，第二条命令用check替换test。命令的执行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果。</li><li>和 -e 等价的命令是 –expression：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed --expression=<span class="string">&#x27;s/test/check/&#x27;</span> --expression=<span class="string">&#x27;/love/d&#x27;</span> file</span><br></pre></td></tr></table></figure></li><li><p>从文件读入：r命令</p><ul><li>file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;/test/r file&#x27;</span> filename</span><br></pre></td></tr></table></figure></li><li><p>写入文件：w命令  </p><ul><li>在example中所有包含test的行都被写入file里：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed -n <span class="string">&#x27;/test/w file&#x27;</span> example</span><br></pre></td></tr></table></figure></li><li><p>追加（行下）：a\命令</p><ul><li>将 this is a test line 追加到 以test 开头的行后面：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;/^test/a\this is a test line&#x27;</span> file</span><br></pre></td></tr></table></figure><ul><li>在 test.conf 文件第2行之后插入 this is a test line：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed -i <span class="string">&#x27;2a\this is a test line&#x27;</span> test.conf</span><br></pre></td></tr></table></figure></li><li><p>插入（行上）：i\命令</p><ul><li>将 this is a test line 追加到以test开头的行前面：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;/^test/i\this is a test line&#x27;</span> file</span><br></pre></td></tr></table></figure><ul><li>在test.conf文件第5行之前插入this is a test line：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed -i <span class="string">&#x27;5i\this is a test line&#x27;</span> test.conf</span><br></pre></td></tr></table></figure></li><li><p>下一个：n命令</p><ul><li>如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb，并打印该行，然后继续：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;/test/&#123; n; s/aa/bb/; &#125;&#x27;</span> file</span><br></pre></td></tr></table></figure></li><li><p>变形：y命令</p><ul><li>把1~10行内所有abcde转变为大写，注意，正则表达式元字符不能使用这个命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;1,10y/abcde/ABCDE/&#x27;</span> file</span><br></pre></td></tr></table></figure></li><li><p>退出：q命令</p><ul><li>打印完第10行后，退出sed</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed <span class="string">&#x27;10q&#x27;</span> file</span><br></pre></td></tr></table></figure></li><li><p>保持和获取：h命令和G命令</p><ul><li>在sed处理文件的时候，每一行都被保存在一个叫模式空间的临时缓冲区中，除非行被删除或者输出被取消，否则所有被处理的行都将 打印在屏幕上。接着模式空间被清空，并存入新的一行等待处理。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed -e <span class="string">&#x27;/test/h&#x27;</span> -e <span class="string">&#x27;$G&#x27;</span> file</span><br></pre></td></tr></table></figure><ul><li>在这个例子里，匹配test的行被找到后，将存入模式空间，h命令将其复制并存入一个称为保持缓存区的特殊缓冲区内。第二条语句的意思是，当到达最后一行后，G命令取出保持缓冲区的行，然后把它放回模式空间中，且追加到现在已经存在于模式空间中的行的末尾。在这个例子中就是追加到最后一行。简单来说，任何包含test的行都被复制并追加到该文件的末尾。</li></ul></li><li><p>保持和互换：h命令和x命令</p><ul><li>互换模式空间和保持缓冲区的内容。也就是把包含test与check的行互换：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed -e <span class="string">&#x27;/test/h&#x27;</span> -e <span class="string">&#x27;/check/x&#x27;</span> file</span><br></pre></td></tr></table></figure></li><li><p>脚本scriptfile</p><ul><li>sed脚本是一个sed的命令清单，启动Sed时以-f选项引导脚本文件名。Sed对于脚本中输入的命令非常挑剔，在命令的末尾不能有任何空白或文本，如果在一行中有多个命令，要用分号分隔。以#开头的行为注释行，且不能跨行。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed [options] -f scriptfile file(s)</span><br></pre></td></tr></table></figure></li><li><p>打印奇数行或偶数行</p><ul><li>方法1：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed -n <span class="string">&#x27;p;n&#x27;</span> test.txt  <span class="comment">#奇数行</span></span><br><span class="line">    sed -n <span class="string">&#x27;n;p&#x27;</span> test.txt  <span class="comment">#偶数行</span></span><br></pre></td></tr></table></figure><ul><li>方法2：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">🌰：sed -n <span class="string">&#x27;1~2p&#x27;</span> test.txt  <span class="comment">#奇数行</span></span><br><span class="line">    sed -n <span class="string">&#x27;2~2p&#x27;</span> test.txt  <span class="comment">#偶数行</span></span><br></pre></td></tr></table></figure></li><li><p>打印匹配字符串的下一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">🌰：grep -A 1 SCC URFILE</span><br><span class="line">    sed -n <span class="string">&#x27;/SCC/&#123;n;p&#125;&#x27;</span> URFILE</span><br><span class="line">    awk <span class="string">&#x27;/SCC/&#123;getline; print&#125;&#x27;</span> URFILE</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sed </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx报错:『upstream response is buffered to a temporary file 』</title>
      <link href="posts/3a67d943aecf0d77.html"/>
      <url>posts/3a67d943aecf0d77.html</url>
      
        <content type="html"><![CDATA[<h3 id="需求与问题"><a href="#需求与问题" class="headerlink" title="需求与问题"></a>需求与问题</h3><p>访问新项目网站发现有静态资源获取failed，图片经常无法显示，刷新偶尔图片能显示出来。<br>查看nginx日志，有error.log报错：</p><blockquote><p>【2017/07/21 22:53:12 [warn] 22402#0: *484 an upstream response is buffered to a temporary file /var/tmp/nginx/proxy//6/01/0000000016 while reading upstream, client: 106.121.13.193, server: wap.example.com, request: “GET /source/images/applyfristbg.jpg HTTP/1.1”, upstream: “<a href="http://127.0.0.1:8081/source/images/applyfristbg.jpg&quot;">http://127.0.0.1:8081/source/images/applyfristbg.jpg&quot;</a>, host: “wap.example.com”, referrer: “<a href="http://wap.example.com/source/css/apply-first-7ae1ca00a910468d350b293787c7e95dfbebd675.css%E2%80%9D%E3%80%91">http://wap.example.com/source/css/apply-first-7ae1ca00a910468d350b293787c7e95dfbebd675.css”】</a></p></blockquote><h3 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h3><ul><li>1、是因为nginx默认的buffer太小，请求头header太大时会出现缓存不足，写入到了磁盘中，造成访问中断。</li><li>2、进而联系前端得知前端为了SEO，在header中加入和不少的中文词汇，header体积那叫一个大。</li></ul><h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>因为nginx+tomcat中，nginx做的proxy，就是反向代理，所以在nginx+tomcat模式中，修改fastcgi_buffer_* 是无效的，需要修改proxy对应的buffer大小。</p><ul><li>对于php+nginx的可以设置为：</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fastcgi_buffer_size</span> <span class="number">512k</span>;</span><br><span class="line"><span class="attribute">fastcgi_buffers</span> <span class="number">6</span> <span class="number">512k</span>;</span><br><span class="line"><span class="attribute">fastcgi_busy_buffers_size</span> <span class="number">512k</span>;</span><br><span class="line"><span class="attribute">fastcgi_temp_file_write_size</span> <span class="number">512k</span>;</span><br></pre></td></tr></table></figure><ul><li>对于tomcat+nginx的可以设置为：</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_buffering</span>    <span class="literal">off</span>;</span><br><span class="line"><span class="attribute">proxy_buffer_size</span>  <span class="number">128k</span>;</span><br><span class="line"><span class="attribute">proxy_buffers</span> <span class="number">100</span>  <span class="number">128k</span>;</span><br><span class="line"><span class="attribute">client_max_body_size</span> <span class="number">100m</span>;</span><br></pre></td></tr></table></figure><ul><li>对于buffer实际修改的大小，需要按实际情况来。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx获取request_body</title>
      <link href="posts/e4dd5bbae50fa621.html"/>
      <url>posts/e4dd5bbae50fa621.html</url>
      
        <content type="html"><![CDATA[<h3 id="需求与问题"><a href="#需求与问题" class="headerlink" title="需求与问题"></a>需求与问题</h3><p>工作中经常接到在nginx日志中打印出post请求的body数据的需求，也就是打印出$request_body。而直接在log_format中添加$request_body，经常会得到空值。</p><h3 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h3><p>查看官网中对$request_body的描述，</p><blockquote><p>$request_body</p><blockquote><ul><li><p>request body</p><p> The variable’s value is made available in locations processed by the proxy_pass, fastcgi_pass, uwsgi_pass, and scgi_pass directives when the request body was read to a memory buffer.</p></li></ul></blockquote></blockquote><p>只有在location中用到proxy_pass, fastcgi_pass, uwsgi_pass或者scgi_pass指令时，request body才会被读取到内存缓冲区中，$request_body变量才有值。</p><p>进一步查找网上文章，request_body在未运行上面所说的proxy_pass等指令配置时，默认会被赋值为空</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(gdb) p r-&gt;request_body</span><br><span class="line">$<span class="number">1</span> = (<span class="keyword">ngx_http_request_body_t</span> *) <span class="number">0x0</span></span><br><span class="line">(gdb)</span><br></pre></td></tr></table></figure><p>nginx中读取POST数据必须要调用ngx_http_read_client_request_body()函数，而默认情况下，这个函数是不会被调用的。</p><p>遇到返回request_body为空的，如果配置没有问题，一般是没有用到上面所列出的proxy_pass等代理配置的，直接return了状态码或者静态资源。例如前端埋点记录日志，大数据部门捕获并记录request_body，拦截非法请求直接返回403并记录请求数据等等。</p><p>没有用到调用ngx_http_read_client_request_body()函数的相关指令，捕获的request_body自然是空了。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>如上所述，要捕获到正确的request_body，就必须使用调用到ngx_http_read_client_request_body()函数的指令。</p><p>通过查阅文章，有如下指令或模块：</p><ul><li>1、proxy_pass指令</li><li>2、fastcgi_pass指令</li><li>3、uwsgi_pass指令</li><li>4、scgi_pass指令</li><li>5、echo_read_request_body指令（ngx_echo模块）</li><li>6、ngx_lu模块（lua脚本）</li></ul><p>前四个属于nginx的基础配置，不在赘述，下面主要讲一下ngx_lua和echo_read_request_body的用法：</p><ul><li><p>1、利用ngx_lua模块</p>  <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span><span class="regexp"> ^~</span> /dump_req_log &#123;</span><br><span class="line">    <span class="attribute">if</span> ($request_method != POST) &#123;</span><br><span class="line">          <span class="attribute">return</span> <span class="number">405</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">lua_need_request_body</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">content_by_lua</span> <span class="string">&#x27;local request_body = ngx.var.request_body&#x27;</span>;</span><br><span class="line">    <span class="attribute">access_log</span> /data/logs/front-end/dump_req.access.log req_log_json buffer=<span class="number">32k</span> flush=<span class="number">5s</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>2、利用ngx_echo模块</p>  <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span><span class="regexp"> ^~</span> /dump_req_log &#123;</span><br><span class="line">    <span class="attribute">if</span> ($request_method != POST) &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">405</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    echo_read_request_body;</span><br><span class="line">    <span class="attribute">access_log</span> /data/logs/front-end/dump_req.access.log req_log_json buffer=<span class="number">32k</span> flush=<span class="number">5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>！！！需要注意的是，在使用echo_read_request_body时，与echo_read_request_body的同级配置里不能有return，否则捕获的request_body将会是空。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> request_body </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
